<!-- $NetBSD: using.xml,v 1.5 2005/04/11 16:38:21 reed Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: using.xml,v 1.5 2005/04/11 16:38:21 reed Exp   -->

<chapter id="using"> <?dbhtml filename="using.html"?>
  <title>pkgsrc を使う</title>

  <sect1 id="getting-started">
    <title>バイナリーパッケージを使って作業する</title>
    
    <para> このセクションは、あなたの機種用にすでに準備されたコンパイル済みのバイナリー
      パッケージを見つけ、取得してインストールする方法について説明します。 </para>

    <sect2>
      <title>バイナリーパッケージの配布場所</title>
      
      <para> コンパイル済みのパッケージは、ftp.NetBSD.orgおよびそのミラー上の、匿名FTPア
        クセスのためのディレクトリー<filename>/pub/NetBSD/packages</filename>に置かれています。
        <command>uname -p</command>で表示されるのと同じサブディレクトリーを選択してください。このディレクト
        リーの中には、カテゴリー毎のサブディレクトリーと、<filename>All</filename>サブディレクトリー
        が存在しています。<filename>All</filename>サブディレクトリーの中には、
        <filename>.tgz</filename>ファイル形式で実際
        のバイナリーがあります。カテゴリー毎のサブディレクトリーは、これらのファイ
        ルへのシンボリックリンクを使用しています (<filename>/usr/pkgsrc/packages</filename>と同じディレ
        クトリー配置です)。 </para>

      <para> CDROMディストリビューションでも、このディレクトリー配置は同じで、単
        にディレクトリーのルートが異なるだけです。たぶん<filename>/cdrom</filename>かどこかの下でしょう。
        正確なディレクトリーは、CDROMのドキュメンテーションを参照してください。 </para>
    </sect2>

    <sect2>
      <title>バイナリーパッケージの使い方</title>
      
      <para> もし、コンパイル済みのパッケージのファイルがCDROM上にある、あるいはハードディ
        スク上にダウンロードされているのであれば、以下のコマンドでインストールする
        ことができます(最初にrootに
        <command>su</command>している事を確認してください):</para>

        <screen><prompt>#</prompt> <userinput>pkg_add /path/to/package.tgz</userinput></screen>

      <para> もし、FTPアクセスが可能で、インストール前にFTPを使ってパッケージをダウンロー
        ドしたくないのであれば、<command>pkg_add</command>にFTPのURLを指定して自動でダウンロードさせる
        事もできます。
        </para>

      <screen><prompt>#</prompt> <userinput>pkg_add ftp://ftp.NetBSD.org/pub/NetBSD/packages/&lt;OSvers&gt;/&lt;arch&gt;/All/package.tgz</userinput></screen>

      <para>ここで &lt;OSvers&gt; や
        &lt;arch&gt; がよくわからない場合は、unameユーティリティーを
        <command>uname -rp</command>のように使って調べられます。 </para>

      <para>また、パッケージを実行するためにあらかじめ必要な他のパッケージがインストー
        ルされるかもしれない事にも注意してください。一緒にインストールされる他のパッ
        ケージも同じ場所に存在していると仮定されます。 </para>

      <para>パッケージをインストールした後に、<varname>PATH</varname>に <filename>/usr/pkg/bin</filename> が含まれている事を確
        認してください。これで、インストールされたプログラムを実際に使い始めること
        ができます。 </para>
    </sect2>

    <sect2>
      <title>警告</title>
    
      <para> &man.pkg.add.1; マニュアルページで警告されている、自分自身で作ったものでないバイナリー
        パッケージをインストールすることが孕む危険性、無思慮にこのようなファイルを
        インストールすることにより、あなたのシステムにセキュリティーホールが生じる
        事についてよく注意してください。 </para>
    </sect2>
  </sect1>

  <sect1>
    <title>ソースからパッケージを構築する</title>
    
    <para> ここでは、パッケージがすでに pkgsrc に含まれていると仮定
      しています。もし、そうでなれば、<xref linkend="developers-guide"/>をご覧ください。 </para>

    <sect2>
      <title>必要なもの</title>

      <para> NetBSD システム上で、ソースからパッケージを構築するためには、
        <quote>comp</quote>および<quote>text</quote>
        配布物一式をインストールしておく必要があります。X11関連のパッケージを
        構築する場合は、さらに<quote>xbase</quote>および<quote>xcomp</quote> 配布物一式も必要です。</para>
    </sect2>
    

    <sect2>
      <title>配布ファイルの取得</title>

      <para>パッケージシステムを構築するためには、
        配布ファイル(未変更のソース)がシステム上に存在していなけれ
        ばなりません。配布ファイルが存在しない場合、pkgsrc は &man.ftp.1;
        を使って自動的に配布ファイルを取得します。</para>

      <para>主要な配布サイトをあなたのところに近いサイトで上書きす
        ることができます。
        <filename>pkgsrc/mk/defaults/mk.conf</filename>の例の、特に<varname>MASTER_SORT</varname>,
        <varname>MASTER_SORT_REGEX</varname>,
        <varname>INET_COUNTRY</varname> 定義を参照してください。これにより、帯域幅
        と時間が節約できるかもしれません。</para>

      <para>これらの設定は、シェルの環境変数でも変更できますし、その設定を今後も有効に
        したければ、
        <filename>/etc/mk.conf</filename>
        ファイルにその定義を書き加えておくこともできます。</para>

      <para>もし、インターネットへ常時接続しておらず、ダウンロードするファイルを知りた
        い場合は、<command>make fetch-list</command>を実行すれば、必要なファイルがわかります。それ
        らの配布ファイルを
        <filename>/usr/pkgsrc/distfiles</filename>に置いてください。</para>
    </sect2>

    <sect2>
      <title>構築とインストール方法</title>

      <para>配布ファイルは取得ずみと仮定します (前節参照)。
        root になって、パッケージのディレクトリーに移動し、
        <command>make</command> を実行します。たとえば、パッケージの各構成要素を構築するには、シェルプロンプトで </para>

      <screen>&cprompt; <userinput>cd misc/figlet</userinput>
&cprompt; <userinput>make</userinput></screen>

      <para>とします。
        また、パッケージの各構成要素をシステムの適切な場所にインストールするには、</para>
	
      <screen>&rprompt; <userinput>make install</userinput></screen>

      <para>とします。パッケージをシステムにインストールするには root 権限が必要です。
        ただし、pkgsrc には<emphasis>必要な時のみ  su する</emphasis>機能があり、
        実際のインストール時にのみ root になることができます</para>

      <para>figlet ユーティリティーを例にあげると、<xref linkend="logs"/>のように構築することに
        より、システムにインストールすることができます。</para>

      <para>プログラムはパッケージツリーのデフォルトルート- <filename>/usr/pkg</filename>にインストール
        されます。もし、このディレクトリーが趣味にあわないのであれば、環境変数
        <varname>LOCALBASE</varname>
        を設定してください。この値はパッケージツリーのルートとして使用さ
        れます。例えば、<filename>/usr/local</filename>を使う場合、
        <varname>LOCALBASE=/usr/local</varname> と設定してください。
        なお、これにはパッケージ専用のディレクトリーを使い、他のプログ
        ラムと共有させないようにします(つまり、 <varname>LOCALBASE=/usr</varname> などとしてはいけませ
        ん)。また、<varname>LOCALBASE</varname>ツリー内には、独自のファイルやディレクトリー
        (<filename>src/</filename>,
        <filename>obj/</filename>, <filename>pkgsrc/</filename>
        のようなもの)は一切追加しないようにしてください。これは、パッ
        ケージシステムがインストールするプログラムなどのファイルが、そこにインストー
        ルされているかもしれない別のファイルと衝突することがないようにするためです。</para>

      <para>いくつかのパッケージは、構築時にいくつかのコンフィギュレーションオプション
        を変えるために<filename>/etc/mk.conf</filename>を参照します。デフォルトの設定項目については、
        <filename>pkgsrc/mk/defaults/mk.conf</filename>をのぞいてみてください。<varname>LOCALBASE</varname>
        といっ
        た環境変数は、pkgsrc使用時に毎回使えるように<filename>/etc/mk.conf</filename>で設定しておくこと
        ができます。</para>

      <para>時々、 パッケージの構築やインストールの際に、<quote>水面下</quote>で何が起きているかを
        見たいことがあります。これは、デバッグのためなのかもしれませんし、好奇心が
        高じたものかもしれません。このような用途に使うための変数がいくつも用意され
        ています。</para>

      <orderedlist>
        <listitem>
          <para>&man.make.1;コマンドを<varname>PKG_DEBUG_LEVEL=2</varname>付きで呼び出すと、大量の情報が表示さ
            れるようになります。たとえば、</para>

          <screen><userinput>make patch PKG_DEBUG_LEVEL=2</userinput></screen>

          <para>は、<quote>patch</quote>の段階および、そこに至るまでに呼び出されるコマンドをすべて表示し
            ます。</para>
        </listitem>

        <listitem>
          <para>特定の&man.make.1;定義の値を知りたい場合は、show-varターゲットとともに、
            <varname>VARNAME</varname>定義を使います。たとえば、
            &man.make.1;変数
            <varname>LOCALBASE</varname>の展開結果を表示するには、以下のようにします。</para>  

          <screen>&cprompt; <userinput>make show-var VARNAME=LOCALBASE</userinput>
/usr/pkg
&cprompt;
          </screen>

        </listitem>
      </orderedlist>

      <para>自分で作った(次章参照)、手動でpkgsrc/packagesに置いた、またはリモートFTPサー
        バーに置かれたバイナリーパッケージをインストール
        したい場合は、"bin-install"ターゲットを使うことができます。このターゲットは、
        - もし可能ならば - &man.pkg.add.1;を使ってバイナリーパッケージをインストールするほ
        か、<command>make package</command>をおこないます。検索先リモートFTPサーバーのリストは
        <varname>BINPKG_SITES</varname>変数に保持され、デフォルトはftp.NetBSD.orgです。&man.pkg.add.1;に与え
        るべきフラグはすべて、<varname>BIN_INSTALL_FLAGS</varname>変数で保持することができます。詳細は
        <filename>pkgsrc/mk/defaults/mk.conf</filename>をご覧ください。</para>

      <para>最後に警告: 標準でない<varname>LOCALBASE</varname>
        の設定をしたシステムの場合は、
        各パッケージのインストール前にこれらを設定するようにしてください。複数のディ
        レクトリーを同じ目的用に分散して使うことはできないからです。そのようなこと
        をすると、pkgsrcはインストール済みのパッケージを正しく検出することができず、
        無惨に失敗することになるでしょう。また、コンパイル済バイナリーパッケージは、
        通常はデフォルトの<varname>LOCALBASE</varname>である
        <filename>/usr/pkg</filename>を使って構築されているので、標準で
        ない<varname>LOCALBASE</varname>を使っている場合は、とにかくコンパイル済バイナリーパッケージを
        インストールしては<emphasis>いけません</emphasis>。</para>
    </sect2>
    
    <sect2>
      <title>コンパイラーを選ぶ</title>

      <para>pkgsrc は、標準では GCC を使ってパッケージを構築します。
        これは /etc/mk.conf で以下の変数を設定して変えることができます。
        </para>

      <variablelist>
        <varlistentry>
          <term><varname>PKGSRC_COMPILER</varname>:</term>

          <listitem>
            <para> パッケージ構築時に使われる一連のコンパイラーを指定する値を並べたものです。
              以下の値を使うことができます。 </para>
            
            <itemizedlist>
              <listitem><para><varname>distcc</varname>:
                分散 C/C++ コンパイラー (連鎖可能)</para>
              </listitem>
                
              <listitem><para><varname>ccache</varname>:
                コンパイラーキャッシュ (連鎖可能)</para>
              </listitem>

              <listitem><para><varname>gcc</varname>:
                GNU C/C++ コンパイラー</para>
              </listitem>

              <listitem><para><varname>mipspro</varname>:
                Silicon Graphics, Inc. MIPSpro (n32/n64)</para>
              </listitem>

              <listitem><para><varname>mipspro</varname>:
                Silicon Graphics, Inc. MIPSpro (o32)</para>
              </listitem>

              <listitem><para><varname>sunpro</varname>:
                Microsystems, Inc. WorkShip/Forte/Sun ONE Studio</para>
              </listitem>
            </itemizedlist>

            <para> 標準では
              <quote><varname>gcc</varname></quote> になります。
              <varname>PKGSRC_COMPILER</varname> の設定には、適切なコンパイラー本体とともに、
              <varname>ccache</varname> と
              <varname>distcc</varname> のいずれかまたは両方を併用することができます。
              たとえば <quote><varname>ccache gcc</varname></quote> のようにします。
              この変数の設定では、コンパイラー本体を示す値を最後に置くようにします。  </para>
	  </listitem>
        </varlistentry>
	
        <varlistentry>
          <term><varname>GCC_REQD</varname>:</term>
          <listitem>
            <para> パッケージの構築用として、最低限必要な
              GCC のバージョンを指定します。システム附属の GCC
              がこの条件を満たさない場合、pkgsrc はそのかわりに使うため、
              GCC のパッケージを構築してインストールします。 </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>
  </sect1>
</chapter>
