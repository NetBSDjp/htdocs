<!-- $NetBSD: devfaq.xml,v 1.7 2006/10/25 14:24:54 rillig Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: devfaq.xml,v 1.7 2006/10/25 14:24:54 rillig Exp   -->

<chapter id="devfaq"> <?dbhtml filename="devfaq.html"?>
<title>よくある質問</title>

	<para>この節では、パッケージ作成中に湧くような疑問と回答を掲載します。
	あなたがお持ちの疑問に対する答がここにない場合は、
	まず、他の節を見てみてください。
	それでも答が見つからなければ、
	<literal>pkgsrc-users</literal> メーリングリストで尋ねてください。</para>

<qandaset>
<qandaentry>

	<question><para><varname>MAKEFLAGS</varname>, 
	<varname>.MAKEFLAGS</varname>, <varname>MAKE_FLAGS</varname>
	の各変数の違いは?</para></question>

	<answer><para><varname>MAKEFLAGS</varname> は、
	pkgsrc 内部で呼び出される &man.make.1; に渡されるフラグであり、
	<varname>MAKE_FLAGS</varname> は、パッケージを構築するときに
	<varname>MAKE_PROGRAM</varname> に渡されるフラグです。
	[FIXME: What is .MAKEFLAGS for?]</para></answer>

</qandaentry>
<qandaentry>

	<question><para><varname>MAKE</varname>, 
	<varname>GMAKE</varname>, <varname>MAKE_PROGRAM</varname>
	の各変数の違いは?</para></question>

	<answer><para><varname>MAKE</varname> は、 pkgsrc の基盤が使う
	&man.make.1; プログラムへのパスです。<varname>GMAKE</varname> は、GNU
	Make へのパスですが、これを使うためには <varname>USE_TOOLS+=gmake</varname>
	する必要があります。<varname>MAKE_PROGRAM</varname> は、
	パッケージの構築に使われる
	Make プログラムへのパスです。</para></answer>

</qandaentry>
<qandaentry>

	<question><para><varname>CC</varname>,
	<varname>PKG_CC</varname>, <varname>PKGSRC_COMPILER</varname>
	の各変数の違いは?</para></question>

	<answer><para><varname>CC</varname> は、本物の C
	コンパイラーへのパスで、pkgsrc の利用者が設定することができます。
	<varname>PKG_CC</varname> は、コンパイラーのラッパーへのパスです。
	<varname>PKGSRC_COMPILER</varname> は、
	コンパイラーへのパスでは<emphasis>なく</emphasis>、使われるコンパイラーの種類です。
	最後の変数に関するさらなる情報は、
	<filename>mk/compiler.mk</filename> をご覧ください。</para></answer>

</qandaentry>
<qandaentry>

	<question><para><varname>BUILDLINK_LDFLAGS</varname>,
	<varname>BUILDLINK_LDADD</varname>,
	<varname>BUILDLINK_LIBS</varname>
	の各変数の違いは?</para></question>

	<answer><para>[FIXME]</para></answer>

</qandaentry>
<qandaentry>

	<question><para><command>make show-var
	VARNAME=BUILDLINK_PREFIX.<replaceable>foo</replaceable></command>
	したら、空だといわれるのはなぜ?</para></question>

	<answer><para>最適化のために、一部の変数は
	<quote>wrapper</quote> の段階以降でしか使えません。
	wrapper の段階を<quote>シミュレート</quote>するには、
	お尋ねのコマンドに <command>PKG_PHASE=wrapper</command>
	を付け加えます。</para></answer>

</qandaentry>
<qandaentry>

	<question><para>
	<literal>${MASTER_SITE_SOURCEFORGE:=package/}</literal> ってどういうこと?
	中身の <literal>:=</literal>
	がわかりません。</para></question>

	<answer><para><literal>:=</literal> は、一見、代入演算子のようですが、
	そうではありません。
	<literal>${LIST:<replaceable>old_string</replaceable>=<replaceable>new_string</replaceable>}</literal>
	という修飾子が &man.make.1; マニュアルページに書かれており、
	<literal>${SRCS:.c=.o}</literal> というのを見たことがあるかもしれませんが、
	これはこの修飾子の特殊な形です。
	この <varname>MASTER_SITE_*</varname> の事例では、
	<replaceable>old_string</replaceable> は空の文字列、
	<replaceable>new_string</replaceable> は
	<literal>package/</literal> です。このため、
	<literal>:</literal> と <literal>=</literal>
	がくっついているのです。</para></answer>

</qandaentry>
<qandaentry>

	<question><para>パッケージ開発者向けの
	メーリングリストはどれ?</para></question>

	<answer><variablelist>

	<varlistentry><term><ulink
	url="http://www.NetBSD.org/MailingLists/index.html#tech-pkg">tech-pkg</ulink></term>

	<listitem><para>pkgsrc 開発関連の技術的な議論のためのメーリングリストです。
	たとえば、pkgsrc の基盤の変更を求めるフィードバック、
	新機能の提案、pkgsrc の新しいプラットフォームへの移植に関する質問、
	パッケージ保守のための助言、多数のパッケージに影響のあるパッチ、
	基盤にバグが見つかったために pkgsrc-users
	からここに場を移された助けの要請などです。</para></listitem></varlistentry>

	<varlistentry><term><ulink
	url="http://www.NetBSD.org/MailingLists/index.html#pkgsrc-bugs">pkgsrc-bugs</ulink></term>

	<listitem><para>&man.send-pr.1; で送られた
	"pkg" カテゴリーのバグレポートはすべてここに流れます。
	ここへバグの報告を直接しないでください。
	バグの報告には、他のいずれかのメーリングリストを使ってください。</para></listitem></varlistentry>

	</variablelist></answer>

</qandaentry>
<qandaentry>

	<question><para>pkgsrc
	の資料はどこにある?</para></question>

	<answer><para>pkgsrc に関する資料がある場所は、
	たくさんあります。</para>

	<itemizedlist>

	<listitem><para>The pkgsrc guide (この文書) は、数多くある
	pkgsrc の部品について説明した章を集めたものですが、
	内容が古くなりがちな章もあります。どの章がそうなのかは、
	示しにくいのですが。</para></listitem>

	<listitem><para>メーリングリストのアーカイブ (<ulink
	url="http://mail-index.NetBSD.org/"/> 参照) では、
	ある機能に関する議論、pkgsrc の基盤の新しい部品の告知や、
	時にはある機能を廃止することにしたという告知などを見ることができます。
	これの便利なところは、各記事に日付がつけられていることです。</para></listitem>

	<listitem><para><filename>mk/</filename>
	ディレクトリーにあるファイルの多くは、冒頭のコメントで、
	そのファイルの目的と、
	pkgsrc 利用者やパッケージ作者による使用方法を説明しています。
	このドキュメンテーションを簡単に見つける方法は、<command>bmake
	help</command> を実行することです。</para></listitem>

	<listitem><para>CVS のログメッセージは豊富な情報源ですが、
	かなり省略して書かれる傾向が
	(特に、頻繁におこなわれる処置に関するログでは) あります。
	何が変わったかを詳細に説明したログもありますが、
	そのようなものは他の pkgsrc 開発者向けのものであって、
	平均的な pkgsrc 利用者向けのものではありません。
	ログメッセージは<emphasis>変更点</emphasis>を記録しているだけなので、
	変更前のことを知らない場合は、
	たいして価値がないかもしれません。</para></listitem>

	<listitem><para>pkgsrc の部品のなかには、<quote>暗黙の文書化</quote>、
	つまり、資料はそのコードを書いた開発者の頭の中にあるだけ、
	というものもあります。このようなものの情報を入手するには、
	<command>cvs annotate</command> コマンドを使ってコードを書いた人を調べて、
	後から他の人が見られるように (前の説明参照)
	<literal>tech-pkg</literal> メーリングリストで尋ねてください。
	担当の開発者がメールを確実に読むようにするため、
	その人に CC してもよいでしょう。</para></listitem>

	</itemizedlist>

	</answer>

</qandaentry>

<qandaentry id="devfaq.too-much-time">
<question><para>少し時間があるんだけど、
何をしたらいい?</para></question>

<answer><para>これは、まだよく尋ねられてはいないのですが、
答えてしまいます。</para>

  <itemizedlist>
    <listitem><para><command>pkg_chk -N</command> (このコマンドは
    <filename role="pkg">pkgtools/pkg_chk</filename> パッケージにあります) を実行します。
    こうすると、インストールしているパッケージについて、
    もっと新しいバージョンがあるが pkgsrc では更新されていないものを教えてくれます。</para></listitem>

    <listitem><para><filename>pkgsrc/doc/TODO</filename> を見ます
    &mdash; このファイルには、提案されている新しいパッケージの一覧と、
    実現したらよい pkgsrc の整理や拡張の一覧が載っています。</para></listitem>

    <listitem><para><ulink
    url="http://pkgsrc-wip.sourceforge.net/">pkgsrc-wip</ulink> review
    メーリングリストでレビュー依頼が出ているパッケージをレビューします。</para></listitem>
  </itemizedlist>
</answer></qandaentry>

</qandaset>
</chapter>
