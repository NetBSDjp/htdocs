<!-- $NetBSD: components.xml,v 1.23 2006/04/21 07:55:16 rillig Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: components.xml,v 1.23 2006/04/21 07:55:16 rillig Exp   -->

<chapter id="components"> <?dbhtml filename="components.html"?>
  <title>パッケージコンポーネント - ファイル、ディレクトリー、およびコンテンツ</title>

  <para>  パッケージを用意する際にはいつも、以下のセクションで述べられている多くのファ
    イルが存在します。 </para>

  <sect1 id="components.Makefile">
    <title><filename>Makefile</filename></title>

    <para>構築、インストールおよびバイナリーパッケージの作成は、すべてパッケージの
      <filename>Makefile</filename>によりコントロールされます。
      <filename>Makefile</filename> には、パッケージに関するさまざまな情報が記述されています。
      たとえば、パッケージをどこで取得するか、
      パッケージをどのように構成、構築、インストールするか、などです。
    </para>

    <para>パッケージの <filename>Makefile</filename> は、
     当該パッケージについて記述した、複数の節からなっています。</para>

    <para>最初の節には、以下に掲げる変数を書きます。
      これらは以下に掲げたままの順で並べるようにします。
      <itemizedlist>

      <listitem><para><varname>DISTNAME</varname> は、当該パッケージの
      web サイトからダウンロードされる配布ファイルの
      基礎となる名前です。</para></listitem>

      <listitem><para><varname>PKGNAME</varname> は、
      pkgsrc が使うパッケージ名です。これは、パッケージ名が <varname>DISTNAME</varname>
      と異なる場合のみ書く必要があります。
      通常、これはディレクトリー名とバージョン番号を合わせたものになります。
      この値は正規表現 <varname>^[A-Za-z0-9][A-Za-z0-9-_.+]*$</varname>
      にマッチする必要があります。すなわち、使える文字は、
      アルファベット・数字・マイナス記号・下線・ピリオド・プラス記号だけであり、
      また、最初の文字はアルファベットまたは数字である必要があります。</para></listitem>

      <listitem><para><varname>CATEGORIES</varname> は、
	    当該パッケージにふさわしいカテゴリーのリストです。
	    pkgsrc の最上層にあるディレクトリーから自由に選ぶことができます。</para>

	<para>現在<varname>CATEGORIES</varname>の値として以下が使用できます。もし複数にまたがる場合、それら
	  の値はスペースで分けられる必要があります:</para>

<programlisting>
    archivers     cross         geography     meta-pkgs     security
    audio         databases     graphics      misc          shells
    benchmarks    devel         ham           multimedia    sysutils
    biology       editors       inputmethod   net           textproc
    cad           emulators     lang          news          time
    chat          finance       mail          parallel      wm
    comms         fonts         math          pkgtools      www
    converters    games         mbone         print         x11
</programlisting>
	</listitem>

	<listitem><para><varname>MASTER_SITES</varname> は、配布ファイルをダウンロード可能な
	    URL のリストです。
	    各 URL はスラッシュで終わる必要があります。</para>
	  <para><varname>MASTER_SITES</varname> には、
	    以下の定義済みのサイトを使うこともできます。</para>

<!-- sort bsd.sites.mk | sed -n 's/\(^MA[A-Z_]*\).*/        ${\1}/p' -->
<programlisting>
    ${MASTER_SITE_APACHE}
    ${MASTER_SITE_BACKUP}
    ${MASTER_SITE_CYGWIN}
    ${MASTER_SITE_DEBIAN}
    ${MASTER_SITE_FREEBSD}
    ${MASTER_SITE_FREEBSD_LOCAL}
    ${MASTER_SITE_GNOME}
    ${MASTER_SITE_GNU}
    ${MASTER_SITE_GNUSTEP}
    ${MASTER_SITE_IFARCHIVE}
    ${MASTER_SITE_MOZILLA}
    ${MASTER_SITE_OPENOFFICE}
    ${MASTER_SITE_PERL_CPAN}
    ${MASTER_SITE_R_CRAN}
    ${MASTER_SITE_SOURCEFORGE}
    ${MASTER_SITE_SUNSITE}
    ${MASTER_SITE_SUSE}
    ${MASTER_SITE_TEX_CTAN}
    ${MASTER_SITE_XCONTRIB}
    ${MASTER_SITE_XEMACS}
</programlisting>

	  <para>もしこれらの予め定義されたサイトの1つを選んだ場合、そのサイトのサブディレク
	    トリーを指定することが必要となるかもしれません。これらのマクロは複数の実際
	    のサイトに展開されるかもしれませんので、サブディレクトリーを指定する場合は、
	    以下の表記を<emphasis>使わなければなりません</emphasis>:</para>

<programlisting>
    ${MASTER_SITE_GNU:=subdirectory/name/}
    ${MASTER_SITE_SOURCEFORGE:=project_name/}
</programlisting>

	  <para>サブディレクトリー名の後のスラッシュ/に注意してください。</para>

	  <para>パッケージに複数の
	    <varname>DISTFILES</varname>または複数の
	    <varname>PATCHFILES</varname>があって、それらの配布元サ
	    イトが異なる場合は、<varname>SITES.foo</varname>を、ファイル
	    <quote>foo</quote>があるURIを列挙したものに設定
	    します。<quote>foo</quote>にはサフィックスを含めます。たとえば以下のようにします。</para>

<programlisting>
    DISTFILES=      ${DISTNAME}${EXTRACT_SUFX}
    DISTFILES+=     foo-file.tar.gz
    SITES.foo-file.tar.gz= \
            http://www.somewhere.com/somehow/ \
            http://www.somewhereelse.com/mirror/somehow/
</programlisting>
	</listitem>

	<listitem><para><varname>DISTFILES</varname>: 配布物を含んでいるアーカイブファイルのファイル名です。
	    標準では
	    <filename>${DISTNAME}${EXTRACT_SUFX}</filename> になります。
	    複数の配布ファイルを使う場合に限り、設定するものです。</para>
	  <para>なお、通常おこなうような、<varname>DISTFILES</varname>へのファイルの(置換ではなく)追加をする場
	    合は、標準的な<varname>DISTFILES</varname>のデフォルト設定を明示的におこなわなければなりません。</para>
	</listitem>

	<listitem><para><varname>EXTRACT_SUFX</varname>: 配布ファイルのサフィックスで、
	    <varname>DISTNAME</varname> の後につけられます。標準では
	    <filename>.tar.gz</filename> になります。
	  </para>
	</listitem>
      </itemizedlist>
    </para>

    <para>二つ目の節には、別途ダウンロードするパッチがある場合に、
      そのパッチに関する情報を書きます。
      <itemizedlist>
	<listitem><para><varname>PATCHFILES:</varname>
	  配布されているパッチを含んでいる、追加ファイルのファイル名です。
	  標準の値はありません。pkgsrc はこのファイルを
	  <varname>PATCH_SITES</varname> から探します。
	  ファイル名の末尾が <filename>.gz</filename> または
	  <filename>.Z</filename> の場合は、
	  パッチ適用前に自動的に伸長されます。</para>
	</listitem>
	<listitem><para><varname>PATCH_SITES</varname>:
	  配布されているパッチファイル (上述の
	  <varname>PATCHFILES</varname> を参照) がローカルにない場合用の、主な配布場所です。</para>
	</listitem>
      </itemizedlist>
    </para>
    <para>三つ目の節には、以下に掲げる変数を書きます。
      <itemizedlist>

      <listitem><para><varname>MAINTAINER</varname> は、
      当該パッケージの担当者であることを自覚しており、
      &man.send-pr.1; を使って報告された問題や質問の面倒をもっともよく見そうな人の電子メールアドレスです。
      他の開発者がパッケージに大幅な変更を加える際には、
      事前に <varname>MAINTAINER</varname> に連絡するようにします。
      新しいプログラムをパッケージ化する場合は、
      <varname>MAINTAINER</varname> をあなた自身に設定してください。
      そのパッケージを将来の更新に応じて保守することがどうしてもできない場合は、
      <email>pkgsrc-users@NetBSD.org</email> に設定します。</para></listitem>

      <listitem><para><varname>HOMEPAGE</varname> は、当該パッケージについて、
      利用者がより詳しい情報を得られる URL です。</para></listitem>

      <listitem><para><varname>COMMENT</varname> は、
      当該パッケージについての一行説明です
      (パッケージ名は含めません)。</para></listitem>
      </itemizedlist>
    </para>

    <para>このほか、構築に影響のある変数としては、以下のものがあります。
      <itemizedlist>

	<listitem>

	  <para><varname>WRKSRC</varname>: 当該パッケージに関連する配布ファイルが置かれるディレクトリーです。
	  標準では <filename>${WRKDIR}/${DISTNAME}</filename> になり、
	  ほとんどのパッケージはこの標準状態のままで動作します。</para>

	  <para>パッケージが専用のサブディレクトリー
	  (たとえば、ほとんどのGNUソフトウェアはこれを作ります) を作らずに、
	  カレントディレクトリーに展開される場合、 <varname>WRKSRC=
	  ${WRKDIR}</varname> を設定します。</para>

	  <para>パッケージが <varname>DISTNAME</varname> と同名のサブディレクトリーは作らずに、
	  別の名前のサブディレクトリーを作る場合は、
	  <varname>WRKSRC</varname> を設定して、
	  <filename>${WRKDIR}</filename> 内の適切な名前を指すようにします。
	  たとえば <varname>WRKSRC=
	  ${WRKDIR}/${DISTNAME}/unix</varname> のようにします。
	  さらに別の例としては <filename
	  role="pkg">lang/tcl</filename> と <filename
	  role="pkg">x11/tk</filename> を見てください。</para>

	  <para> pkgsrc が作成する作業用ディレクトリーの名前には、
	  <varname>WRKDIR_BASENAME</varname> 変数が使われます。
	  この値は、標準では <filename>work</filename> です。同じ
	  pkgsrc ツリーを複数の異なる種類のバイナリーパッケージの構築用に使いたい場合は、
	  必要に応じて、この変数の値を変えることができます。
	  <varname>WRKDIR_BASENAME</varname> の設定をありがちな方法でおこなうために、
	  二つの変数をそれぞれ使うことができます。
	  <filename>/etc/mk.conf</filename> で
	  <varname>OBJHOSTNAME</varname> が定義されると、
	  ホスト名の最初の部分がディレクトリー名に付け加えられます。
	  <varname>OBJMACHINE</varname> が定義されると、
	  <filename>work.i386</filename>
	  や <filename>work.sparc</filename>
	  のように、プラットフォーム名が付け加えられます。</para>

	</listitem>
      </itemizedlist>
    </para>
    <para>以下の事柄に気を配ってください。</para>

    <itemizedlist>
      <listitem>
        <para>もしパッケージによりマニュアルページが圧縮され
          た形式でインストールされる場合、<varname>MANCOMPRESSED</varname>を追加してください。
          <filename>bsd.pkg.mk</filename>のコメントを参照。</para>
      </listitem>

      <listitem>
        <para>すべてのファイルの<filename>/usr/local</filename>を<quote>${PREFIX}</quote>に変更してください。(後述のパッチ
          を参照)</para>
      </listitem>

      <listitem>
        <para>もし、パッケージがinfoファイルをインストールするのであれば、
          <xref linkend="faq.info-files"/>を参照してください。</para>
      </listitem>

    </itemizedlist>
  </sect1>

  <sect1 id="components.distinfo">
    <title><filename>distinfo</filename></title>

    <para><filename>distinfo</filename> ファイルには、パッケージが必要とする各
    distfile のメッセージダイジェストあるいはチェックサムが格納されます。
    作者が配布した元のファイルに対して、
    このメッセージダイジェストが一致することを確認しています。これをもとに、イ
    ンターネットから取得したdistfileが転送中にファイルが壊れたり、悪意によりセ
    キュリティーホールを入れられたファイルに変更されていたりしていないことを確
    認します。
    最近、ダイジェストアルゴリズムの弱さについての噂があるため、
    すべての distfile は、ファイルサイズに加えて、
    SHA1 と RMD160 の両方のメッセージダイジェストを使って守られています。</para>

    <para><filename>patches</filename>
    ディレクトリーに入っているすべてのパッチ (<xref
    linkend="components.patches"/>参照) のチェックサムも、
    この <filename>distinfo</filename>ファイルに格納されます。</para>

    <para><filename>distinfo</filename> ファイルを作り直すには、
    <command>make makedistinfo</command> または <command>make mdi</command>
    コマンドを使います。</para>

    <para>パッケージのなかには、プラットフォームによってdistfileの組が異なるものがありま
    す(たとえば <filename
    role="pkg">www/navigator</filename>)。この情報は単一の<filename>distinfo</filename>ファイルに
    書かれるので、このようなパッケージの更新時には、distfileの情報が失われない
    ように注意を払ってください。</para>

  </sect1>

  <sect1 id="components.patches">
    <title>patches/*</title>

    <para>このディレクトリーは、
      &man.patch.1;コマンドが使用するファイルを含んでい
      ます。このファイルは、配布ファイルのソースを&os;上で完全にコンパイルして
      実行できるように変更するためのものです。これらのファイルは、アルファベット
      順(シェルによる
      <quote>patches/patch-*</quote>
      展開順)で適用されます。つまり<filename>patch-aa</filename>は
      <filename>patch-ab</filename>より前に適用されます。</para>

    <para>問題を避けるため、<filename>patch-*</filename>ファイルは
      <command>diff -bu</command>フォーマットとし、かつ、曖昧
      さなしで適用できるようにします。(曖昧さがあっても強制的にパッチを適用させる
      ため、<varname>PATCH_FUZZ_FACTOR=-F2</varname>を設定することができます)。なお、将来の変更が難
      しくなってしまうので、一つのパッチファイルに、複数のファイルへの変更を入れ
      るのは止めてください。</para>

    <para>同様に、一つのファイルへのパッチあては最大一回とし、複数のパッチを使って複
      数回パッチをあててはいけません。もしファイルに複数のパッチが必要なら、それ
      は一つのファイルにまとめておきます。</para>

    <para>一つ重要なこととして、&os; CVSツリーにチェックインした後に問題を引き起こ
      すので、パッチファイルにRCS IDを含ませないように注意してください。
      この問題を避けるため、 <filename role="pkg">pkgtools/pkgdiff</filename> パッケージの
      <command>pkgdiff</command>
      を使ってください。</para>

    <para>さらに自動化するため、同パッケージの<command>mkpatches</command>を使ってパッチ一式を作ることを
      おすすめします。あなたがやらねばならないことは、ファイルの編集前に
      <command>cp -p filename filename.orig</command>のようにするか、あるいはさらに簡単に、同パッケージの
      <command>pkgvi</command>を使って、元のファイルを<filename>filename.orig</filename>の名前でバックアップしておくだ
      けです。この方法でパッケージをアップグレードした場合、<command>patchdiff</command>を使って、新
      しいパッチと既存のパッチを簡単に比較することができます。</para>

    <para>パッケージを作り終えたとき、忘れずに<command>make makepatchsum</command>コマンドでパッチファ
      イルのチェックサムを生成するようにしてください。<xref linkend="components.distinfo"/>を参照してくだ
      さい。</para>

    <para>(たとえば、マニュアルページの場所を pkgsrc の流儀に合わせるようなものではなく)
      distfile の問題を修正するパッチを追加した場合は、
      そのパッチをバグ報告としてメンテナーに送ってください。こうすることで、
      pkgsrc を使っていないパッケージ利用者が幸せになれますし、
      通常は、将来のバージョンでパッチを削除することができるようになります。</para>

    <para>作者その他のメンテナーが配布しているパッチファイルは、
      <varname>$PATCHFILES</varname>
      に列挙することができます。 </para>

    <para>置いておきたいパッチがあるがpkgsrcにcommitすべきものではない場合、それを
      pkgsrcツリーの外の
      <filename>$LOCALPATCHES</filename>
      ディレクトリーに置いておくことができます。こ
      のディレクトリーツリーはpkgsrcと同様の<quote>category/package</quote>の構造を持つように
      し、パッチを各パッケージのディレクトリー(すなわち<filename>$LOCALPATCHES/$PKGPATH</filename>)に
      置くようになっています。たとえば、<filename>pkgsrc/graphics/png</filename>に私的なパッチを適用す
      るようにしたい場合は、そのパッチを<filename>$LOCALPATCHES/graphics/png/mypatch</filename>に置き
      ます。このディレクトリーにあるファイルはすべてパッチファイルとして扱われ、
      <emphasis>pkgsrcのパッチが適用された後に、このパッチが適用されます</emphasis>。</para>
  </sect1>

  <sect1 id="other-mandatory-files">
    <title>その他の必須のファイル</title>

    <variablelist>
      <varlistentry>
        <term><filename>DESCR</filename></term>

        <listitem>
          <para>ソフトウェアについての複数行の説明。このファイルには適切なクレジットを含
            めておいてください。他人があなたのユーモアのセンス(あるいは変わった綴り)
            を理解してくれない事、そしてここに書かれたものすべてを他人が読むであろう
            という事を念頭においておいてください。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>PLIST</filename></term>

        <listitem>
          <para>
            このファイルは、システムにインストールされるファイルを管理します:すべて
            のバイナリー、マニュアルページ、その他。ディレクトリーの作成、削除、イン
            サートされた(inserted)ファイルの位置を管理するための、他のディレクティブ
            もこのファイルに記述されます。
            詳細は<xref linkend="plist"/>を参照してください。 </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 id="components.optional">
    <title>オプションのファイル</title>

    <variablelist>
      <varlistentry>
        <term><filename>INSTALL</filename></term>

        <listitem>
          <para>このシェルスクリプトは&man.pkg.add.1;によって二度起動されます。
            最初は、パッケー
            ジが展開された後、ファイルが移動される前に、二度目はインストールするファ
            イルが移動された後。このファイルは、
            <filename>PLIST</filename>内の@execコマンドでは不可能な特
            別な処理のために使うことができます。より詳細な情報は&man.pkg.add.1;と
            &man.pkg.create.1;を参照してください。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>DEINSTALL</filename></term>

        <listitem>
          <para>このスクリプトは、ファイルが削除される前後に実行されます。このスクリプト
            の責任は、パッケージのインストレーションにかかわる雑多なものをきれいにす
            ることです。なぜなら、pkg_deleteは、オリジナルのディストリビューションで
            作成されたファイルをどのように削除するかをすべて知っておかなければならな
            いからです。より詳細な情報は&man.pkg.delete.1;と
            &man.pkg.create.1;を参照してください。</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>MESSAGE</filename></term>

        <listitem>
          <para>パッケージのインストール後にこのファイルの内容が表示されます。
            完全にフリーではないソフトウェアについての法的な通知や、
            apache, PHP などのモジュールのインストール後の
            設定ファイルの更新に関するヒント等に役立ちます。
            パッケージの<filename>Makefile</filename>で
            <varname>MESSAGE_SUBST</varname>を使うことで、変数を簡単に変えられる
            ことに注意してください:</para>

<programlisting>
    MESSAGE_SUBST+=  SOMEVAR="somevalue"
</programlisting>

          <para>とすると、<filename>MESSAGE</filename>中の "${SOMEVAR}" は、<quote>somevalue</quote>に置換されます。</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 id="work-dir">
    <title><filename>work*</filename></title>

    <para><command>make</command>とタイプした時に、配布ファイルが
      <varname>WRKDIR</varname> で示されたディレクトリーに展開されます。
      <command>make clean</command>
      を実行すれば、これらを削除することができます。
      このディレクトリーは、ソースの展開のほか、
      さまざまなタイムスタンプファイルを作っておくためにも使用されます。
      これらも、clean によって<emphasis>完全に削除されます</emphasis>。
      標準では <filename>${.CURDIR}/work</filename>
      (<varname>OBJMACHINE</varname> が設定されている場合は
      <filename>${.CURDIR}/work.${MACHINE_ARCH}</filename>) です。</para>
  </sect1>

  <sect1 id="files-dir">
    <title><filename>files/*</filename></title>

    <para>また、もしあなたがコンフィギュレーションまたは構築するより前に、パッケージ
      中に何かファイルを置きたいならば、それらのファイルをfilesディレクトリーに置
      くことができますし、<quote>pre-configure</quote>ターゲットで、
      <quote>${CP}</quote>コマンドによりコピーす
      ることができます。あるいは、<filename>/dev/null</filename>に対するそのファイルの単純なdiffをとり、
      パッチメカニズムを使用して、そのファイルを生成することもできます。</para>
  </sect1>
</chapter>
