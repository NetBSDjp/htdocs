<!-- $NetBSD: faq.xml,v 1.11 2005/05/29 17:16:28 jmmv Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: faq.xml,v 1.11 2005/05/29 17:16:28 jmmv Exp   -->

<chapter id="faq"> <?dbhtml filename="faq.html"?>
  <title>よくある質問</title>

  <para> この節では、pkgsrc の特別な事柄に関する助言、技巧や要領のうち、
    前章までに適当な掲載場所がなかったものを掲載しています。
    ここでは、pkgsrc 利用者向けの情報と pkgsrc 開発者向けの情報を、
    どちらも掲載します。 </para>

  <sect1 id="mailing-list-pointers">
    <title>pkgについて話しあうためのメーリングリストはありますか?</title>

    <para>
      pkgsrc の利用者向けに、以下のようなメーリングリストがあります。
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="http://www.NetBSD.org/MailingLists/index.html#pkgsrc-bugs">pkgsrc-bugs</ulink>
           -- pkgsrc に関する問題報告が送付され、
          その議論がおこなわれるメーリングリスト
        </para>
      </listitem>
      <listitem>
        <para>
          <ulink
	  url="http://www.NetBSD.org/MailingLists/index.html#pkgsrc-bulk">pkgsrc-bulk</ulink>
	  -- pkgsrc のバルクビルドの結果が送付され、
	  その議論がおこなわれるメーリングリスト
        </para>
      </listitem>
      <listitem>
        <para>
          <ulink
	  url="http://www.NetBSD.org/MailingLists/index.html#pkgsrc-changes">pkgsrc-changes</ulink>
	  -- pkgsrc の commit メッセージがすべて送付されるメーリングリスト
        </para>
      </listitem>
      <listitem>
        <para>
          <ulink
	  url="http://www.NetBSD.org/MailingLists/index.html#tech-pkg">tech-pkg</ulink>
	  -- pkgsrc に関するあらゆることの、一般的な議論用のメーリングリスト
        </para>
      </listitem>
    </itemizedlist>

    <para>
      参加するためには以下のようにして下さい。
    </para>

    <programlisting>&cprompt; echo subscribe <replaceable>listname</replaceable> | mail majordomo@NetBSD.org</programlisting>

    <para>
      以上の各メーリングリストのアーカイブは
      <ulink url="http://mail-index.NetBSD.org/"/> から辿れます。
    </para>
</sect1>


<sect1 id="pkgviews-docs">
    <title>pkgviews のドキュメンテーションはどこにあるか?</title>

    <para> pkgviews は buildlink に密接に統合されています。
      pkgviews の利用者向けの手引きは
      <filename>pkgsrc/mk/buildlink3/PKGVIEWS_UG</filename> にあります。
      </para>
</sect1>


<sect1 id="faq-pkgtools">
    <title>パッケージ管理用ユーティリティー (pkgtools)</title>

    <para>
      <filename>pkgsrc/pkgtools</filename> ディレクトリー pkgtools 以下には、
      pkgsrc の利用者および開発者それぞれにとって便利なユーティリティーがいくつもあります。
      この節の目的は、このユーティリティーの存在と、
      どんな場合に有用かを知っていただくことだけであり、
      各パッケージの附属ドキュメントを引き写すことではありません。
      </para>

    <para>
      pkgsrc が使用するユーティリティー (必要に応じて自動的にインストールされます):
      </para>
      
    <itemizedlist>
      <listitem>
        <para> <pkg>pkgtools/x11-links</pkg>:
          buildlink が使用するシンボリックリンクです </para>
      </listitem>
    </itemizedlist>
    
    <para> OS ツールの拡張 (必要に応じて自動的にインストールされます):
      </para>
      
    <itemizedlist>
      <listitem>
        <para> <pkg>pkgtools/digest</pkg>:
          各種チェックサム (SHA1 など) を計算します
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/libnbcompat</pkg>:
          pkgsrc ツール用の互換ライブラリーです
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/mtree</pkg>:
          BSD 以外のシステムにはネイティブの mtree がないため、これがインストールされます
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/pkg_install</pkg>:
          /usr/sbin/pkg_install を最新版に置き換えます。または、
          pkg_install のないオペレーティングシステム用です。
        </para>
      </listitem>
    </itemizedlist>
    
    <para>    pkgsrc が使用するユーティリティー (自動ではインストールされません):
      </para> 
    
    <itemizedlist>
      <listitem>
        <para> <pkg>pkgtools/pkg_tarup</pkg>:
          インストールされているパッケージをもとに、バイナリーパッケージを作成します。
          <command>make replace</command> が古いパッケージを保存するのに使います。
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/dfdisk</pkg>:
          distfile を複数の場所から fetch できる機能を
          pkgsrc に追加します。現在のところ、
          以下の方法に対応しています: 複数の CD-ROM および FTP/HTTP のネットワーク接続。
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/xpkgwedge</pkg>:
          X11 パッケージの場所を変えます (標準で有効となります)
        </para>
      </listitem>
      <listitem>
        <para> <pkg>devel/cpuflags</pkg>:
          お使いの CPU とコンパイラー用にコードを最適化するための
          コンパイラーのフラグを考えてくれます。
        </para>
      </listitem>
    </itemizedlist>
    
    <para> インストールしたパッケージの追跡や最新への追従用などのユーティリティー: </para>
    
    <itemizedlist>
      <listitem>
        <para> <pkg>pkgtools/pkg_chk</pkg>:
          インストールされているパッケージのバージョンが
          pkgsrc の最新バージョンと異なるものを報告します。
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/pkgdep</pkg>:
          パッケージ更新計画の策定を支援するため、
          パッケージの依存関係のグラフを作成します。
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/pkgdepgraph</pkg>:
          <pkg>pkgtools/pkgdep</pkg> の出力をもとに (graphviz を使って) 図表を作成します
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/pkglint</pkg>:
          pkglint(1) プログラムは pkgsrc の個々のパッケージに誤りがないか検査し、
          lintpkgsrc(1) は pkgsrc システム全体に対して各種の検査をおこないます。
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/pkgsurvey</pkg>:
          インストール済みのパッケージを報告します
        </para>
      </listitem>
    </itemizedlist>
    
    <para> 個々のパッケージの保守や作成をする人のためのユーティリティー: </para>
    
    <itemizedlist>
      <listitem>
        <para> <pkg>pkgtools/pkgdiff</pkg>:
          パッケージ用のパッチの作成や保守を自動化します (
          pkgdiff, pkgvi, mkpatches, ... が含まれます)
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/rpm2pkg</pkg>, <pkg>pkgtools/url2pkg</pkg>:
          pkgsrc への変換の補助ツールです
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/gensolpkg</pkg>:
          pkgsrc を Solaris パッケージに変換します
        </para>
      </listitem>
    </itemizedlist>
    
    <para> pkgsrc を保守する人のためのユーティリティー (あるいは、もっと地味な pkg ユーティリティー) </para>
    
    <itemizedlist>
      <listitem>
        <para> <pkg>pkgtools/pkgconflict</pkg>:
          衝突するが、そのことが書かれていないパッケージを探します
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/pkg_comp</pkg>:
          chroot 領域でパッケージを構築します
        </para>
      </listitem>
      <listitem>
        <para> <pkg>pkgtools/libkver</pkg>:
          chroot 環境でのクロス構築用に、カーネルのバージョンを誤魔化します
        </para>
      </listitem>
    </itemizedlist>
</sect1>


<sect1 id="non-root-pkgsrc">
    <title>pkgsrc を root 以外で使う方法</title>
    
    <para>pkgsrc を root 以外のユーザーで使いたい場合は、いくつかの変数を設定すれば、
    そのような環境で pkgsrc が動くようにすることができます。
    最低限、<varname>UNPRIVILEGED</varname> を <quote>yes</quote>
    に設定することが必要です。こうすると非特権モードに切り替わり、
    関連のある複数の変数が設定されて、
    root 以外のユーザーがパッケージをインストールできるようになります。</para>

    <para>標準状態の非特権モードでは不十分な場合は、
    他の変数を調節するとよいでしょう。たとえば、
    ユーザーやグループの自動検出により正しくない (あるいは使いたくない)
    値が検出される場合は、それぞれ、
    <varname>UNPRIVILEGED_USER</varname> や
    <varname>UNPRIVILEGED_GROUP</varname> を設定すれば変更することができます。</para>

    <para>なお、ブートストラップについては、<command>bootstrap</command>
    スクリプトに <quote>--ignore-user-check</quote> フラグを与えると、
    標準で使われるインストール先が
    <filename>~/pkg</filename> 以下の複数のディレクトリーになるため、
    非 root 用の構成にしやすくなることを覚えておいてください。このディレクトリーは、
    他のディレクトリーの配置が細かく調節可能であるのと同様に、
    スクリプトに <quote>--prefix</quote>
    フラグを与えて上書きすることができます。</para>
</sect1>

<sect1 id="resume-transfers">
    <title>distfile 取得時に、転送を再開する方法は?</title>

    <para>標準では、pkgsrc の転送再開機能は有効になっていませんが、
	<filename>/etc/mk.conf</filename> にオプション
	<varname>PKG_RESUME_TRANSFERS=YES</varname> を追加すれば、
	この機能を有効にすることができます。こうすると、fetch している最中に、
	不完全な distfile があった場合、pkgsrc はそのファイルの残りの部分を取得しようとします。</para>
    <para>また、<varname>FETCH_CMD</varname> 変数を変更すれば、
	標準である &man.ftp.1; 以外のプログラムを使うこともできます。
	この変数を標準以外の値にした場合は、<varname>FETCH_RESUME_ARGS</varname> と
	<varname>FETCH_OUTPUT_ARGS</varname> の設定を忘れずにしてください。</para>
    <para>たとえば、ダウンロードの再開に <filename>wget</filename>
	を使いたい場合は、以下のような設定が必要です。</para>

    <programlisting>
        FETCH_CMD=wget
        FETCH_BEFORE_ARGS=--passive-ftp
        FETCH_RESUME_ARGS=-c
        FETCH_OUTPUT_ARGS=-O
    </programlisting>

</sect1>

<sect1 id="XFree86-from-pkgsrc">
    <title>pkgsrc の XFree86 をインストールあるいは使用する方法は?</title>

    <para> システム附属の X11 (<filename>/usr/X11R6</filename>,
      <filename>/usr/openwin</filename>, ...) ではなく pkgsrc の
      XFree86 を使いたい場合は、<filename>/etc/mk.conf</filename>
      に以下の行を追加する必要があります。
      </para>

    <programlisting>
      X11_TYPE=XFree86
    </programlisting>
</sect1>


<sect1 id="x.org-from-pkgsrc">
    <title>pkgsrc の X.org をインストールあるいは使用する方法は?</title>

    <para> システム附属の X11 (<filename>/usr/X11R6</filename>,
      <filename>/usr/openwin</filename>, ...) ではなく pkgsrc の
      X.org を使いたい場合は、<filename>/etc/mk.conf</filename>
      に以下の行を追加する必要があります。 </para>

    <programlisting>
      X11_TYPE=xorg
    </programlisting>
</sect1>


<sect1 id="fetch-behind-firewall">
    <title>防火壁の内側からファイルを取得する方法</title>

    <para> もし、あなたが防火壁の内側にいて、インターネットのホストに直接接続できない
      (つまりNATを使っていない)場合、適切なプロキシーホストを指定することができま
      す。これはURL形式の環境変数で指定します。例えば、Amdahlドメインにおいては、
      <quote>orpheus.amdahl.com</quote> というマシンは防火壁のひとつで、プロキシーポート番号とし
      て、80番のポートを使用します。この場合、proxy環境変数は以下のようになります。 </para>

    <programlisting>  ftp_proxy=ftp://orpheus.amdahl.com:80/
http_proxy=http://orpheus.amdahl.com:80/</programlisting>
</sect1>

    
<sect1 id="passive-ftp">
    <title>どうすれば<command>make fetch</command>でpassive FTPを使用することができますか?</title>

    <para> distfileの取得にどのユーティリティーを使っているかによります。<filename>bsd.pkg.mk</filename>は、以下のリストのなかで利用可能なコマンドのうち、最初のものを<varname>FETCH_CMD</varname>に割り当てます: </para>

    <programlisting>${LOCALBASE}/bin/ftp
/usr/bin/ftp</programlisting>

    <para> NetBSD のデフォルトのインストールでは、<filename>/usr/bin/ftp</filename>となり、これは自動的に、
      最初はパッシブ接続を試みます。そして、サーバーがパッシブ接続を拒否した場合
      は、アクティブ接続に切り替わります。これ以外のツールの場合は、
      <filename>/etc/mk.conf</filename>に以下の設定を追加してください。
      <varname>PASSIVE_FETCH=1</varname> </para>

    <para> これを設定すると、<filename>/usr/bin/ftp</filename>はアクティブ転送への切り替えをおこなわなくな
      ります。 </para>
</sect1>

    
<sect1 id="fetching-all-distfiles">
    <title>一度にすべてのdistfileを取得する方法</title>

    <para> <command>make fetch</command>を実行できない職場や大学において、一回のバッチ処理で、すべて
      のdistfileをダウンロードしたいと思うことがあるかもしれません。<ulink
      url="ftp://ftp.NetBSD.org/pub/NetBSD/packages/distfiles/">ftp.NetBSD.org</ulink>
      に distfile が置かれていますが、
      このディレクトリーをまるごとダウンロードするのは不適切です。
      </para>

    <para> 現時点では、<command>make fetch-list</command>を<filename>/usr/pkgsrc</filename>またはそのサブディレクトリーで実行し、その結果のリストを職
      場や学校のマシンに持ってきて、使用してくださいとしかいえません。NetBSD と互
      換な &man.ftp.1; (lukemftpなど)が使えない場合は、URLを指定して取得ができるコマンド
      を<varname>FETCH_CMD</varname>に指定することを忘れないでください: </para>

    <para> 自宅で: </para>

    <screen><prompt>%</prompt> <userinput>cd /usr/pkgsrc</userinput>
<prompt>%</prompt> <userinput>make fetch-list FETCH_CMD=wget DISTDIR=/tmp/distfiles >/tmp/fetch.sh</userinput>
<prompt>%</prompt> <userinput>scp /tmp/fetch.sh work:/tmp</userinput></screen>

    <para> 職場で: </para>

    <screen><prompt>%</prompt> <userinput>sh /tmp/fetch.sh</userinput></screen>

    <para> 実行後、 <filename>/tmp/distfiles</filename> を tar で固めて自宅に持って帰ります。 </para>

    <para> NetBSD で動いているマシンがあって、<emphasis>すべての</emphasis>distfile (そのマシンのアーキテ
      クチャー向けではないものも含む)を取得したい場合は、上述の<command>make fetch-list</command>
      の方法を使うか、以下のようにしてdistfileを直接取得することができます。 </para>

    <screen><prompt>%</prompt> <userinput>make mirror-distfiles</userinput></screen>

    <para> <varname>NO_{SRC,BIN}_ON_{FTP,CDROM}</varname>も無視したい場合は、以下のようにしてすべてのもの
      を取得することができます。 </para>

    <screen><prompt>%</prompt> <userinput>make fetch NO_SKIP=yes</userinput></screen>
</sect1>


<sect1 id="tmac.andoc-missing">
    <title><quote>Don't know how to make /usr/share/tmac/tmac.andoc</quote> ってどういうこと?</title>

    <para> <pkg>pkgtools/pkg_install</pkg>パッケージのコンパイル時に、makeが
      <filename>/usr/share/tmac/tmac.andoc</filename> の作り方がわからないというエラーを出します。これ
      は、そのマシンに NetBSD の基本配布物の<quote>text</quote>セット
      (nroffなど)がインストールされていないことを意味
      しています。マニュアルページの整形ができるようにするため、<quote>text</quote>セットをインストールしてください。  </para>

    <para> この<pkg>pkgtools/pkg_install</pkg>パッケージの事例は、
      環境変数か<filename>/etc/mk.conf</filename>のどちらかで
      <varname>NOMAN=YES</varname>を設定して回避することもできます。  </para>
</sect1>


<sect1 id="bsd.own.mk-missing">
    <title><quote>Could not find bsd.own.mk</quote> ってどういうこと?</title>

    <para> NetBSD のインストール時にコンパイラー一式<filename>comp.tgz</filename>をインストールしなかったか
      らです。<filename>comp.tgz</filename>を入手し、
      <filename>/</filename>で展開してインストールしてください: </para>

    <screen><prompt>#</prompt> <userinput>cd /</userinput>
<prompt>#</prompt> <userinput>tar --unlink -zxvpf .../comp.tgz</userinput></screen>

    <para> <filename>comp.tgz</filename>は NetBSD のどのリリースにも含まれていますので、あなたがインストール
      したリリース
      (<command>uname -r</command>で調べられます) に合ったものを入手してください。  </para>
</sect1>


<sect1 id="using-sudo-with-pkgsrc">
    <title>pkgsrcで'sudo'を使う</title>

    <para>
      パッケージのインストールをroot以外のユーザーで実行し、root権限が必要なとこ
      ろではpkgsrcの &man.su.1; 機能を使う場合、必要なパッケージをインストールするたびに
      rootのパスワードを打つのは面倒かもしれません。これを避けるために、パスワー
      ドを一定時間保持してくれるsudoパッケージを使うことができます。sudoを使うに
      は、sudoを(バイナリーパッケージ、または<pkg>security/sudo</pkg>のいずれかから)
      インストールしてから、<filename>/etc/mk.conf</filename>に以下の内容を書いておきます。 </para>

    <programlisting>
        .if exists(${LOCALBASE}/bin/sudo)
        SU_CMD=${LOCALBASE}/bin/sudo /bin/sh -c
        .endif
    </programlisting>
</sect1>


<sect1 id="faq.conf">
    <title>設定ファイルの処理および配置</title>

    <para>  大域変数<varname>PKG_SYSCONFBASE</varname>(とその他の変数)を、
      システム管理者が<filename>/etc/mk.conf</filename>で設
      定すると、設定ファイルのインストール場所を定義することができます。このため、
      各パッケージはこの機能に対応する必要があります。この変数で定義される設定ファ
      イル用ディレクトリーには、本当に必要なファイルだけをインストールするようにし、
      <filename>$PREFIX/share</filename>に置いてもよいファイルはそちらにインストールするよう
      注意してください。 </para>

    <para> まず、利用可能な変数をお見せします(<filename>bsd.pkg.mk</filename>に、さらに詳しい情報があります)。
      <varname>PKG_SYSCONFDIR</varname>が、
      パッケージの設定ファイルが置かれる場所になります(これはフ
      ルパスです。たとえば、<filename>/etc</filename>や<filename>/usr/pkg/etc</filename>になります)。この変数値は、さまざま
      な方法によってカスタマイズすることができます: </para>

    <orderedlist>
      <listitem>
        <para> <varname>PKG_SYSCONFBASE</varname>は主たる設定ディレクトリーで、パッケージ用の設定ファイル
          すべてがこれ以下に置かれます。ユーザーは普通は<varname>PKG_SYSCONFBASE</varname>を<filename>/etc</filename>に設
          定するか、デフォルトの場所の
          <filename>$PREFIX/etc</filename>のままにするでしょう。 </para>
      </listitem>

      <listitem>
        <para> <varname>PKG_SYSCONFSUBDIR</varname> は
          <varname>PKG_SYSCONFBASE</varname> のサブディレクトリーで、個々のパッケージ用の設定ファイ
          ルはこの下に置かれます。デフォルトでは<varname>${SYSCONFBASE}</varname>になります。
          </para>
      </listitem>

      <listitem>
        <para> <varname>PKG_SYSCONFVAR</varname>は、個々のパッケージの設定を上書きする値を識別するための、
          特別な接尾辞です(次の項目参照)。デフォルトでは<varname>${PKGBASE}</varname>になりますが、
          <varname>PKG_SYSCONFDIR</varname>を同じに揃えておくとよい一連の関連パッケージに対しては、
          各パッケージのMakefileで、<varname>PKG_SYSCONFVAR</varname>を同じ値に設定することができま
          す。
          </para> 
      </listitem>

      <listitem>
        <para> <varname>PKG_SYSCONFDIR.${PKG_SYSCONFVAR}</varname>は、同じ<varname>PKG_SYSCONFVAR</varname>を持つパッケージ
          の
          <varname>${PKG_SYSCONFDIR}</varname>を上書きします。
          </para> 

        <para> たとえば、KDE関連の各パッケージでは、
          <varname>PKG_SYSCONFVAR</varname>を<quote>kde</quote>に設定すると
          よいでしょう。こうしておくと、管理者が<filename>/etc/mk.conf</filename>で
          <varname>PKG_SYSCONFDIR.kde</varname>を設定して、KDEの設定ファイルのインストール場所を
          定義できるようになります。 </para>
      </listitem>
    </orderedlist>

    <para> プログラムの設定ディレクトリーは、configureの段階で定義します。GNU autoconf
      を使うパッケージでは、通常は
      <quote>--sysconfdir</quote>のパラメーターを使って定義すること
      ができますが、この方法は問題を起こすことがわかっています。このパス名をパッ
      ケージ側で変更する場合は、ファイルをディレクトリーに直接インストールしない
      ようにします。そうするかわりに、ファイルを<filename>share/examples/${PKGNAME}</filename>以下にイ
      ンストールして、
      <filename>PLIST</filename>にそちらを登録できるようにする必要があります。 </para>

    <para> 必要な設定ファイルを適切な場所(<filename>share/examples</filename>ディレクトリー以下)に一旦置い
      てから、この設定ファイルを<varname>PKG_SYSCONFDIR</varname>にコピーするために、
      <varname>CONF_FILES</varname>変数
      を設定します。この変数の値は、ファイル名を二個組み合わせたものを並べたもの
      です; 組合せの一つ目で、examplesディレクトリー内のファイル(<filename>PLIST</filename>に登録され
      ているもの)を指定し、二つ目で、それをコピーする先のファイルを指定します。こ
      れにより、バイナリーパッケージが、自動生成される
      <filename>INSTALL</filename>/<filename>DEINSTALL</filename>スクリプト
      を使って、ファイルを正しいディレクトリーに配置することが可能になります。ま
      た、この自動生成されるスクリプトを使うために、パッケージの<filename>Makefile</filename>で
      <varname>USE_PKGINSTALL=YES</varname> を設定
      しなければなりません。設定ファイルの自動コピーは、パッケージをインストール
      する前に環境変数
      <varname>PKG_CONFIG</varname>を設定しておくことで、おこなうかどうかを切替える
      ことができます。
      </para>

    <para> mail/mutt/Makefileでの例を示します: </para>

    <programlisting>  EGDIR=            ${PREFIX}/share/doc/mutt/samples
CONF_FILES=   ${EGDIR}/Muttrc ${PKG_SYSCONFDIR}/Muttrc</programlisting>

    <para> ご覧のとおり、このパッケージは設定ファイルを
      <varname>EGDIR</varname>にインストールし、この場所
      が
      <filename>PLIST</filename>に登録されます。その後、
      <varname>CONF_FILES</varname>変数に、はじめにインストールされた
      ファイルと、そのコピー先ファイルを列挙します。ファイルがこの方法でインストー
      ルされる時には、パッケージの利用者にメッセージを自動的に表示します。 </para>
</sect1>


<sect1 id="audit-packages">
    <title>自動セキュリティーチェック</title>

    <para> サードパーティーのソフトウェアにはしばしばバグがあること、そして、バグのな
      かにはマシンをアタッカーの攻撃に対して脆弱な状態にするものもあることに、ど
      うか注意してください。そのような攻撃にさらされることを減らすために、NetBSD
      パッケージチームでは、pkgsrc化されたことのあるパッケージに関する既知の攻撃
      のデータベースを保守しています。このデータベースを自動的にダウンロードして、
      システムにインストールされている全パッケージのセキュリティー監査をおこなう
      ことができます。これをおこなうには<pkg>security/audit-packages</pkg>パッケージ
      をインストールします。このパッケージは、以下の二つの構成要素からなっていま す。
    </para>

    <orderedlist>
      <listitem>
        <para> <quote>download-vulnerability-list</quote>: セキュリティー脆弱性情報のリストのダウン
          ロードを簡単にできるようにするものです。この脆弱性情報のリストは、
          NetBSD セキュリティーオフィサーと NetBSD パッケージチームが最新の状態に保っ
          ており、NetBSD ftpサーバーで配布されています。 </para>

        <para> <ulink
          url="ftp://ftp.NetBSD.org/pub/NetBSD/packages/distfiles/pkg-vulnerabilities"/>
          </para>  
      </listitem>

      <listitem>
        <para> <quote>audit-packages</quote>: マシンの監査を簡単にできるようにするもので、既知の各脆
          弱性の確認をします。脆弱性のあるパッケージがインストールされていた場合、
          そのことを標準出力に出力します。この出力には、脆弱性の種類の説明と詳細
          情報のURLが含まれます。  </para>
      </listitem>
    </orderedlist>

    <para> <pkg>security/audit-packages</pkg>
        パッケージを使うよう強くおすすめします。
        <quote>audit-packages</quote> をインストールした後に、
        パッケージのメッセージを読んでください。このメッセージは
        <userinput>pkg_info -D audit-package</userinput> を実行すれば表示できます。
      </para>

  </sect1>

</chapter>
