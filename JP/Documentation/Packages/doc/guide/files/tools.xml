<!-- $NetBSD: tools.xml,v 1.5 2007/03/08 16:00:16 rillig Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: tools.xml,v 1.5 2007/03/08 16:00:16 rillig Exp   -->

<chapter id="tools">
<title>構築や実行のために必要なツール</title>

<para><varname>USE_TOOLS</varname> 定義は、
パッケージを構築するためにどのコマンドが必要か (<varname>BUILD_DEPENDS</varname> のように)、
あるいは、インストールしたパッケージを実行するためにどのコマンドが必要か (<varname>DEPENDS</varname>
のように) を定義するために、
pkgsrc 内部で使われており、また、個々のパッケージ用としても使われています。
適当なツールがシステムに標準で附属していれば、多くの場合は
pkgsrc のパッケージは使われません。</para>

<para>パッケージを構築するときは、実行検索パスの前のほうにあるディレクトリーに、
代替ツールが (シンボリックリンクまたはラッパースクリプトとして) 用意されます。
buildlink システムと同様に、
こうすることで、首尾一貫した構築ができるようになります。</para>

<para>あるツールは、パッケージの構築を補助するために必要となることがあります。
たとえば、perl, GNU make (gmake), yacc はこのために必要になることがあります。</para>

<para>また、あるツールは、たとえば、システム標準附属のツールでは
pkgsrc によるパッケージの構築用としては使い物にならないために、
必要となることがあります。
たとえば、パッケージが GNU awk, (yacc ではなく) bison や、
より優れた sed を必要とすることがあります。</para>

<para>パッケージが使うツールの実体は、
<command>make show-tools</command> を実行すると一覧表示されます。</para>

<sect1 id="pkgsrc-tools">
<title>pkgsrc 構築用のツール</title>

<para>pkgsrc が標準状態で使うツール一式は、
<filename>bsd.pkg.mk</filename> で定義されています。ここには、
<command>cat</command>, <command>awk</command>,
<command>chmod</command>, <command>test</command>
などのような標準的な Unix のツールが含まれています。
これらは
<command>make show-var VARNAME=USE_TOOLS</command> を実行すると見ることができます。</para>

<para>個々のパッケージの構築のためにあるプログラムが必要な場合は、
<varname>USE_TOOLS</varname> 変数を使って
必要なツールを定義することができます。</para>

</sect1>

<sect1 id="package-tools">
<title>パッケージが必要とするツール</title>

<para>以下の例では、:pkgsrc は、構築時依存性として、
ネイティブのバージョンではなく pkgsrc のバージョンを使うことを意味します。
また、:run は、実行時依存性としても使うことを意味します (ので、DEPENDS になります)。
このようなものを付けない場合は、構築時依存性を意味します。これは
:build を明示的に使って設定することもできます。 (このため、以下の例のものは、それぞれ gmake:build
および pkg-config:build と同じことです。)</para>

<programlisting>
USE_TOOLS+=     mktemp:pkgsrc
USE_TOOLS+=     gmake perl:run pkg-config
</programlisting>

<para>このツールの枠組を使う時には、
<varname>TOOLS_PATH.foo</varname> 変数が、
適切なツールへのフルパスとして定義されます。
たとえば、<varname>TOOLS_PATH.bash</varname> は Linux システム上では
<quote>/bin/bash</quote> になったりするでしょう。</para>

<para>実行時に常に pkgsrc バージョンのツールが必要となる場合は、
この枠組ではなく、単に <varname>DEPENDS</varname> を使ってください。
<!-- jlam said: This is not to
say that we can't extend the tools framework to do that, but it hasn't been
something that's come up frequently enough to make it worthwhile to do.
--></para>

</sect1>
<sect1 id="platform-tools">
<title>プラットフォーム附属のツール</title>

<para>pkgsrc の改良、あるいは新プラットフォームへの移植をする時には、
<filename>pkgsrc/mk/tools/tools.${OPSYS}.mk</filename> 以下にある、
対象プラットフォーム用の make file の断片を見て (あるいは作って) ください。
このファイルでは、たとえば以下のように、共通的に使うツールの名前を定義しています。</para>

<programlisting>
.if exists(/usr/bin/bzcat)
TOOLS_PLATFORM.bzcat?=          /usr/bin/bzcat
.elif exists(/usr/bin/bzip2)
TOOLS_PLATFORM.bzcat?=          /usr/bin/bzip2 -cd
.endif

TOOLS_PLATFORM.true?=           true                    # shell builtin
</programlisting>

</sect1>

<sect1 id="tools.questions">
<title>ツールに関する質問</title>

<qandaset>
<qandaentry id="tools.new">

	<question><para>新しいツールを追加する方法は?</para></question>

	<answer><para>TODO</para></answer>

</qandaentry>
<qandaentry id="tools.listall">

	<question><para>利用可能なツールの全一覧を見る方法は
	?</para></question>

	<answer><para>TODO</para></answer>

</qandaentry>
<qandaentry id="tools.used">

	<question><para>あるパッケージの構築に使われているツールの全一覧を見る方法は?
	sed が使われているかどうかを知りたいんだけど。</para></question>

	<answer><para>今のところ、できません。 (TODO: が、
	できるようにしたいと考えています。)</para></answer>

</qandaentry>

</qandaset>
</sect1>
</chapter>
