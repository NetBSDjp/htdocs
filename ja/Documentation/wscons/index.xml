<?xml version="1.0" encoding="ISO-2022-JP"?>
<!DOCTYPE webpage
  PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
         "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-Documentation-wscons-index">
  <config param="desc" value=""/>
  <config param="cvstag" 
    value="$NetBSD: index.xml,v 1.7 2006/12/03 12:48:05 kano Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: index.xml,v 1.7 2006/12/03 12:48:05 kano Exp   -->
  <config param="rcsdate" value="$Date: 2006/12/03 12:48:05 $"/>
  <head>
    
    <!-- Copyright (c) 1994-2005
    The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
    
    <!--
    ==  Originally by Chris Jones
    -->
    <title>NetBSD wscons FAQ</title>
  </head>

  <sect1 role="toc">
    <sect2 id="wscons-console-driver">
      <title>wscons コンソールドライバー</title>

      <sect3 id="whats-wscons">
	<title>wscons とは何ですか?</title>

	<para>wscons は、NetBSD のプラットフォーム独立なワークステーションコンソール
	  ドライバーです。これを書いている現在、すべてのプラットフォームで、wscons
	  がサポートされているわけではありません。しかし、サポートプラットフォーム
	  は、日々増え続けています。wscons は 古い i386 pcvt ドライバーのすべての
	  機能(そして追加の機能も)をそなえるはずです。ただし、厳密なケーパビリティー
	  はハードウェアに依存します。</para>
      </sect3>

      <sect3 id="enablingwscons">
	<title>どうすれば wscons と仮想端末を有効にできますか?</title>

	<para>現時点では、 macppc、 mac68k、 alpha などといった
	  ビットマップのみのスクリーン上では仮想端末はサポートされていません。</para>

	<para>サポートされているシステムでは、インストール過程において、
	  これらをセットアップするようになっています。手動でおこなう場合の
	  手順は、以下のとおりです:

	  <itemizedlist>
	    <listitem><filename>/etc/rc.conf</filename> の
	      "wscons" を "yes" に変更してください。</listitem>
	    <listitem><filename>/etc/wscons.conf</filename> を編集し、
	      ログインのために有効にしたいスクリーンが
	      作成されている事を確認してください(一番目のスクリーン、screen 0
	      は常に存在することに注意してください)。</listitem>
	    <listitem><filename>/etc/ttys</filename> の
	      <code>ttyE{1,2,3}</code> を
	      <quote>off</quote> から <quote>on</quote> に変更してください。</listitem>
	    <listitem>リブートするか、以下のようにタイプしてください。
	      <screen>
sh /etc/rc.d/wscons
kill -1 1</screen></listitem>
	  </itemizedlist>
	  <code>Ctrl-Alt-{F1,F2,F3,F4}</code>
	  を使用し、仮想端末を切りかえることができます。</para>
      </sect3>

      <sect3 id="keyboard-maps">
	<title>キーボードのマッピングを 'US' 以外のものに変更する</title>

	<para>&man.wsconsctl.8; を使用してください。例えば、フランスのキーボード
	  マッピングを選択する場合、"<emphasis
	  role="bold"><code>wsconsctl -w encoding=fr</code></emphasis>"
	  を実行してください。キーボードのマッピングの一覧は、
	  <currentsrc>src/sys/dev/wscons/wsksymdef.h</currentsrc>
	  にあります。一般的なマッピングを以下にあげておきます。
	  <itemizedlist>
	    <listitem><code>de</code></listitem>
	    <listitem><code>dk</code></listitem>
	    <listitem><code>es</code></listitem>
	    <listitem><code>fr</code></listitem>
	    <listitem><code>it</code></listitem>
	    <listitem><code>jp</code></listitem>
	    <listitem><code>sv</code></listitem>
	    <listitem><code>uk</code></listitem>
	    <listitem><code>us</code></listitem>
	  </itemizedlist></para>

	<para>他にも、マッピングを変更するために使うバリアントがいくつかあります。
	  
	  <itemizedlist>
	    <listitem><code>dvorak</code></listitem>
	    <listitem><code>swapctrlcaps</code></listitem>
	    <listitem><code>iopener</code></listitem>
	  </itemizedlist></para>

	<para><quote>dvorak</quote>は Dvorak キーボードレイアウトを使用します。
	  <quote>swapctrlcaps</quote>
	  は Caps Lock と左側のコントロールキーをいれかえます。
	  <quote>iopener</quote>は
	  Netpliance の非標準のキーボードレイアウトのためのものです。これは
	  F1 をエスケイプに、F2 から F12 を F1 から F11 に割りあてます。
	  これらは
	  <quote>us.iopener</quote>のように、ドットとバリアント名を追加し、他の
	  マップと結合することができます。
	  <quote>us.dvorak.swapctrlcaps</quote>のように、
	  複数のバリアントを結合することも可能です。ただし、すべての組み合わせが
	  可能なわけではありません。</para>

	<para>カーネルに組みこまれるデフォルト値を、
	  <code>options PCKBD_LAYOUT=KB_<emphasis>エンコーディング</emphasis></code>
	  を追加することにより、変更することができます。
	  この <emphasis>エンコーディング</emphasis> は、上記のリストのエントリー
	  を大文字にしたものです(例えば、<code>PCKBD_LAYOUT=KB_FR</code>)。
	  バリアントは、ビット論理和で指定できます
	  (例えば、<code>PCKBD_LAYOUT=KB_US|KB_SWAPCTRLCAPS</code>)。</para>

	<para>もし、あなたのお気に入りのキーマップがサポートされていなかったら、
	  キーマップを作成するために、 <ulink 
	    url="http://cvsweb.NetBSD.org/cgi-bin/cvsweb.cgi/src/sys/dev/wscons/wsksymdef.h"><filename>sys/dev/wscons/wsksymdef.h</filename></ulink>
	  と <ulink url="http://cvsweb.NetBSD.org/cgi-bin/cvsweb.cgi/src/sys/dev/pckbc/wskbdmap_mfii.c"><filename>sys/dev/pckbc/wskbdmap_mfii.c</filename></ulink>
	  を調べるとよいでしょう。修正依頼の PR を、あなたの変更と一緒に <ulink url="../../Misc/send-pr.html#submitting">send-pr</ulink> することを忘れないでください。
	  そうすれば、他の人もそのキーマップを使用することができます。</para>

    <para>独自のキーマップを実装する他の方法が
         <gnatspr><category>misc</category><number>10976</number></gnatspr>
	  に、
	  後でロードされるファイルに記述されたロシア語のキーマップ定義が
	  記述されています。ハンガリー語のキーマップが
	  <gnatspr><category>misc</category><number>11457</number></gnatspr>
	  にあります。また、メーリングリストのアーカイブに <ulink
	  url="http://mail-index.NetBSD.org/regional-de/2004/02/07/0009.html">i386 用スイス系ドイツ語と HP Jornada 720 用ドイツ語のキーマップ</ulink> 
	  もあります。</para>

	<para>X 環境下でのキーボードのレイアウトの設定については
	  <ulink url="../x/#x-keyboard-maps">ここ</ulink>に記述してあります。</para>
      </sect3>
      
      <sect3 id="keyboard-speed">
	<title>どうすればキーボードのリピート速度を変えられますか?</title>

	<para>キーボードのリピート速度は <emphasis role="bold">&man.wsconsctl.8;</emphasis> ユーティリティー
	  を使って変えることができます。関係する変数はふたつあります:
	  ひとつは <code>repeat.del1</code> で、リピートが始まるまでの時間を指定します。
	  もうひとつは <code>repeat.deln</code> で、 (リピートが始まってからの)
	  反復間隔を設定します。</para>

	<para>例を見てみましょう。キーボードの速度を変えたい状況であると仮定します。
	  コマンドラインで、以下のように変えることができます:</para>

	<screen>wsconsctl -w repeat.del1=300
wsconsctl -w repeat.deln=40</screen>
	
	<para>このほか、システム起動時に自動的にこの変更をするようにしたければ、
	  <filename>/etc/wscons.conf</filename>
	  ファイルに以下の内容を書き加えておくという方法もあります:
	  <screen>setvar repeat.del1=300
setvar repeat.deln=40</screen></para>
      </sect3>

      <sect3 id="screen0">
	<title><quote>WSDISPLAYIO_ADDSCREEN: Device busy</quote></title>

	<para>普通、このエラーメッセージは、wsconscfg がすでに存在するスクリーンを
	  追加しようとした時に表示されます。この現象は <filename>/etc/wscons.conf</filename> に
	  <code>screen 0</code> という行が存在する時にだけおこります。なぜなら
	  カーネルは、screen 0 を常にコンソールデバイスとして割り当てるからです。
	  このメッセージは無害ですが、<code>screen 0</code> の行を削除(または、
	  コメントアウト)すれば表示されなくなります。</para>
      </sect3>

      <sect3 id="colors">
	<title>どうしたらテキストの表示色を変更できますか?</title>

	<para>カーネルメッセージのテキストの色と背景色は、
	  カーネルコンフィグファイルで以下のように設定することで変更できます。</para> 

	<programlisting>options WS_KERNEL_FG=WSCOL_xxx
options WS_KERNEL_BG=WSCOL_xxx</programlisting>

	<para>この色の値 <code>WSCOL_xxx</code> は、
	  <filename>/usr/src/sys/dev/wscons/wsdisplayvar.h</filename> で定義されています。</para>

	<para>NetBSD 2.0G (NetBSD 2.0 より後の -current) からは、
	  表示の見た目のいろいろなカスタマイズが簡単にできるようになりました:
	  通常のメッセージ表示の色、カーネルメッセージ表示の色や、
	  画面周囲の縁取りの色を変えられます。</para>

	<para>これらの詳細はすべて、カーネルオプションと &man.wsconsctl.8;
	  ユーティリティーのどちらからでも変えられます; デフォルトの <code>GENERIC</code>
	  カーネルのオプションでは、 &man.wsconsctl.8; による方法が使えるようになっているので、
	  カーネルの再構築をしたくなければこちらを使うのがよいでしょう。</para>

	<para>以下に示すオプションを
	  &man.wsconsctl.8; を通じて設定可能です:</para>

	<itemizedlist>
	  <listitem><emphasis role="bold">border</emphasis>: 画面の縁取りの色です。
	    対応するカーネルオプションは
	    <code>WSDISPLAY_BORDER_COLOR</code> です。</listitem>

	  <listitem><emphasis
	      role="bold">msg.default.attrs</emphasis>: 通常のコンソールメッセージ表示の属性です。
	    対応するカーネルオプションは
	    <code>WS_DEFAULT_COLATTR</code>
	    と <code>WS_DEFAULT_MONOATTR</code> です
	    (前者はカラーディスプレイ用、
	    後者はモノクロディスプレイ用です)。</listitem>

	  <listitem><emphasis role="bold">msg.default.bg</emphasis>:
	    通常のコンソールメッセージ表示の背景色です。
	    対応するカーネルオプションは
	    <code>WS_DEFAULT_BG</code> です。</listitem>

	  <listitem><emphasis role="bold">msg.default.fg</emphasis>:
	    通常のコンソールメッセージ表示の色です。
	    対応するカーネルオプションは
	    <code>WS_DEFAULT_FG</code> です。</listitem>

	  <listitem><emphasis role="bold">msg.kernel.attrs</emphasis>:
	    カーネルメッセージおよび警告表示の属性です。
	    対応するカーネルオプションは
	    <code>WS_KERNEL_COLATTR</code> と
	    <code>WS_KERNEL_MONOATTR</code> です
	    (前者はカラーディスプレイ用、
	    後者はモノクロディスプレイ用です)。</listitem>

	  <listitem><emphasis role="bold">msg.kernel.bg</emphasis>:
	    カーネルメッセージおよび警告表示の背景色です。
	    対応するカーネルオプションは
	    <code>WS_KERNEL_BG</code> です。</listitem>

	  <listitem><emphasis role="bold">msg.kernel.fg</emphasis>:
	    カーネルメッセージおよび警告表示の色です。
	    対応するカーネルオプションは
	    <code>WS_KERNEL_FG</code> です。</listitem>
	</itemizedlist>

	<para>色として指定できるのは、 black, red, green, brown, blue,
	  magenta, cyan, white です。属性は、 reverse, hilit, blink, underline
	  のいずれか一つまたは複数をコンマで区切ります。</para>

	<para>たとえば、古い Amstrad マシンの一つの表示をエミュレートするには、
	  以下のようにします:</para>

	<screen>wsconsctl -d -w border=blue msg.default.bg=blue msg.default.fg=white msg.default.attrs=hilit</screen>

	<para>あるいは、カーネルメッセージを赤にするには、以下のようにします:</para>

	<screen>wsconsctl -d -w msg.kernel.fg=red</screen>

	<para>なお、これより前のバージョンの NetBSD では、これらの機能の一部しか使えませんので注意してください;
	  具体的には、カーネルメッセージの表示色を、
	  上述のカーネルオプションを使った方法で変えられるだけです。
	  さらに、すべてのドライバーがこの機能に対応しているわけではありませんので、
	  どのアーキテクチャーででも意図どおりの結果が得られるとは限りません。</para>
      </sect3>

      <sect3 id="muxdevices">
	<title>どうすれば wscons の "mux" デバイスを使えるようになりますか?</title>

	<para>wscons の <quote>mux</quote> デバイスは、
	  一つ以上の wskbd、wsmouse デバイスからの入力ストリームを多重化します。
	  多重化された wsmouse デバイスのためのデバイスは
	  <filename>/dev/wsmouse</filename> です。
	  そして、wskbd デバイスのためには
	  <filename>/dev/wskbd</filename> が用意されています。
	  もし、X サーバーが hardwiring なポインティングデバイスでなく、
	  <filename>/dev/wsmouse</filename>
	  を使用するように設定されている場合、wsmouse 互換のすべての
	  ポインティングデバイスを使うことができます。また、二つ以上のポインティング
	  デバイスを同時に使用することができます。</para>

	<para>以下の手順で使用可能になります。

	  <orderedlist>
	    <listitem>カーネルのコンフィギュレーションと再構築
	      <itemizedlist>
		<listitem>カーネルのコンフィグのすべての
		  <quote>wsmouse* at ...</quote> 行に、オプション
		  <quote>mux 0</quote> を追加してください(例えば、<emphasis 
		    role="bold">wsmouse* at ums? mux 0</emphasis>)。</listitem>
		<listitem>カーネルのコンフィグのすべての
		  <quote>wskbd* at ...</quote> 行に、上の例と同じ
		  ようにオプション <quote>mux 1</quote> を追加してください。</listitem>
		<listitem>カーネルのコンフィグに <quote><emphasis
		  role="bold">pseudo-device wsmux 2</emphasis></quote> が定義されて
		  いることを確認してください。</listitem>
		<listitem>カーネルを再構築します。
		  もし、再構築の方法を知らなければ、詳細な説明が <ulink
		    url="../kernel/">Kernel FAQ</ulink>
		  にあります。</listitem>
	      </itemizedlist>
	    </listitem>
	    <listitem><filename>/dev/wsmouse</filename> と
	      <filename>/dev/wskbd</filename> を作成してください。
	      <itemizedlist>
		<listitem>root になり <filename>/dev</filename> に cd し、
		  <quote><filename>./MAKEDEV wsmux</filename></quote> を実行してください。
		  もし、うまくいかなければ、手でデバイスを
		  <filename>/dev</filename> ディレクトリーに
		  作成してください。
		  <screen>mknod wsmouse c 65 0
mknod wskbd c 65 1
chown root:wheel wsmouse wskbd
chmod 600 wsmouse wskbd</screen>
		</listitem>
	      </itemizedlist>
	    </listitem>
	    <listitem>X を使用しているのであれば、
	      <filename>/etc/XF86Config</filename> を編集してください。
	      <itemizedlist>
		<listitem>XF86Config の残りの部分が正しく設定されているのであれば、
		  "Pointer" セクションのプロトコルとデバイス行を、
		  以下のように変更するだけです。
		  <screen>Protocol "wsmouse"
Device "/dev/wsmouse"</screen>
		</listitem>
	      </itemizedlist>
	    </listitem>
	  </orderedlist>
	</para>

	<para>これらの手順をすべておこなえば、ラップトップの組み込みポインティング
	  デバイスを常に使用することができます。そして、後で接続した USB マウスを、
	  カーネルの再構築や X サーバーの再スタートなしで使うことができます。</para>
      </sect3>

      <sect3 id="mouseres">
	<title>どうすればマウスの解像度を変更できますか?</title>

	<para>PS/2 マウスを使用しているのであれば、以下のコマンドでうまくいくでしょう。
	  <emphasis>nnn</emphasis> は、0 から 100 までの整数です。

	  <screen>wsconsctl -m -w resolution=<emphasis>nnn</emphasis></screen>
	</para>
      </sect3>

      <sect3 id="fontedit">
	<title>フォントエディターはありますか?</title>

	<para>コンソール用のフォントとしてロード可能なフォントが、
	  <filename>/usr/share/wscons/fonts</filename>
	  の中にいくつか存在します。これらの
	  フォントを編集したいのであれば、
	  <filename role="pkg">sysutils/pcvt-utils</filename> 
	  の中にある古い pcvt ユーティリティーを使用することができます。</para>
      </sect3>

      <sect3 id="moused">
	<title>どうすればシリアルマウスを使えるようになりますか?</title>

	<para>wsmouse デバイス (wscons の一部) は、シリアルマウスを直接にはサポートしません。
	  &man.moused.8; デーモンは、生のシリアルマウスデータを受け取ると、
	  wsmouse イベントに変換したうえで wscons イベントキューに送り込みます。
	  この結果、シリアルマウスは wsmouse によって抽象化された層を経由して
	  使用可能になります。</para>

	<para>典型的な使い方は <code>moused -p /dev/tty00</code> です。
	  こうすると、一つ目のシリアルポートに接続されたマウスの種類を判別し、
	  データ読み込みを開始します。
	  &man.moused.8; に、もっといろいろな例が載っています。</para>
      </sect3>

      <sect3 id="wsmoused">
	<title>どうすればマウスコンソールサポートが有効になりますか?</title>

	<para>マウスコンソールサポートは、 NetBSD 1.6B から、
	  &man.wsmoused.8; デーモン経由で利用可能になりました。
	  このプログラムは、 wscons コンソールでマウスポインターを使った
	  <emphasis>コピー &amp; ペースト</emphasis> 機能を提供します。</para>

	<para>現在、この機能は、 wscons の裏側で &man.vga.4; ビデオドライバーを使っている
	  アーキテクチャーすべてで使えます。具体的には、 alpha、 arc、 bebox、 cats、
	  hp700、 i386 と prep です。</para>

	<para>&man.wsmoused.8;
	  を使うための手順は以下のとおりです
	  (マニュアルページに、さらに情報があります):

	  <orderedlist>
	    <listitem>カーネルコンフィギュレーションファイルで
	      <code>WSDISPLAY_CHARFUNCS</code> を有効にして、
	      カーネルを再構築、インストールします。</listitem>

	    <listitem><filename>/etc/ttys</filename> を書き換えます:
	      <filename>/dev/console</filename> を無効にして、
	      <filename>/dev/ttyE0</filename> を有効にします;
	      これは wsmoused が利用します。</listitem>

	    <listitem>必要に応じて、
	      <filename>/etc/wscons.conf</filename> を書き換えて
	      <code>screen 0</code> (<filename>/dev/ttyE0</filename>)
	      を有効にします。</listitem>

	    <listitem><filename>/etc/rc.conf</filename> に
	      <code>wsmoused=yes</code> を書き加えます。 X Window System
	      を使っている場合は、このファイルに <code>wsmoused_flags="-X 4"</code>
	      も書いておくのがよいでしょう; これで、どのコンソールで X11
	      が走っているかがデーモンに知らされます。</listitem>

	    <listitem>再起動し、お楽しみください!</listitem>
	  </orderedlist>
	</para>
      </sect3>
    </sect2>
  </sect1>

  <parentsec url="../" text="NetBSD Documentation Top Level"/>
  
</webpage>
