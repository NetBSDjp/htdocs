<!-- $NetBSD: components.xml,v 1.1 2004/06/06 13:31:53 grant Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: components.xml,v 1.1 2004/06/06 13:31:53 grant Exp   -->

<chapter id="components">
  <title>パッケージコンポーネント - ファイル、ディレクトリー、およびコンテンツ</title>

  <para>パッケージを用意する際にはいつも、以下のセクションで述べられている多くのファ
    イルが存在します。</para>

  <sect1 id="components.Makefile">
    <title><filename>Makefile</filename></title>

    <para>構築、インストールおよびバイナリーパッケージの作成は、すべてパッケージの
      <filename>Makefile</filename>によりコントロールされます。</para>

    <para>それぞれのパッケージのための<filename>Makefile</filename>があります。
      このファイルは、パッケージ
      のコンパイルとインストールのために必要なすべての定義とアクションがセットさ
      れた標準の<filename>bsd.pkg.mk</filename>ファイル
      (<filename>../../mk/bsd.pkg.mk</filename>)をインクルードします。必
      須となる変数は、インターネットのサイトからダウンロードされる配布ファ
      イルのベース名を指定する<varname>DISTNAME</varname>と、そのサイトを指定する<varname>MASTER_SITES</varname>、パッ
      ケージが置かれるカテゴリーを意味する<varname>CATEGORIES</varname>、パッケージの名前である
      <varname>PKGNAME</varname>と、メンテナー名である<varname>MAINTAINER</varname>と、パッケージの一行説明(パッケージ
      名は自動的に追加されるので、含めないでください) からなる<varname>COMMENT</varname>変数です。
      maintainer変数は、そのパッケージを維持する人による(いつも完全に正しい)決定
      にへりくつを言う誰かが、活発に苦情を言うことができるようにするためです。</para>

    <para><varname>MASTER_SITES</varname>は、定義済みのサイトの一つをセットすることもできます。</para>

    <programlisting>${MASTER_SITE_XCONTRIB}
${MASTER_SITE_GNU}
${MASTER_SITE_PERL_CPAN}
${MASTER_SITE_TEX_CTAN}
${MASTER_SITE_SUNSITE}
${MASTER_SITE_GNOME}
${MASTER_SITE_SOURCEFORGE}</programlisting>

    <para>もしこれらの予め定義されたサイトの1つを選んだ場合、そのサイトのサブディレク
      トリーを指定する方法が必要となるかもしれません。これらのマクロは複数の実際
      のサイトに展開されるかもしれませんので、サブディレクトリーを指定する場合は、
      以下の表記を<emphasis>使わなければなりません</emphasis>:</para>

    <programlisting>${MASTER_SITE_GNU:=subdirectory/name/}</programlisting>

    <para>サブディレクトリー名の後のスラッシュ/に注意してください。</para>

    <note>
      <para><varname>MASTER_SITE_SUBDIR</varname> は廃止されましたので、
	<emphasis>もう使わないでください</emphasis>。</para>
    </note>

    <para>パッケージに複数の<varname>DISTFILES</varname>または複数の
      <varname>PATCHFILES</varname>があって、それらの配布元サ
      イトが異なる場合は、<varname>SITES_foo</varname>を、ファイル
      <quote>foo</quote>があるURIを列挙したものに設定
      します。<quote>foo</quote>にはサフィックスを含めます。たとえば以下のようにします。</para>

    <programlisting>DISTFILES=	${DISTNAME}${EXTRACT_SUFX}
DISTFILES+=	foo-file.tar.gz
SITES_foo-file.tar.gz=http://www.somewhere.com/somehow/ \
	http://www.somewhereelse.com/mirror/somehow/</programlisting>

    <para>なお、通常おこなうような、<varname>DISTFILES</varname>へのファイルの(置換ではなく)追加をする場
      合は、標準的な<varname>DISTFILES</varname>のデフォルト設定を明示的におこなわなければなりません。</para>

    <para>現在<varname>CATEGORIES</varname>の値として以下が使用できます。もし複数にまたがる場合、それら
      の値はスペースで分けられる必要があります:</para>

    <programlisting>archivers  audio      benchmarks   biology       cad
chat       comms      converters   cross         databases
devel      editors    emulators    finance       fonts
games      graphics   ham          japanese      lang
mail       math       mbone        misc          net
news       parallel   print        security      shells
sysutils   textproc   time         wm            www
x11</programlisting>

    <para>以下の事柄に気を配ってください。:</para>

    <itemizedlist>
      <listitem>
	<para>もしパッケージによりマニュアルページが圧縮され
	  た形式でインストールされる場合、<varname>MANCOMPRESSED</varname>を追加してください。
	  <filename>bsd.pkg.mk</filename>のコメントを参照。</para>
      </listitem>

      <listitem>
	<para>すべてのファイルの<filename>/usr/local</filename>を<quote>${PREFIX}</quote>に変更してください。(後述のパッチ
	  を参照)</para>
      </listitem>

      <listitem>
	<para>もし、パッケージがinfoファイルをインストールするのであれば、
	  <xref linkend="features.info-files"/>を参照してください。</para>
      </listitem>

      <listitem>
	<para>もしあなたが将来の更新のために、そのパッケージをメンテナンスするつもりで
	  あれば、
	  <varname>MAINTAINER</varname>にあなたのメールアドレスをセットしてください。標準では
	  MAINTAINERは<email>tech-pkg@NetBSD.org</email>にセットします。</para>
      </listitem>

      <listitem>
	<para>もし問題のソフトウェアにホームページが存在するのであれば、
	  <varname>MAINTAINER</varname>の後ろに
	  <varname>HOMEPAGE</varname>を追加してください。
	  <varname>HOMEPAGE</varname>の値はホームページのURLにしてください。</para>
      </listitem>

      <listitem>
	<para>パッケージの短い説明を<varname>COMMENT</varname>変数に設定してください。</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="components.distinfo">
    <title><filename>distinfo</filename></title>

    <para>最も重要で必須な、パッケージのコンパイルに必要なすべてのdistfileのメッセー
      ジダイジェストあるいはチェックサムです。作者が配布した元のファイルに対して、
      このメッセージダイジェストが一致することを確認しています。これをもとに、イ
      ンターネットから取得したdistfileが転送中にファイルが壊れたり、悪意によりセ
      キュリティーホールを入れられたファイルに変更されていたりしていないことを確
      認します。これは<command>make makesum</command>により生成するのが最善です。ダイジェストアル
      ゴリズムには md5 が使われていましたが、これはsha1に比べて弱いため、現在は
      sha1がデフォルトのアルゴリズムになっています。また、distfileの容量も生成さ
      れ、新しいdistinfoファイルに格納されます。<pkg>pkgtools/digest</pkg>ユーティリ
      ティーは、distinfoファイル用のダイジェストをすべて計算してくれますし、さま
      ざまなアルゴリズムにも対応しています。現在、以下のアルゴリズムに対応してい
      ます:
      <emphasis>md5</emphasis>, <emphasis>rmd160</emphasis>,
      <emphasis>sha1</emphasis>, <emphasis>sha256</emphasis>,
      <emphasis>sha384</emphasis>, <emphasis>sha512</emphasis></para>

    <para>パッケージによっては、アーキテクチャー毎にdistfileの組が異なるものがありま
      す(<pkg>www/navigator</pkg>がよい例です)。この情報は単一のdistinfoファイルに
      書かれるので、このようなパッケージの更新時には、distfileの情報が失われない
      ように注意を払ってください。</para>

    <para><filename>patches/</filename>ディレクトリー
      (<xref linkend="components.patches"/>参照)に入っている、公式なすべてのパッチ
      のメッセージダイジェスト/チェックサムも、この<filename>distinfo</filename>ファイルに格納されます。
      これは、パッチ中の&os; RCS Idを除いたすべての行のメッセージダイジェスト/
      チェックサムです。このファイルは<command>make makepatchsum</command>コマンドにより生成するこ
      とができます。</para>
  </sect1>

  <sect1 id="components.patches">
    <title>patches/*</title>

    <para>このディレクトリーは、
      &man.patch.1;コマンドが使用するファイルを含んでい
      ます。このファイルは、配布ファイルのソースを&os;上で完全にコンパイルして
      実行できるように変更するためのものです。これらのファイルは、アルファベット
      順(シェルによる
      <quote>patches/patch-*</quote>
      展開順)で適用されます。つまり<filename>patch-aa</filename>は
      <filename>patch-ab</filename>より前に適用されます。</para>

    <para>問題を避けるため、<filename>patch-??</filename>ファイルは
      <command>diff -bu</command>フォーマットとし、かつ、曖昧
      さなしで適用できるようにします。(曖昧さがあっても強制的にパッチを適用させる
      ため、<varname>PATCH_FUZZ_FACTOR=-F2</varname>を設定することができます)。なお、将来の変更が難
      しくなってしまうので、一つのパッチファイルに、複数のファイルへの変更を入れ
      るのは止めてください。</para>

    <para>同様に、一つのファイルへのパッチあては最大一回とし、複数のパッチを使って複
      数回パッチをあててはいけません。もしファイルに複数のパッチが必要なら、それ
      は一つのファイルにまとめておきます。</para>

    <para>一つ重要なこととして、&os; CVSツリーにチェックインした後に問題を引き起こ
      すので、パッチファイルにRCS IDを含ませないように注意してください。
      この問題を避けるため、 <pkg>pkgtools/pkgdiff</pkg> パッケージを使ってください。</para>

    <para>さらに自動化するため、同パッケージのmkpatchesを使ってパッチ一式を作ることを
      おすすめします。あなたがやらねばならないことは、ファイルの編集前に
      <command>cp -p filename filename.orig</command>のようにするか、あるいはさらに簡単に、同パッケージの
      <command>pkgvi</command>を使って、元のファイルを<filename>filename.orig</filename>の名前でバックアップしておくだ
      けです。この方法でパッケージをアップグレードした場合、patchdiffを使って、新
      しいパッチと既存のパッチを簡単に比較することができます。</para>

    <para>パッケージを作り終えたとき、忘れずに<command>make makepatchsum</command>コマンドでパッチファ
      イルのチェックサムを生成するようにしてください。<xref linkend="components.distinfo"/>を参照してくだ
      さい。</para>

    <para>置いておきたいパッチがあるがpkgsrcにcommitすべきものではない場合、それを
      pkgsrcツリーの外の
      <filename>$LOCALPATCHES</filename>
      ディレクトリーに置いておくことができます。こ
      のディレクトリーツリーはpkgsrcと同様の<quote>category/package</quote>の構造を持つように
      し、パッチを各パッケージのディレクトリー(すなわち<filename>$LOCALPATCHES/$PKGPATH</filename>)に
      置くようになっています。たとえば、<filename>pkgsrc/graphics/png</filename>に私的なパッチを適用す
      るようにしたい場合は、そのパッチを<filename>$LOCALPATCHES/graphics/png/mypatch</filename>に置き
      ます。このディレクトリーにあるファイルはすべてパッチファイルとして扱われ、
      <emphasis>pkgsrcのパッチが適用された後に、このパッチが適用されます</emphasis>。</para>
  </sect1>

  <sect1>
    <title>その他の必須のファイル</title>

    <variablelist>
      <varlistentry>
	<term><filename>DESCR</filename></term>

	<listitem>
	  <para>ソフトウェアについての複数行の説明。このファイルには適切なクレジットを含
	    めておいてください。他人があなたのユーモアのセンス(あるいは変わった綴り)
	    を理解してくれない事、そしてここに書かれたものすべてを他人が読むであろう
	    という事を念頭においておいてください。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>PLIST</filename></term>

	<listitem>
	  <para>
	    このファイルは、システムにインストールされるファイルを管理します:すべて
	    のバイナリー、マニュアルページ、その他。ディレクトリーの作成、削除、イン
	    サートされた(inserted)ファイルの位置を管理するための、他のディレクティブ
	    もこのファイルに記述されます。</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1>
    <title>オプションのファイル</title>

    <variablelist>
      <varlistentry>
	<term><filename>INSTALL</filename></term>

	<listitem>
	  <para>このシェルスクリプトは&man.pkg.add.1;実行中に二度起動されます。
	    最初は、パッケー
	    ジが展開された後、ファイルが移動される前に、二度目はインストールするファ
	    イルが移動された後。このファイルは、
	    <filename>PLIST</filename>内の@execコマンドでは不可能な特
	    別な処理のために使うことができます。より詳細な情報は&man.pkg.add.1;と
	    &man.pkg.create.1;を参照してください。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>DEINSTALL</filename></term>

	<listitem>
	  <para>このスクリプトは、ファイルが削除される前後に実行されます。このスクリプト
	    の責任は、パッケージのインストレーションにかかわる雑多なものをきれいにす
	    ることです。なぜなら、pkg_deleteは、オリジナルのディストリビューションで
	    作成されたファイルをどのように削除するかをすべて知っておかなければならな
	    いからです。より詳細な情報は&man.pkg.delete.1;と
	    &man.pkg.create.1;を参照してください。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>MESSAGE</filename></term>

	<listitem>
	  <para>パッケージのインストール後にこのファイルの内容が表示されます。
	    完全にフリーでないソフトウェアについての法的な通知等に役立ちます。
	    パッケージの<filename>Makefile</filename>で
	    <varname>MESSAGE_SUBST</varname>を使うことで、変数を簡単に変えられる
	    ことに注意してください:</para>

	  <programlisting>MESSAGE_SUBST+=  SOMEVAR="somevalue"</programlisting>

	  <para>とすると、<filename>MESSAGE</filename>中の "${SOMEVAR}" は、<quote>somevalue</quote>に置換されます。</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1>
    <title><filename>work*</filename></title>

    <para><command>make</command>とタイプした時に、配布ファイルがこのディレクトリーに展開されます。
      <command>make clean</command>
      を実行すれば、これらを削除することができます。</para>

    <para>また、このディレクトリーはさまざまなタイムスタンプファイルを作っておくた
      めにも使用されます。</para>
  </sect1>

  <sect1>
    <title><filename>files/*</filename></title>

    <para>また、もしあなたがコンフィギュレーションまたは構築するより前に、パッケージ
      中に何かファイルを置きたいならば、それらのファイルをfilesディレクトリーに置
      くことができますし、pre-configureターゲットで、<quote>${CP}</quote>コマンドによりコピーす
      ることができます。あるいは、<filename>/dev/null</filename>に対するそのファイルの単純なdiffをとり、
      パッチメカニズムを使用して、そのファイルを生成することもできます。</para>
  </sect1>

  <sect1>
    <title>パッケージの移植性</title>

    <para>pkgsrc の目玉の一つは、多くのプラットフォームで動作することです。
      そのため、pkgsrc のパッケージの移植性をできるかぎり高めることが重要になります。
      pkgsrc の作業に際して、
      具体的には以下のような事項に注意してください。</para>

    <sect2>
      <title>${INSTALL}, ${INSTALL_DATA_DIR}, ...</title>

      <para>一部のプラットフォームに附属する BSD 互換の <command>install</command> は、
	一度に複数の操作をおこなうことができません。
	このため、 <quote>${INSTALL}</quote> などを使うときは、以下のようにします。</para>

      <programlisting>${INSTALL_DATA_DIR} ${PREFIX}/dir1
${INSTALL_DATA_DIR} ${PREFIX}/dir2</programlisting>
    </sect2>

<!--
<sect2>
XXX more portability stuff
XXX USE_PKGLOCALEDIR
XXX ???
</sect2>
-->
  </sect1>
</chapter>
