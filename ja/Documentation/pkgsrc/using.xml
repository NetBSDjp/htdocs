<!-- $NetBSD: using.xml,v 1.1 2004/06/06 13:31:54 grant Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: using.xml,v 1.1 2004/06/06 13:31:54 grant Exp   -->

<chapter id="using">
  <title>&os; パッケージシステムを使う</title>

  <sect1 id="getting-started">
    <title>バイナリーパッケージを使って作業する</title>

    <para>このセクションは、あなたの機種用にすでに準備されたコンパイル済みのバイナリー
      パッケージを見つけ、取得してインストールする方法について説明します。</para>

    <sect2>
      <title>バイナリーパッケージの入手方法</title>

      <para>コンパイル済みのパッケージは、ftp.NetBSD.orgおよびそのミラー上の、匿名FTPア
	クセスのためのディレクトリー<filename>/pub/NetBSD/packages</filename>に置かれています。
	<command>uname -p</command>で表示されるのと同じサブディレクトリーを選択してください。このディレクト
	リーの中には、カテゴリー毎のサブディレクトリーと、<filename>All</filename>サブディレクトリー
	が存在しています。<filename>All</filename>サブディレクトリーの中には、
	<filename>.tgz</filename>ファイル形式で実際
	のバイナリーがあります。カテゴリー毎のサブディレクトリーは、これらのファイ
	ルへのシンボリックリンクを使用しています (<filename>/usr/pkgsrc/packages</filename>と同じディレ
	クトリー配置です)。</para>

      <para>CDROMディストリビューションでも、このディレクトリー配置は同じで、単
	にディレクトリーのルートが異なるだけです。たぶん<filename>/cdrom</filename>かどこかの下でしょう。
	正確なディレクトリーは、CDROMのドキュメンテーションを参照してください。</para>
    </sect2>

    <sect2>
      <title>バイナリーパッケージのインストール</title>

      <para>もし、コンパイル済みのパッケージのファイルがCDROM上にある、あるいはハードディ
	スク上にダウンロードされているのであれば、以下のコマンドでインストールする
	ことができます(最初にrootに
	&man.su.1;している事を確認してください):</para>

      <screen>&rprompt; <userinput>pkg_add <replaceable>/path/to</replaceable>/package.tgz</userinput></screen>

      <para>もし、FTPアクセスが可能で、インストール前にFTPを使ってパッケージをダウンロー
	ドしたくないのであれば、&man.pkg.add.1;にFTPのURLを指定して自動でダウンロードさせる
	事もできます。</para>

      <screen>&rprompt; <userinput>pkg_add ftp://ftp.NetBSD.org/pub/NetBSD/packages/<replaceable>OS Ver</replaceable>/<replaceable>arch</replaceable>/All/package.tgz</userinput></screen>

      <para>ここで <replaceable>OS Ver</replaceable> や
	<replaceable>arch</replaceable> がよくわからない場合は、unameユーティリティーを
	<command>uname -rp</command>のように使って調べられます。</para>

      <para>また、パッケージを実行するためにあらかじめ必要な他のパッケージがインストー
	ルされるかもしれない事にも注意してください。一緒にインストールされる他のパッ
	ケージも同じ場所に存在していると仮定されます。</para>

      <para>パッケージをインストールした後に、<varname>PATH</varname>に <filename>/usr/pkg/bin</filename> が含まれている事を確
	認してください。これで、インストールされたプログラムを実際に使い始めること
	ができます。</para>
    </sect2>

    <sect2>
      <title>警告</title>

      <para>マニュアルページで警告されている、自分自身で作ったものでないバイナリー
	パッケージをインストールすることが孕む危険性、無思慮にこのようなファイルを
	インストールすることにより、あなたのシステムにセキュリティーホールが生じる
	事についてよく注意してください。</para>
    </sect2>
  </sect1>

  <sect1>
    <title>ソースからパッケージを構築する</title>

    <para>ここでは、パッケージがすでに&os;パッケージシステムに含まれていると仮定
      しています。もし、そうでなれば、<xref linkend="developers-guide"/>をご覧ください。</para>

    <sect2>
      <title>必要なもの</title>

      <para>&os;システム上で、ソースからパッケージを構築するためには、
	<quote>comp</quote>および<quote>text</quote>
	配布物一式をインストールしておく必要があります。X11関連のパッケージを
	構築する場合は、さらに<quote>xbase</quote>および<quote>xcomp</quote> 配布物一式も必要です。</para>

      <sect3>
	<title>どこからpkgsrcを得るか</title>

	<para>pkgsrcには三つの入手方法があります。tarファイル、SUP経由、そしてCVS経由です。
	  ここではこの三つとも説明します。</para>

	<para>パッケージのソースを入手するためには、pkgsrc.tar.gzファイルを<ulink url="ftp://ftp.NetBSD.org/pub/NetBSD-current/tar_files/pkgsrc.tar.gz">ftp.NetBSD.org</ulink>から取得し、
	  <filename>/usr/pkgsrc</filename>に展開する必要があります。</para>

	<para>あるいは、ソフトウェア更新プロトコル(Software Update Protocol) SUPを使い
	  pkgsrcを入手することもできます。まず、supfileの中に</para>

	<programlisting>release=pkgsrc</programlisting>

	<para>という
	  行があることを確認してください。例えば、<filename>/usr/share/examples/supfiles</filename>を見て
	  ください。それから<filename>/usr/pkgsrc</filename>ディレクトリーが存在することを確認してください。
	  後は
	  <command>sup -v <replaceable>/path/to/your/supfile</replaceable></command>
	  を実行するだけです。</para>

	<para>CVS経由でpkgsrcを入手するためには、cvsがインストールされていることが必要で
	  す。お使いのシステムにcvsがない場合は、コンパイル済バイナリーが
	  ftp.NetBSD.orgにあります。pkgsrcを初めて(完全に)チェックアウトする際は、以
	  下の手順を踏みます:</para>

	<screen>&cprompt; <userinput>setenv CVSROOT anoncvs@anoncvs.NetBSD.org:/cvsroot</userinput>
&cprompt; <userinput>setenv CVS_RSH ssh</userinput>
&cprompt; <userinput>cd /usr</userinput>
&cprompt; <userinput>cvs checkout -P pkgsrc</userinput></screen>

	<para>こうすると、<filename>/usr</filename>以下に<filename>pkgsrc</filename>ディレクトリーが作られ、
	  <filename>/usr/pkgsrc</filename>以下に全パッ
	  ケージのソースが入った状態になります。一旦チェックアウトしたpkgsrcを更新す
	  るには、
	  <varname>CVS_RSH</varname>を上のように設定してから、以下のようにします:</para>

	<screen>&cprompt; <userinput>cd /usr/pkgsrc</userinput>
&cprompt; <userinput>cvs -q update -dP</userinput></screen>

	<para>また、pkgsrcの階層構造を、使用中の状態で複数持つことも常にできます - すべて
	  の作業は、pkgsrcツリーに対する相対位置で実行されます。</para>
      </sect3>

      <sect3>
	<title>配布ファイルの取得</title>

	<para>ひとつ注意しておくことがあります:パッケージシステムを構築するためには、
	  配布ファイル(未変更のソース)がシステム上に存在していなけれ
	  ばなりません。もし、存在しない場合は配布ファイルを取得するために自動的に
	  &man.ftp.1;が実行されます。</para>

	<para>主要な配布サイトをあなたのところに近いサイトで上書きす
	  ることができます。
	  <filename>pkgsrc/mk/bsd.pkg.defaults.mk</filename>の例の、特に<varname>MASTER_SORT</varname>,
	  <varname>MASTER_SORT_REGEX</varname>,
	  <varname>INET_COUNTRY</varname> 定義を参照してください。これにより、帯域幅
	  と時間が節約できるかもしれません。</para>

	<para>これらの設定は、シェルの環境変数でも変更できますし、その設定を今後も有効に
	  したければ、
	  <filename>/etc/mk.conf</filename>
	  ファイルにその定義を書き加えておくこともできます。</para>

	<para>もし、インターネットへ常時接続しておらず、ダウンロードするファイルを知りた
	  い場合は、<command>make fetch-list</command>を実行すれば、必要なファイルがわかります。それ
	  らの配布ファイルを
	  <filename>/usr/pkgsrc/distfiles</filename>に置いてください。</para>
      </sect3>

      <sect3>
	<title>構築とインストール方法</title>

	<para>配布ファイルが取得してあれば、パッケージの構築は、
	  パッケージのディレクトリーに移動して make を実行するだけです。</para>

	<screen>&cprompt; <userinput>cd editors/vim</userinput>
&cprompt; <userinput>make</userinput></screen>

	<para>パッケージをシステムにインストールするには root 権限が必要です。
	  ただし、pkgsrc には<emphasis>必要な時のみ</emphasis> su する機能があり、
	  実際のインストール時にのみ root になることができます。
	  たとえば、</para>

	<screen>&cprompt; <userinput>make install</userinput>
===> Installing for top-3.5beta5
===> Becoming root@mofo to install top-3.5beta5.
/usr/bin/su Password: <userinput>&lt;password&gt;</userinput>
[...インストールがおこなわれます...]</screen>

	<para>topシステムユーティリティーを例にあげると、<xref linkend="logs"/>のように構築することに
	  より、システムにインストールすることができます。</para>

	<para>プログラムはパッケージツリーのデフォルトルート- <filename>/usr/pkg</filename>にインストール
	  されます。もし、このディレクトリーが趣味にあわないのであれば、環境変数
	  <varname>LOCALBASE</varname>
	  を設定してください。この値はパッケージツリーのルートとして使用さ
	  れます。例えば、<filename>/usr/local</filename>を使う場合、
	  <varname>LOCALBASE=/usr/local</varname> と設定してください。
	  なお、ルートにはパッケージ専用の場所を使い、他のプログ
	  ラムと共有させないようにします(つまり、 <varname>LOCALBASE=/usr</varname> などとしてはいけませ
	  ん)。また、<varname>LOCALBASE</varname>ツリー内には、独自のファイルやディレクトリー
	  (<filename>src/</filename>,
	  <filename>obj/</filename>, <filename>pkgsrc/</filename>
	  のようなもの)は一切追加しないようにしてください。これは、パッ
	  ケージシステムがインストールするプログラムなどのファイルが、そこにインストー
	  ルされているかもしれない別のファイルと衝突することがないようにするためです。</para>

	<para>もちろん、ひとつ例外があります。X11パッケージは伝統的にX11ツリーにインストー
	  ルされます。X11ツリーのルートの決定には、<varname>X11BASE</varname> の定義が使われます。</para>

	<para>X11パッケージを<varname>LOCALBASE</varname>ツリーにインストールすることもできます。このために
	  は、<pkg>pkgtools/xpkgwedge</pkg>パッケージをインストールしなければ
	  なりません- 詳細は<xref
	    linkend="build.prefix"/>をご覧ください。</para>

	<para>いくつかのパッケージは、構築時にいくつかのコンフィギュレーションオプション
	  を変えるために<filename>/etc/mk.conf</filename>を参照します。デフォルトの設定項目については、
	  <filename>pkgsrc/mk/bsd.pkg.defaults.mk</filename>をのぞいてみてください。<varname>LOCALBASE</varname>や
	  <varname>X11BASE</varname>といっ
	  た環境変数は、pkgsrc使用時に毎回使えるように<filename>/etc/mk.conf</filename>で設定しておくこと
	  ができます。</para>

	<para>時々、 パッケージの構築やインストールの際に、<quote>水面下</quote>で何が起きているかを
	  見たいことがあります。これは、デバッグのためなのかもしれませんし、好奇心が
	  高じたものかもしれません。このような用途に使うための変数がいくつも用意され
	  ています。</para>

	<orderedlist>
	  <listitem>
	    <para>&man.make.1;コマンドを<varname>PKG_DEBUG_LEVEL=2</varname>付きで呼び出すと、大量の情報が表示さ
	      れるようになります。たとえば、</para>

	    <screen>&cprompt; <userinput>make patch PKG_DEBUG_LEVEL=2</userinput></screen>

	    <para>は、<quote>patch</quote>の段階および、そこに至るまでに呼び出されるコマンドをすべて表示し
	      ます。</para>
	  </listitem>

	  <listitem>
	    <para>特定のmake(1)定義の値を知りたい場合は、show-varターゲットとともに、
	      <varname>VARNAME</varname>定義を使います。たとえば、</para>

	    <screen>&cprompt; <userinput>make show-var VARNAME=DISTFILES</userinput></screen>

	    <para>は、&man.make.1;変数
	      <varname>DISTFILES</varname>の展開結果を表示します。</para>
	  </listitem>
	</orderedlist>

	<para>自分で作った(次章参照)、手動でpkgsrc/packagesに置いた、またはリモートFTPサー
	  バーに置かれたバイナリーパッケージを、アンインストールおよび再インストール
	  したい場合は、"bin-install"ターゲットを使うことができます。このターゲットは、
	  - もし可能ならば - &man.pkg.add.1;を使ってバイナリーパッケージをインストールするほ
	  か、<command>make package</command>をおこないます。検索先リモートFTPサーバーのリストは
	  <varname>BINPKG_SITE</varname>変数に保持され、デフォルトはftp.NetBSD.orgです。&man.pkg.add.1;に与え
	  るべきフラグはすべて、<varname>BIN_INSTALL_FLAGS</varname>変数で保持することができます。詳細は
	  <filename>pkgsrc/mk/bsd.pkg.defaults.mk</filename>をご覧ください。</para>

	<para>最後に警告: 標準でない<varname>LOCALBASE</varname>(または
	  <varname>X11BASE</varname>)の設定をしたシステムの場合は、
	  各パッケージのインストール前にこれらを設定するようにしてください。複数のディ
	  レクトリーを同じ目的用に分散して使うことはできないからです。そのようなこと
	  をすると、pkgsrcはインストール済みのパッケージを正しく検出することができず、
	  無惨に失敗することになるでしょう。また、コンパイル済バイナリーパッケージは、
	  通常はデフォルトの<varname>LOCALBASE</varname>である
	  <filename>/usr/pkg</filename>を使って構築されているので、標準で
	  ない<varname>LOCALBASE</varname>を使っている場合は、とにかくコンパイル済バイナリーパッケージを
	  インストールしては<emphasis>いけません</emphasis>。</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
