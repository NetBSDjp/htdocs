<!-- $NetBSD: plist.xml,v 1.1 2004/06/06 13:31:54 grant Exp $ -->
<!-- Based on english version: -->
<!-- NetBSD: plist.xml,v 1.1 2004/06/06 13:31:54 grant Exp   -->

<chapter id="plist">
  <title>PLIST*問題</title>

  <para>このセクションでは、<filename>PLIST</filename>ファイル(複数の場合もあります、以下を参照してくだ
    さい)を扱う場合に注意が必要な、いくつかの特別な問題について述べます。</para>

  <sect1 id="plist.misc">
    <title>その他色々</title>

    <variablelist>
      <varlistentry>
	<term>&os; RCS Id</term>

	<listitem>
	  <para>
	    あなたが書いたすべての<filename>PLIST</filename>ファイルの先頭行にRCS IDが追加されていること
	    を確認してください。
	  </para>

	  <para>
	    <programlisting>@comment &#36;NetBSD&#36;</programlisting>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>${MACHINE_ARCH}, ${MACHINE_GNU_ARCH}</term>

	<listitem>
	  <para>emacs、およびperlのようないくつかのパッケージは、それらが構築されたアー
	    キテクチャーに関する情報を、インストールするファイルのパス名に埋め込みま
	    す。このようなケースに対応するため、実際に使われる前に、PLISTに前処理が
	    おこなわれます。そして、シンボル「${MACHINE_ARCH}」は、<command>uname -p</command>の出
	    力でおきかえられます。${MACHINE_GNU_ARCH}がPLISTのどこかにうめこまれてい
	    る場合も同様の事がおこなわれます。これは、GNU autoconfで作成された
	    configureスクリプトを持つパッケージで使われます。</para>

	  <note>
	    <title>昔の話</title>

	    <para>「&lt;$ARCH&gt;」シンボルは<command>uname -m</command>の出力によって置きかえられていま
	      した。しかし、もはやサポートされていませんし、削除されています。</para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>${OPSYS}, ${LOWER_OPSYS}, ${OS_VERSION}</term>

	<listitem>
	  <para>いくつかのパッケージでは、OS名とバージョンをいくつかのパス名に埋め込みま
	    す。このような場合、<filename>PLIST</filename>で以下の各変数を使用してください。
	  </para>

	  <itemizedlist>
	    <listitem>
	      <para>${OPSYS} - "uname -s"の出力</para>
	    </listitem>

	    <listitem>
	      <para>${LOWER_OPSYS} - 共通名の小文字表記(例: "solaris")</para>
	    </listitem>

	    <listitem>
	      <para>${OS_VERSION} - "uname -r"</para>
	    </listitem>
	  </itemizedlist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>${PKGLOCALEDIR}</term>

	<listitem>
	  <para>ロケールファイルをインストールするパッケージでは、ロケールファイルを
	    <quote>share/locale/de/LC_MESSAGES/...</quote>ではなく
	    <quote>${PKGLOCALEDIR}/locale/de/LC_MESSAGES/...</quote>という形でPLISTに列挙します。
	    ロケールファイルのデフォルトの場所はOSによって<filename>share</filename>か<filename>lib</filename>か異なります
	    が、このような形で書くことで適切に処理することができます。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>マニュアルページの圧縮</term>

	<listitem>
	  <para>もし、(<filename>bsd.own.mk</filename>に)<varname>MANZ</varname>が設定されていれば、マニュアルページは圧縮形式で
	    インストールされます。そうでなければ展開された形式でインストールされます。
	    <filename>PLIST</filename>ファイルでこれをサポートするために、<varname>MANZ</varname>と <varname>MANCOMPRESSED</varname>の設定の有
	    無に従い、<quote>.gz</quote>サフィックスがマニュアルページに自動的に追加、削除され
	    ます。この<filename>PLIST</filename>ファイルに対する変更は、<filename>PLIST</filename>自身にたいしてでなく、それが
	    コピーされる時におこなわれます。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>プラットフォーム別に異なるPLIST</term>

	<listitem>
	  <para>パッケージのなかには、インストールするファイルの組合せを、対象のオペレー
	    ティングシステムによって変えるものがあります。このような差異は、以下のファ
	    イルを使って自動的に処理することができます。</para>

	  <itemizedlist>
	    <listitem>
	      <para><filename>PLIST.common</filename></para>
	    </listitem>

	    <listitem>
	      <para><filename>PLIST.${OPSYS}</filename></para>
	    </listitem>

	    <listitem>
	      <para><filename>PLIST.common_end</filename></para>
	    </listitem>
	  </itemizedlist>

	  <para><filename>PLIST.${OPSYS}</filename>が存在する場合、<filename>PLIST</filename>のかわりにこのファイルが使われます。
	    こうすることで、インストールするファイルの組合せを変えるようなパッケージ
	    をうまく処理することができます。さらに変わった使途のために、<varname>PLIST_SRC</varname>を
	    手動で上書きすることも可能です。</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><filename>PLIST</filename> の半自動生成</term>

	<listitem>
	  <para><command>make print-PLIST</command>コマンドを使って、パッケージの展開後に新しくできた全ファ
	    イルにマッチするPLISTを出力することができます。このターゲットに関するさ
	    らなる情報は、下の説明をご覧ください。</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1>
    <title>PLIST_SRC</title>

    <para>ひとつ以上のファイルを、バイナリーパッケージを構築するために<filename>PLIST</filename>のソース
      として使用する時は、それらのファイル名を変数<varname>PLIST_SRC</varname>に設定してください。こ
      れらのファイルは、後でcat(1)によって連結されます。連結の順番は重要です。</para>
  </sect1>

  <sect1>
    <title>PLIST_SUBST</title>

    <para><varname>MESSAGE_SUBST</varname>(前述)に似ており、以下のようにして、変数とその展開結果を追
      加することができます:</para>

    <programlisting>PLIST_SUBST+=    SOMEVAR="somevalue"</programlisting>

    <para>これは、<filename>PLIST</filename>中にある<quote>${SOMEVAR}</quote>をすべて<quote>somevalue</quote>に置換します。デフォルト
      で置換が行なわれる値については、<filename>bsd.pkg.mk</filename>を見て(<emphasis>PLIST_SUBST</emphasis>を調べて)くださ
      い。</para>
  </sect1>

  <sect1>
    <title>Perl5 モジュール</title>

    <para>perl5モジュールを提供するパッケージでは、Makefileにmakefileの断片
      <filename>lang/perl5/module.mk</filename>をインクルードしてください。このファイルには、perl5モ
      ジュール用の標準的なperlの構成をするdo-configureターゲットのほか、その構成
      を調整するためのさまざまなフックが含まれています。詳細は、このファイル中の
      コメントをご覧ください。</para>

    <para>perl5 のモジュールがインストールされる場所は、構築プロセスで使われるperl の
      バージョンに応じて変わります。これを扱うために、&os; パッケージシステムは、
      インストールされた.packlistファイル(ほとんどの perl5 モジュールが生成します)
      に列挙された各ファイルに対応する行を、<filename>PLIST</filename> に追加します。これは、packlist
      ファイルへのパスをスペースで区切ったリストを<varname>PERL5_PACKLIST</varname>として定義するこ
      とで行なわれるようになります:</para>

    <programlisting>PERL5_PACKLIST=	${PERL5_SITEARCH}/auto/Pg/.packlist</programlisting>

    <para><varname>PERL5_SITELIB</varname>, <varname>PERL5_SITEARCH</varname>,
      <varname>PERL5_ARCHLIB</varname>の各変数は、perl5モジュールがイ
      ンストールされうる三つの場所を表すもので、packlistを持たないperl5パッケージ
      で使うことができます。この3変数の置換は、<filename>PLIST</filename>でもおこなわれます。</para>
  </sect1>

  <sect1>
    <title>ユーザーとの対話</title>

    <para>時々、パッケージがユーザーとの対話を必要とする場合がありますが、そのような
      状況は何通りもありえます:</para>

    <itemizedlist>
      <listitem>
	<para>distfileの取得に関する補助</para>
      </listitem>

      <listitem>
	<para>パッケージの構築前の設定の補助</para>
      </listitem>

      <listitem>
	<para>構築過程の最中の補助</para>
      </listitem>

      <listitem>
	<para>パッケージのインストール中の補助</para>
      </listitem>
    </itemizedlist>

    <para>どの段階で対話が必要になるかをpkgsrcの機構に知らせるため、<varname>INTERACTIVE_STAGE</varname>
      定義が用意されており、パッケージの<filename>Makefile</filename>で定義します。たとえば以下のよう
      にします。</para>

    <programlisting>INTERACTIVE_STAGE= build</programlisting>

    <para>複数の段階を指定することもできます:</para>

    <programlisting>INTERACTIVE_STAGE= configure install</programlisting>
  </sect1>
</chapter>
