<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<!-- Copyright (c) 1994-2003
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<link rev="made" href="mailto:www@NetBSD.ORG">
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
<title>Installing/compiling other software</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">

<HEADING>Installing/compiling other software

If you are running NetBSD 1.3 or later you we <strong>strongly</strong>
recommend you make use of the many software packages available in the
<a href="packages.html">NetBSD packages collection</a>.

<LIST>

<SECTION>Compiling/downloading software

<ENTRY>java How to run java programs under NetBSD
NetBSD 1.3 and later support a <a href="packages.html">'package'</a>
collection that enables freely available third-party software to
be built easily on NetBSD hosts. The <PKGSRC>lang category includes
java virtual machines such as <PKGSRC>lang/kaffe and <PKGSRC>lang/jdk.

<ENTRY>precompiled_packages Where to find precompiled programs
NetBSD 1.3 and later support a <a
href="packages.html">'package'</a> collection for many
items of third party software. Precompiled binaries are available at
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/">
ftp://ftp.netbsd.org/pub/NetBSD/packages/</a>, or a mirror thereof
(each NetBSD port has its own subdirectory). An <a
href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README.html">
HTML index</a> is also available.<p>
To install packages use pkg_add(1) via either of:
<ul>
<li>Copy a package file to your machine and run
"<b><tt>pkg_add&nbsp;<i>package.tgz</i></tt></b>"
<li>Install direct from the ftp site.
For example, to install pine on a NetBSD/sparc 1.3 system:
"<b><tt>pkg_add&nbsp;ftp://ftp.netbsd.org/pub/NetBSD/packages/1.3/sparc/All/pine-3.96.tgz</tt></b>".
</ul>

<ENTRY>packages How to build/download programs
NetBSD 1.3 and later support a <a
href="packages.html">'package'</a> collection
that enables freely available third-party software to be built
easily on NetBSD hosts. Once the software has been built, it is
manipulated with the pkg_* tools so that installation and
de-installation, printing of an inventory of all installed packages
and retrieval of one-line comments or more verbose descriptions
are simple.
<p><a href="#precompiled_packages">Precompiled binaries</a>
for various architectures are also available.

<ENTRY>unlimit Compiling fails with '<b>virtual memory exhausted</b>'
If you are using csh(1) or <PKGSRC>shells/tcsh, try "<b><tt>unlimit
datasize</tt></b>".<p>
If you are using sh(1), ksh(1), or <PKGSRC>shells/bash2, try
"<b><tt>ulimit datasize</tt></b>".<p>
NetBSD sets resource limits on a per process basis. The current
values can be displayed with "<b><tt>limit</tt></b>", and set by
the current shell with
"<b><tt>limit&nbsp;<em>resource</em>&nbsp;<em>value</em></tt></b>",
or unlimited with "<b><tt>unlimit&nbsp;<em>resource</em></tt></b>",
or "<b><tt>ulimit&nbsp;<em>resource</em></tt></b>" (These are
builtin shell commands, and unfortunately vary from shell to shell).
More details on resource limits are available in the <b>getrlimit(2)</b>
manual page.

<ENTRY>sys_errlist Why is <tt>sys_errlist[]</tt> redefined when I try to compile anything?
<p>
This is because in traditional BSD systems, the <tt>sys_errlist[]</tt> array
was generally known to exist, but it had never officially been defined in
any include file.  So, many older programs which use this array (which is
fairly common since it contains a list of system error strings) had to
include their own definitions of it.  However, NetBSD did choose to define
it in a header file, and it is not defined in quite the same way as most of
the older programs do it, so a conflict often arises.
<p>
It is usually safe to simply comment out the offending line in the source
file, since changing the header file will probably break the compilation of
many newer programs.  Most recent programs can be configured to look for
the definition if it exists or do not include their own definition.

<ENTRY>iostreams Whenever I compile a program using iostreams with g++, I get this error: <tt>/usr/libexec/ld.so: Undefined symbol "_tgetstr" in testprog:</tt> How can I fix this?

From Jason Thorpe (thorpej@nas.nasa.gov):
<blockquote><pre>
This is a really lame bug in libg++ (well, that happened to interact
strangely with a lame bug in the NetBSD shared lib implementation).

Add -ltermcap to the end of the library list.
</pre></blockquote>

<ENTRY>elf-issue 3rd party Software doesn't find its shared libraries!

An issue which often is encountered when trying to compile software initially
written for other Unices, is the problem with the program not finding its
shared libraries. This is due to the philosophy of NetBSD's <a
href="../elf.html#elf">ELF</a> implementation. This is a known problem, and
there exists a <a href="../elf.html#rpath">resolution procedure</a>.
<br><br>Of course, The Right Thing To Do is to install all software using <a
href="packages.html">the NetBSD Packages Collection</a>.  If the software is
not yet available in pkgsrc, you can either send-pr(1) a report or build the
package yourself.  You can find instructions and documentation in <a
href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">/usr/pkgsrc/Packages.txt</a>.

</LIST>

<a href="./">Up to <em>NetBSD Documentation: Software</em></a>
<hr>

<DOCLINK>

<hr>
<address>
  <small>
  <a href="../../Misc/feedback.html">(Contact us)</a>
  $NetBSD: compiling.list,v 1.15 2003/01/26 02:56:52 heinz Exp $<br>
  <a href="../../Misc/disclaimer.html">Copyright &copy; 1994-2003
    The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
