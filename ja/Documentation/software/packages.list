<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<!-- Copyright (c) 1994-2002
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<link rev="made" href="mailto:www@NetBSD.ORG">
<title>The NetBSD packages collection</title>
</head>
<body bgcolor="#ffffff" text="#000000">

<HEADING>The NetBSD packages collection (pkgsrc)

<LIST>

<h2>Other related pages</h2>
<ul>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README.html">
    Available software indexed by category</a>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README-all.html">
    Alphabetical index of all packages</a>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README-IPv6.html">
    Index of all IPv6-enabled packages</a>
<p>

<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">
	Complete documentation</a>
<li><a href="http://www.jp.netbsd.org/ja/JP/Documentation/Packages/Packages.txt">
	Complete documentation in Japanese</a>
<li><a href="../../zoularis/">
	Zoularis: Using pkgsrc on non-NetBSD</a>
<p>

<li><a href="pkg-growth.html">Packages system growth</a>.
<li><a href="pkg-wildcards.html">Wildcards and the NetBSD Packages Collection</a>
</li>
<li> The 
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README">
	pkgsrc README</a>
</li>
<li>
<a href="../../Changes/pkg-changes.html">
	Recent pkgsrc changes</a>
</li>
</ul>

<SECTION>The NetBSD packages collection

<ENTRY>introduction Introduction

The NetBSD Packages Collection is a set of software utilities and
libraries which have been ported to NetBSD.

<p>
The packages collection software can
<p>

<ol>
<li>Retrieve the software from its home site or a mirror (assuming you are
    connected in some way to the Internet).
<li>Verify its integrity.
<li>Apply any patches.
<li>Configure the software for NetBSD, then build and install.
<li>Track all installed files to permit easy removal of software using the
    packaging utilities.
<li>Optionally create a binary package that can be installed on other hosts.
</ol>

<p>
Any prerequisite software will also be automatically downloaded, built, and
installed.

<ENTRY>advantages Advantages

Some of the advantages over getting the software sources or binaries yourself
from their home sites are:
<p>

<ul>
<li>The packages have already been setup to compile and install correctly on
your system, so you don't have to worry about porting the software yourself.
<li>The latest versions of a program, and its patches are obtained for you,
and sorted out so that the software works with NetBSD.
<li>It is easy to use, and quick, even over a dialup connection.
<li>You can submit additional software to the packaging system, so that
others can benefit from your porting work.
<li>You can create scripts to easily install sets of packages and maintain
the standard software for hosts on your network.
<li>The same ease of use and maintenance applies to both binary and source
based packages.
<li>All packages are installed in a consistent directory tree, including
binaries, libraries, man pages, and other documentation.
<li>Optional configuration parameters are controlled by a single central
config file, including install prefix, acceptable software licenses, and
domestic(US) or international encryption requirements.
<li>The packages are sorted into categories, providing useful lists of
tools to browse through, all guaranteed to work.
<li>Pkgsrc knows about primary distribution and mirror sites for source
packages, so you can install even when that URL you memorized doesn't work.
</ul>

<ENTRY>precompiled Installing Precompiled Binary Packages

A selection of precompiled binary packages for NetBSD 1.3 and later are
available from
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/">/pub/NetBSD/packages/</a>
on
<a href="../../mirrors/">NetBSD&nbsp;ftp&nbsp;sites</a>.
<p>
The majority of users will probably find the
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README.html">browsable
web listing</a> most useful.
<p>
These can be installed either by downloading a package and its prerequisites 
to a local disk and running
<pre>    pkg_add &lt;package&gt;</pre>
or directly by specifying the full URL as in:
<pre>    pkg_add ftp://ftp.netbsd.org/pub/NetBSD/packages/&lt;os_release&gt;/&lt;arch&gt/&lt;type&gt/&lt;package&gt;</pre>
Prerequisites will be automatically retrieved and installed if they are
available in the same remote directory.
<p>
Packages are installed by default into <tt>/usr/pkg</tt>. You should ensure
that <tt>/usr/pkg/bin</tt> and <tt>/usr/pkg/sbin</tt> are in your PATH
variable (best set in <tt>/etc/csh.cshrc</tt>).

<ENTRY>setting_up_pkgsrc Setting up the NetBSD Packages Collection
The NetBSD Packages Collection source (or 'pkgsrc') consists of a set
of Makefiles, brief descriptions, and any patches needed to ensure easy
compilation for the various programs, sorted by category.
<p>
Installing pkgsrc will allow you to easily compile and install any of
the software contained in the collection.
<p>
There are several methods for obtaining pkgsrc:
<p>

<ol>

<li><b>CD-Rom</b><br>
    If you have an official NetBSD CD-Rom it includes pkgsrc. Other CD
    producers should have included it also. This should work fine,
    though since pkgsrc is being continually updated it is usually
    preferable to download the most recent copy from the 'Net.
    <p>

<li><b>sup</b><br>
    This is the recommended method. It takes longer to download initially,
    but after that each time sup(1) is run it will download only the
    updated files, and will automatically handle deleting old files.
    The simplest way to setup sup is:
    <p>
    <ul>
    <li><tt><b>'mkdir /etc/supfiles /usr/sup'</b></tt>.
    <p>
    <li><tt><b>'cp /usr/share/examples/supfiles/<em>serverhost</em>
	/etc/supfiles/coll.list'</b></tt>, where <em>serverhost</em> is
	the 'nearest' host, or just 'sup.netbsd.org')
    <p>
    <li>Edit <tt>/etc/supfiles/coll.list</tt>, and comment out (add a
	'#' to the start) all lines except the block of
	two lines that start '<tt>current release=pkgsrc</tt>'.
    </ul>
    <p>
    From this point you can run sup to update pkgsrc with 'sup -s -v'
    (or just 'sup -s' to avoid the verbose output).
    Sup can also be used to pull down the various NetBSD source trees - see
    the lines in coll.list for details.
    <p>

<li><b>ftp</b><br>
    This is the simplest method, though it does involve downloading the
    complete pkgsrc tarfile each time (currently over 5MB gzipped).
    <p>
    <ul>
    <li>
    The NetBSD Package Collection is archived weekly, and stored as a 
    gzip'ed tar file on the NetBSD ftp server and its many mirrors.
    Obtain it from the NetBSD site at <a
    href="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/tar_files/pkgsrc.tar.gz">
    ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/tar_files/pkgsrc.tar.gz</a>
    or a close
    <a href="../../mirrors/#ftp">mirror</a>.
    <p>
 
    <li>
	Once you have downloaded the file onto your system, '<tt>su -</tt>'
	to use root privileges. Copy the file to the '<i>/usr</i>' directory on your
	system.
    <p>

    <li>
	If you have extracted a previous pkgsrc.tar.gz ensure you
	remove it first:
    <pre>	cd /usr ; rm -rf pkgsrc</pre>
    <p>

    <li>
	The file now need to be decompressed and untared into its new home
	(<tt>/usr/pkgsrc</tt>):
    <pre>	cd /usr ; tar -xzvpf pkgsrc.tar.gz</pre>
    <p>

    <li>
	When you build a package from the collection it will by default
	create a new directory tree '<i>/usr/pkg/</i>' and install
	itself there. You can alter this behavior, for example,
	by adding '<tt>LOCALBASE=/usr/local</tt>' to
    <tt>/etc/mk.conf</tt>.
    </ul>
   <p>

<li><b>AnonCVS</b><br>

    There are two steps to this. You have to set it up once, and then
    you can update it partially or completely at any time.<br>

    <p>For setting it up, follow the first four steps of <a
    href="../current/#using-anoncvs">Tracking NetBSD-current
    with anoncvs</a>; the module you will want to check out is called
    <b>pkgsrc</b> (no surprises here), and the default location is
    '<i>/usr/pkgsrc</i>', but any place will do.

    <p>Updating is done by
    <p><tt><b>cd /usr/pkgsrc</b></tt><br>
    <tt><b>cvs update -d -P</b></tt><br>

    <p>If you just want to update part of it (not recommended because of
    dependencies):
    <tt><b>cvs update -d -P category/package</b></tt><br>

    <p>If you're on a very low bandwidth line, you may want to add -z5
    (or some other number from 1 to 9) to your commandline
    <em>before</em> the command (eg "<tt><b>cvs -z5 update -d -P</b></tt>");
    this turns on compression of all data. Keep in mind that this will
    put an extra load on the cvs server.<br>
</ol>

<ENTRY>using_pkgsrc Using the NetBSD Packages Collection

<ol>
<li>
The '<i>/usr/pkgsrc/</i>' directory now contains a set of sub directories,
organized into categories. You can browse the online index of packages, or
run 'make readme' from the /usr/pkgsrc directory to build local README.html
files for all of the packages. You can look in the directories at the
'<i>README.html</i>' files for help on what each utility/application is.
<p>

<li>
If you decide you want to install one of the applications, it is very easy.
For example to install the editor called Joe onto your system (Joe is a
small but powerful editor that mimics other editors such as Wordstar or
Emacs), first change directory as follows:
<pre>
	cd /usr/pkgsrc/editors/joe
</pre>
<p>

<li>
If you use a dialup connection to gain access to the internet, connect now,
so the software source can be retrieved for you.
<p>
If a package depends on many other packages (such as kde), the build
process may alternate between periods of downloading source, and
compiling. To ensure you have all the source downloaded initially you
can run the command:
<pre>
	make fetch-list | sh
</pre>
which will output and run a set of shell commands to fetch the
necessary files into <tt>/usr/pkgsrc/distfiles</tt>.  You can also
manually download the necessary files into <tt>/usr/pkgsrc/distfiles</tt>,
though since this is significantly more effort, it should probably only be
used as a last resort.
<p>

<li>
Now type
<pre>
	make
</pre>
from within the '<i>/usr/pkgsrc/editors/joe</i>' directory. The sources and
any patches, plus any software that the compilation of the program requires
will now be downloaded to your system. 
<p>

<li>
Once the software has download, any patches will be applied, then it will be
compiled for you. This may take some time depending on your computer, and
how many other packages the software depends on and their compile time.
<p>

<li>
Once this has completed, and you don't see any errors, you can hangup your
dialup connection (save the phone bill !).
<p>

<li><p>
The next stage is to actually install the newly compiled program onto your
system. Do this by entering:
<pre>
	make install
</pre>
while you are still in the '<i>/usr/pkgsrc/editors/joe</i>' directory, (or
the directory for whatever it is you are installing). 
<p>

<li>
Thats it, the software should now be installed and setup for use. You can
enter:
<pre>
	make clean
</pre>
to remove the compiled files in the work directory, as you shouldn't need
them any more. If other packages were also added to your system (dependencies)
to allow your program to compile, you can tidy these up also with the command:
<pre>
	make clean CLEANDEPENDS=YES
</pre>
</ol>

<ENTRY>compiling-problems Problems compiling packages
The default resource limits on some ports are too small for certain
massive packages - if a compile fails with "virtual memory exhausted",
please see the compiling FAQ entry on <a
href="compiling.html#unlimit">unlimit</a>.

<ENTRY>mk.conf What is /etc/mk.conf ?
/etc/mk.conf can be used to define certain variables for the package system.
It is not present by default, but can be created when needed.
Among the many values which can be set are:
<p>
<ul>
<li><tt>ACCEPTABLE_LICENSES=non-commercial-use fee-based-commercial-use</tt><br>
    Inform the package system which licences are acceptable.
<p>
<li><tt>WRKOBJDIR=/usr/obj/pkg</tt><br>
    Extract and build the packages in /usr/obj/pkg.
<p>
<li><tt>PACKAGES=${PKGSRCDIR}/packages/${OS_VERSION}/${MACHINE_ARCH}</tt><br>
    When binary packages are made, save them in an OS_VERSION and MACHINE_ARCH
    specific subdirectory.
<p>
<li><tt>USA_RESIDENT=NO</tt><br>
    If `NO', this is used by some programs to determine licence
    authorisation. If `YES', it is used by some programs to determine
    license authorization.
<p>
<li><tt>USE_RSAREF2=NO</tt><br>
    Whether or not to use RSAREF2, for example in <PKGSRC>security/ssh.
<p>
<li><tt>DEPENDS_TARGET?=package</tt><br>
    Automatically build and save binary packages on dependencies
</ul>
<p>
Also, <a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/mk/bsd.pkg.defaults.mk">/usr/pkgsrc/mk/bsd.pkg.defaults.mk</a>
gives the defaults which are used in pkgsrc.  This file can be used as a
guide to set values in /etc/mk.conf - it is only necessary to set
values where they differ from the defaults.

<ENTRY>searching_pkgsrc Finding out what is available in the NetBSD Packages Collection
<p>
The best way to find out what packages are in the collection is to
move to the top-level pkgsrc directory (this will usually be
/usr/pkgsrc), and type "make readme".  This will create a file
called README.html in the top-level pkgsrc directory, and also in
all category and package directories.  You can then see what packages
are available, along with a short (one-line) comment about the
function of the package, and a pointer to a fuller description, by
using a browser like lynx (see pkgsrc/www/<PKGSRC>www/lynx) or
something like Mozilla (pkgsrc/www/<PKGSRC>www/mozilla), or
<PKGSRC>www/communicator. This is also available online as
<p>

<pre>	<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README.html">ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README.html</a>.</pre>
<p>

If you prefer a full (long!) list of <em>all</em> packages available,
check this out:
<p>
<pre>	<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README-all.html">ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README-all.html</a>.</pre>
<p>

Another way to find out what packages are in the collection is to
move to the top-level pkgsrc directory and type "make index". This
will create pkgsrc/INDEX which can be watched via "make print-index | more".
You can also search for particular packages or keywords via
"make search key=&lt;somekeyword&gt;".

<ENTRY>vulnerabilities Checking for security vulnerabilities in installed packages
The NetBSD Security-Officer and Packages Groups maintain a list of
known security vulnerabilities to packages which are (or have been)
included in pkgsrc.  The list is available from the NetBSD
FTP site at:
<p>
<blockquote>
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/distfiles/vulnerabilities">ftp://ftp.netbsd.org/pub/NetBSD/packages/distfiles/vulnerabilities</a>
</blockquote>
<p>
Through <PKGSRC>security/audit-packages, this list can be downloaded
automatically, and a security audit of all packages installed on a system
can take place.
<p>
There are two components to <PKGSRC>security/audit-packages.  The first
component, <tt>download-vulnerability-list</tt>, is for downloading
the list of vulnerabilities from the NetBSD FTP site.  The second
component, <tt>audit-packages</tt>, checks to see if any of your
installed packages are vulnerable.  If a package is vulnerable, you
will see output similar to the following:
<p>
<blockquote><tt>
Package samba-2.0.9 has a local-root-shell vulnerability, see \<br>
http://www.samba.org/samba/whatsnew/macroexploit.html
</tt></blockquote>
<p>
One can set up <PKGSRC>security/audit-packages to download the
<tt><a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/distfiles/vulnerabilities">vulnerabilties</a></tt>
file daily, and include a package audit in the daily security script.
Details on this are located in the
<a href="http://cvsweb.netbsd.org/bsdweb.cgi/pkgsrc/security/audit-packages/pkg/MESSAGE?rev=HEAD&amp;content-type=text/x-cvsweb-markup">MESSAGE</a>
file for <PKGSRC>security/audit-packages.

<ENTRY>pkg_versions Finding if newer versions of your installed packages are in pkgsrc
To find out if newer versions of your installed packages are available
in the NetBSD Packages Collection, you should first install
pkgsrc/pkgtools/<PKGSRC>pkgtools/pkglint.  After that, if there is a newer
version available, running '<b>lintpkgsrc -i</b>' will tell you about it.
<p>

For example, if you have pkgsrc/shells/tcsh version 6.09.00
installed, and the version in pkgsrc at that point is 6.10.00,
'lintpkgsrc -i' will tell you the following:
<p>

<pre>   Version mismatch: 'tcsh' 6.09.00 vs 6.10.00</pre>

<ENTRY>other_commands Other Commands for the NetBSD Packages Collection

Other useful command to use with the NetBSD Package Collection are shown
below
<p>

<ul>
<li>
<tt>make deinstall</tt> - removes an installed package from your system. The
reverse to the procedure performed above. Change to the appropriate pkgsrc
directory before use.
</li>
<li>
<tt>pkg_delete</tt> - removes a pkg by name, regardless of your current
working directory.
</li>
<li>
<tt>pkg_info</tt> - shows what packages are installed on your system, as any
that you add are kept track of.
</li>
</ul>

<p>
More detailed and helpful information about the NetBSD Packages Collection
is available via the <a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">Packages.txt</a> file contained within pkgsrc.
<p>

A <a
href="http://www.jp.netbsd.org/ja/JP/Documentation/Packages/Packages.txt">Japanese
translation</a> of Packages.txt is also available.

<p align=right>
<font size="-1">Many thanks to Simon Rowe's NetBSD pages</font>
</p>

</LIST>

<a href="./">Up to <em>NetBSD Documentation: Software</em></a>
<hr>

<DOCLINK>

<hr>
<address>
  <small>
  <a href="../../Misc/feedback.html">(Contact us)</a>
  $NetBSD: packages.list,v 1.40 2002/02/07 08:35:03 yyamano Exp $<br>
  <a href="../../Misc/disclaimer.html">Copyright &copy; 1994-2002
  The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
