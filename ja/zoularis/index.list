<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<!-- Copyright (c) 1994-2002
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<link rev="made" href="mailto:www@NetBSD.ORG">
<title>Zoularis - pkgsrc for non-NetBSD systems</title>
</head>
<body bgcolor="#ffffff" text="#000000">

<table><tr><td>
	<a href="../Misc/daemon-copy.html"><img align="middle" 
	src="../images/BSD-daemon.jpg" border="0" width=146 
	height=129 alt="BSD daemon"></a>
</td>
<td align=center>
	<h1>Zoularis</h1>
	<h1>pkgsrc for non-NetBSD systems</h1>
</td></tr></table>

<LIST>

<h2>Other related pages</h2>
<ul>
<li><a href="../Documentation/software/packages.html"> The NetBSD Packages Collection</a></li>

<li>The <a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/README">
	pkgsrc README</a></li>
<li><a href="../../Changes/pkg-changes.html">
	Recent pkgsrc changes</a></li>
</ul>

<SECTION>Zoularis information

<ENTRY>introduction Introduction

The NetBSD Packages Collection provides an easy way to install, remove and
maintain 3rd party software on a NetBSD system. It provides a set of Makefiles
and patches (called pkgsrc) which makes building 3rd party software from 
source easier. The idea of Zoularis is to port the build 
system to operating systems other than NetBSD. This was originally done 
for the Solaris operating system by Christos Zoulas (hence the name "Zoularis").
<p>
On this page, you will find Zoularis binary kits for various operating 
systems that will enable you to use the pkgsrc source tree to build 
software for your system. 

<ENTRY>why Why use Zoularis?
The reason that Zoularis exists is because NetBSD users often have to use
other operating systems. It allows them to use the same system to build 
software that they are used to. Because of the way pkgsrc handles 
dependencies between packages, it can be easier to use than other 
package systems. 
<p>
On some operating systems, it is possible to make "native" packages
using Zoularis. For example, on Solaris once you have build some
software using Zoularis and pkgsrc, you can make a native Solaris package 
by using the <PKGSRC>pkgtools/gensolpkg package.

<ENTRY>gettingp Getting pkgsrc
You will need pkgsrc in addition to a binary kit. Up to date 
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc.tar.gz">tar.gz
archives of pkgsrc</a> are available from the main NetBSD ftp site and
from most <a href="../mirrors/#ftp">ftp mirrors</a>.
<p>
Alternative, you can get the pkgsrc module from anonymous CVS if you have
cvs installed. Make sure you are in a directory that you have write 
permission in and then:
<blockquote>
<tt>cvs -d:pserver:anoncvs@anoncvs.netbsd.org:/cvsroot login</tt> (use password "anoncvs")<br>
<tt>cvs -d:pserver:anoncvs@anoncvs.netbsd.org:/cvsroot checkout -P pkgsrc</tt>
</blockquote>
<p>
If you have ssh installed, you can use CVS over ssh by setting the 
CVS_RSH enviroment variable. For example, for sh, ksh and bash:
<blockquote><tt>CVS_RSH=/usr/local/bin/ssh; export CVS_RSH</tt></blockquote>
For csh and tcsh:<br>
<blockquote><tt>setenv CVS_RSH /usr/local/bin/ssh</tt></blockquote>
Then checkout the pkgsrc module as follows:<br>
<blockquote><tt>cvs -danoncvs@anoncvs.netbsd.org:/cvsroot checkout -P 
pkgsrc</tt></blockquote>

<SECTION>Binary kits

<ENTRY>solaris8 Solaris 8 (sparc)
The following binary kits are in Solaris Package format. They can be added to
a Solaris system with <tt>pkgadd</tt>. Any NetBSD packages you build will be
added into /usr/pkg, so you may want to add this into your PATH environment
variable.

<ul>
<li>
<a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages-svr4/TNFzoul-20010704-01-sol8-sparc.gz">Zoularis</a></li>
<li>
<a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages-svr4/TNFgcc-2.95.3-sol8-sparc.gz">GCC</a>
</li>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages-svr4/TNFcvs-1.11nb2-sol8-sparc.gz">CVS</a></li>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages-svr4/TNFgtexinfo-4.0-sol8-sparc.gz">texinfo</a></li>
</ul>

<p>
The binary kits below are in pkgsrc format. You might prefer to use these packages instead of the native Solaris ones above. They can be installed with the
<tt>/usr/pkg/bsd/bin/pkg_add</tt> command once you have installed the Zoularis
package above. One little quick in the package tools requires you to 
explicitly specify PKG_TMPDIR in the environment while running 
<tt>pkg_add</tt>. For example, in /bin/sh:
<blockquote><tt>
PKG_TMPDIR=/tmp /usr/pkg/bsd/bin/pkg_add gcc-2.95.3.tgz
</tt></blockquote>

<ul>
<li>
<a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages/gcc-2.95.3.tgz">GCC</a>
</li>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages/cvs-1.11nb2.tgz">CVS</a></li>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/solaris/solaris8-sparc-packages/gtexinfo-4.0.tgz">texinfo</a></li>
</ul>

<ENTRY>darwin Darwin/Mac OS X

The Darwin bootstrap kit is in tar.gz format. Download this file and also
pkgsrc. To extract it and use the kit:
<blockquote>
<tt>
tar zxvf darwin-bootstrap.tar.gz<br>
cd bootstrap-pkgsrc<br>
./bootstrap</tt></blockquote>
<p>
The bootstrap command has several defaults which can be changed using 
command line switches:
<ul>
	<li><b>pkgdir</b> (defaults to /usr/pkg) can be set using 
		<tt>--pkgdir=/some/dir</tt></li>
	<li><b>pkgdbdir</b> (defaults to /var/db/pkg) can be set using 
		<tt>--pkgdbdir=/some/dir</tt></li>
	<li><b>pkgsrcdir</b> (defaults to /pkgsrc) can be set using 
		<tt>--pkgsrcdir=/some/dir</tt>. This should be
		set to wherever you extracted pkgsrc.</li>
</ul>
The bootstrap command builds and installs bmake (NetBSD's make) and auxilary 
files, lukemftp, digest and the pkg_install package. After executing bootstrap
command, you may want to add /usr/pkg/bin (or your pkgdir) to PATH and add 
FETCH_CMD to /etc/mk.conf. On bash:
<blockquote><tt>
PATH=/usr/pkg/bin:$PATH; export PATH
</tt></blockquote>
On tcsh:
<blockquote><tt>
set path = ( /usr/pkg/bin $path )
</tt></blockquote>
Add the following line to /etc/mk.conf:
<blockquote><tt>
FETCH_CMD=/usr/pkg/bin/ftp
</tt></blockquote>


<ul>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/darwin/darwin-bootstrap.tar.gz">Darwin</a></li>
</ul>

<ENTRY>redhat Red Hat Linux 5.0, 6.2 (i386)
The following binary kits are in tar.gz format. They should be regarded
as "experimental". To use one of the kits, download the file and extract it
in /usr/local. For example:
<blockquote><tt>
tar zxvf redhat6.2-glibc2.1-i386.tar.gz -C /usr/local
</tt></blockquote>

After you have done this, you may want to add /usr/local/bsd/bin to the
front of your PATH. On bash:
<blockquote><tt>
PATH=/usr/local/bsd/bin:$PATH; export PATH
</tt></blockquote>
On tcsh:
<blockquote><tt>
set path = ( /usr/local/bsd/bin $path )
</tt></blockquote>

<ul>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/linux/redhat5.0-i386.tar.gz">Red Hat 5.0</a></li>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/linux/redhat6.2-glibc2.1-i386.tar.gz">Red Hat 6.2 (glibc 2.1)</a></li>
</ul>

<ENTRY>debian Debian GNU/Linux 2.2 (i386)
This kit is the same as the Red Hat 6.2 one, but with a different ftp binary. 
(Debian GNU/Linux uses terminfo rather than termcap). The instructions 
are the same as those above.

<ul>
<li><a href="ftp://ftp.netbsd.org/pub/NetBSD/misc/cjep/zoularis/linux/debian2.2-i386.tar.gz">Debian 2.2</a></li>
</ul>

</LIST>

<DOCLINK>

<hr>
<address>
  <small>
  <a href="../../Misc/feedback.html">(Contact us)</a>
  $NetBSD: index.list,v 1.4 2002/03/09 03:34:47 yyamano Exp $<br>
  <a href="../../Misc/disclaimer.html">Copyright &copy; 1994-2002
  The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
