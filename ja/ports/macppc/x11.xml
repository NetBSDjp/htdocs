<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE webpage
 PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
        "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-ports-macppc-x11">
<config param="desc" value="NetBSD/macppc X11 FAQ"/>
<config param="cvstag" value="$NetBSD: x11.xml,v 1.2 2007/06/09 19:18:10 dsieger Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: x11.xml,v 1.2 2007/06/09 19:18:10 dsieger Exp   -->
<config param="rcsdate" value="$Date: 2007/06/09 19:18:10 $"/>
<head>

<!-- Copyright (c) 1998-2007
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->

<title>&os;/macppc X11 FAQ</title>
</head>

<sect1 role="toc">
<title>&os;/macppc X11 FAQ</title>

<sect2 id="general">
<title>全般的な質問</title>

<sect3 id="which-x">
<title>どの X Window System パッケージを使えばよいですか?</title>
<para>
Xmacppc ですか? それとも XFree86 ですか? &os;/macppc の xserver.tgz
に含まれ配布されている完全な X Window System サーバーは、二つあります。
</para>
<para>
<ulink url="#xmacppc-support">Xmacppc</ulink> パッケージは、 Open Firmware によって
セットアップされた raw デバイスを使います。これは機能が非常に限られますが、
&os; でサポートしている macppc の機種のほとんどすべてで動きます。
画面解像度の変更や 8 bpp を超える色数の使用はできません。
これは、いかなる種類のアクセラレーションも持っていません。
</para>
<para>
<ulink url="#xfree-support">XFree86</ulink> パッケージは、
ビデオカードのチップセットに関して自身のもつ知識を使いますが、
(ATI や NVIDIA 製のビデオカードを使っている最近の機種とは対照的に)
Apple 開発のビデオチップセットを持つ古い macppc の機種には
ドライバーがありません。このため、 XFree86 は &os;/macppc
対応機種の一部しかサポートしていませんが、より高機能の X サーバーです
-- 解像度切り替えや 8 bpp を超える色数を扱えるほか、
いくらかのアクセラレーションもあります。
</para>
<para>
異なる X サーバーを選ぶためには、 <filename>/usr/X11R6/bin/X</filename>
のリンク先をお好みのサーバーに向けてください。</para>
<screen>&rprompt; cd /usr/X11R6/bin
&rprompt; ls -l X*
lrwxr-xr-x  1 root  wheel       22 Nov 12 13:50 X@ -&gt; /usr/X11R6/bin/XFree86
-rws--x--x  1 root  wheel  1918906 Nov 12 13:48 XFree86*
-rws--x--x  1 root  wheel  1506734 Nov 12 13:48 Xmacppc*
-r-xr-xr-x  1 root  wheel    27494 Jun  9  2001 Xmark*
-r-xr-xr-x  1 root  wheel  3518011 Nov 12 13:48 Xnest*
-r-xr-xr-x  1 root  wheel  1914704 Nov 12 13:48 Xprt*
-r-xr-xr-x  1 root  wheel  3832078 Nov 12 13:48 Xvfb*
&rprompt; rm X
&rprompt; ln -s Xmacppc X</screen>

</sect3>

<sect3 id="delete">
<title>delete キーが消去でなくチルダ (<code>~</code>) になるのはなぜ?</title>
<para>
実は、 delete キーは delete エスケープシーケンス (他のすべての VT100
エミュレーターが使っている) ではなく、本来の VT100 の delete
キーを出しています。</para>
<para>
これを変えるには、下記のコマンドを
X サーバーを起動するたびに実行する必要があります:</para>
<screen>&rprompt; xmodmap -e "keycode 59 = BackSpace"</screen>
<para>
もちろん、このコマンドを <filename>xdm/Xsetup_0</filename> ファイルや各ユーザーの
<filename>.xinitrc</filename> ファイルに書いておいてもかまいません。</para>

<para>
単に xterm をこのようにしたいだけなら、次の 1 行をデフォルト設定として
どこかに書いておきます:</para>
<programlisting>XTerm*VT100*deleteIsDEL: true</programlisting>

<para>
これのもっとも一般的な場所は
<filename>/usr/X11R6/lib/X11/app-defaults/XTerm</filename> ですが、ここに書くと、
あなたやユーザーが、本来の VT100 delete キーとなっていないリモート
X サーバーで xterm を実行した場合に問題を起こします。
最も無難には、 X をコンソールから使うユーザー全員のホームディレクトリーの
<filename>.Xdefaults</filename> ファイルに書いておくことができます。
</para>
</sect3>

<sect3 id="root-console">
<title><code>Cannot open kbd/mouse : no such file or directory</code></title>
<para>
これは、 root 以外のユーザーが <command>startx</command> や <command>xinit</command>
を実行しようとしたときに起こります。 &os;/macppc のデフォルトでは、
コンソールデバイスは root だけのものになっています。
xdm などを使ってはどうでしょうか。
xdm は、ユーザーがうまくログインするとパーミッションを変更します。
</para>
<para>
このほか、 &man.ttyaction.5; を使って、ユーザーのログイン時にパーミッションを
変えることもできます。たとえば、下記の内容をもつ <filename>/etc/ttyaction</filename>
を作ります。</para>
<programlisting>console * /usr/sbin/chown ${USER} /dev/wskbd0 /dev/wsmouse0
ttyE0   * /usr/sbin/chown ${USER} /dev/wskbd0 /dev/wsmouse0</programlisting>
</sect3>

<sect3 id="mouse-buttons">
<title>X で 1 ボタンマウスを使って 3 ボタンマウスをエミュレートする方法は ?</title>
<para>
今のところ、キーボードのキーをマウスのキーとして設定することができるだけです。
安価な 3 ボタンマウスを探してみてください。ほとんどの
ADB と USB マウスはサポートされています。</para>
<para>
キーボードのキーをマウスのキーとして割り当てるには、
<command>xmodmap(1)</command> を使います。
各ユーザーごとのホームディレクトリーに <filename>.xmodmaprc</filename> ファイルを作り、
<filename>.xinitrc</filename> で `<code>xmodmap .xmodmaprc</code>' を実行するようにします。
<filename>.xmodmaprc</filename> の内容は、どのキーをキーボードでのマウスボタンの有効/
無効化に使うか、また、どのキーをマウスをどのボタンに割り当てるか、によって
変わります。たとえば、 Apple Extended Keyboard II で、筆者は次のように
しています:</para>
<programlisting>keycode  79 = Pointer_EnableKeys
keycode 113 = Pointer_Button1
keycode 115 = Pointer_Button2
keycode 121 = Pointer_Button3</programlisting>

<para>ここで、 keycode 79 は <quote>Num Lock</quote> キー (マウスキーを有効/
無効化する) 、 113、 115、 121 は F13、 F14、 F15 キーです。
</para>
<para>
PowerBook (FireWire) では、筆者は F8 (108) を有効化に、 F10 (117)、 F11
(111)、 F12 (119) をマウスキーとして使っています。</para>
<para>
キーとキーコードの対応を調べるには、
<command>xev(1)</command>
コマンドを使います。このほか、同様にして <ulink
url="#delete">delete キー</ulink> を <filename>.xmodmaprc</filename> に
入れたいと思うかもしれません。</para>
</sect3>
</sect2>


<sect2 id="xfree_questions">
<title>XFree86 の質問</title>

<sect3 id="xfree-support">
<title>XFree86 が使える機種は?</title>
<para>
サポートされているのは Open Firmware の初期化に対応しているビデオカード
だけです。言いかえれば、最近の機種 (つまり Open Firmware 3) または
サポートされているビデオカード (ATI Rage 128 など) だけということです。</para>
<para>
XFree86 を使うには <filename>XF86Config</filename>
ファイルを作る必要があります。</para>
</sect3>

<sect3 id="xfconfig">
<title><filename>XF86Config</filename> ファイルの作り方は ?</title>
<para>
<command>xf86config</command> を使ってみてください。あるいは、
<ulink url="mailto:port-macppc@NetBSD.org">port-macppc@NetBSD.org</ulink>
へ投稿してサンプルを求めてください。</para>
</sect3>

<sect3 id="insecure">
<title><code>Fatal server error: ppcPciInit: /dev/kmem</code></title>
<para>
残念ながら、今のところ XFree86 X サーバーは、通常は root
プログラムだけがアクセス可能とすべき <filename>/dev/kmem</filename>
への直接のアクセスを必要とします。下記のようにすることで、
(小さなものとはいえ) セキュリティーホールを作ることになります。</para>
<para>
<code>options INSECURE</code> を指定して <ulink
url="../../docs/kernel/index.html#how_to_build_a_kernel">
新たにカーネルをコンパイル</ulink>する必要があります。これは &os;
で配布されているデフォルトの <code>GENERIC</code> カーネルでは有効になっていないからです。</para>
</sect3>

<sect3 id="xkb">
<title>keymap に失敗します。</title>
<para>
XFree86 がキーボードマッピング情報を保持するために、
(root で) 下記のディレクトリーを作る必要があるかもしれません。</para>
<screen>&rprompt; mkdir -p /var/db/xkb;chmod 755 /var/db/xkb</screen>
</sect3>
</sect2>

<sect2 id="xmacppc_questions">
<title>Xmacppc の質問</title>

<sect3 id="xmacppc-support">
<title>どの機種で Xmacppc が動きますか ?</title>
<para>
コンソールでのブートが可能な全機種と、サポートされたビデオカードを持つ
(そのビデオカードが適切な Open Firmware 初期化コードを持つ) 機種です。
シリアルコンソールを使う必要のある機種では、どの X サーバーも動きません。</para>
<para>
ほとんどすべての &os;/macppc 機種をサポートしますが、制限としては
色数が 8 bpp に制限されることと、画面解像度を変更する方法がないこと、
グラフィックアクセラレーションがまったくないことです。</para>
</sect3>

<sect3 id="changing-resolution">
<title>解像度や色数を変える方法は ?</title>
<para>
&os; 上では変更できません。 Open Firmware 上で変更しなければなりません。
また、 &os;/macppc は 8 bpp を超える色数には対応していません。</para>
<para>
古い機種 (7300 - 8600) は Open Firmware で解像度を変更できません。
これらの機種では (<ulink
url="SystemDisk-tutorial/of105patch.html">パッチ</ulink>適用後) 640x480 、 67 Hz に固定されます。
パッチを当てない場合は周波数が決まりません
(たいてい 60 Hz か 120 Hz ですが、そうとも限らないのでなんとも) 。</para>

<!-- Open Firmware &gt;= 2.0 の新しい機種では、 (Open
Firmware プロンプトで) 次のようにタイプすると:
(pre)0 &gt; (b)dev screen(/b)
0 &gt; (b)show-modes(/b)
0 &gt; (b)mode#(/b)
1 &gt; (b).(/b)(/pre)
(p)
その機種で有効な解像度がリストされます。
もし、 Mac OS 上で解像度をこのいずれかに設定すれば、
Open Firmware はその設定を保持するはずです。 -->

<para>
最近の機種では、 Mac OS で必要な解像度を設定する必要があります。
Open Firmware はその設定を保持します。</para>
<para>
Chris Tribo によれば、彼の XClaimVR 64 カードは Mac OS のモニターの設定を
無視して、いつも同じ解像度を使うとのことです。</para>
</sect3>
</sect2>

<sect2 id="otherinfo">
<title>他の情報源</title>

<sect3 id="nbsd_xdocs">
<title>&os; ドキュメンテーション: <ulink url="../../docs/x/">X
Window System</ulink></title>
</sect3>
<sect3 id="xfree_home">
<title><ulink url="http://www.xfree86.org">The Xfree86 Project Home Page</ulink></title>
</sect3>
</sect2>
</sect1>
<parentsec url="./" text="&os;/macppc ポートのページ"/>
</webpage>

