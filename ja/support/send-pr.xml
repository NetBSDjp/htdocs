<?xml version="1.0"?>
<!DOCTYPE webpage
  PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
    "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="support-send-pr">
<config param="desc" value="NetBSD Problem Reports"/>
<config param="cvstag" value="$NetBSD: send-pr.xml,v 1.7 2007/11/04 00:23:24 weinem Exp $"/>
<config param="rcsdate" value="$Date: 2007/11/04 00:23:24 $"/>
<head>
<title>NetBSD Problem Reports</title>
</head>


<html:hr/>
<itemizedlist>

<listitem><para>
    <emphasis role="bold"><ulink url="query-pr.html">Query&nbsp;PR
    </ulink></emphasis>
</para></listitem>

<listitem><para>
    <emphasis role="bold">
    <ulink url="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">
    Send&nbsp;PR</ulink></emphasis>
</para></listitem>

<listitem><para>
    <emphasis role="bold">
    <ulink url="../Gnats/">GNATS&nbsp;summary</ulink></emphasis>
</para></listitem>

</itemizedlist>
<html:hr/>

<sect1 id="web-submitting">
  <title>Submitting a bug or problem report via the Web</title>
  <para>
    This is a two-step process:
    <orderedlist>
      <listitem><para>
      Checking the problem is not already reported, using the
      <ulink url="query-pr.html">Query&nbsp;PR form</ulink>
      </para></listitem>

    <listitem><para>
    Submitting  a new problem report, using the 
    <ulink url="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">
    Send&nbsp;PR form</ulink>
    </para></listitem>
    </orderedlist>
  </para>
  
  <note>
    <para>
      If you are not familiar with the submission of problem
      reports or with &man.send-pr.1; please continue reading and learn more
      about the details from the following sections.
    </para>
  </note>
  
</sect1>

<html:hr/>


<sect1 role="toc">
  <title>Details about the bug and problem reporting system</title>

<sect2 id="">

<sect3 id="intro">
  <title>Introduction</title>
 <para>
Bug and problem reports are essential to making NetBSD a robust, reliable
system.  We rely on them to inform us of bugs or other deficiencies in the
operating system.
</para>

<para>
We use the <emphasis role="bold">GNATS</emphasis> bug tracking system to make sure that no problem
report "falls through the cracks."
The &man.send-pr.1; program on your NetBSD system is the primary
user interface for submitting bug reports to GNATS.
</para>
</sect3>

<sect3 id="finding">
<title>Searching or Browsing the NetBSD GNATS Database</title>

<para>
There are two ways to view problem reports from the GNATS database:
</para>

<orderedlist>
<listitem>Browse the <ulink url="../Gnats/">database summary</ulink>
    and its subsidiary pages which have listings of all current problem reports
    sorted by various criteria.  These pages are updated from the master
    database several times each day.</listitem>
<listitem>Search the database with the <ulink url="query-pr.html">query-pr form</ulink>
    using your web browser.</listitem>
</orderedlist>
</sect3>

<sect3 id="submitting">
<title>Submitting a Bug or Problem Report</title>

<para>
It is generally a good idea to 
<ulink url="#finding">search or browse the GNATS database</ulink> for a problem
you're having before you report it yourself.  Someone else might have reported
it already (and there might already be a solution or workaround in the
database). You may also want to check the list of
<ulink url="no-bugs.html">Features sometimes misconstrued
as bugs</ulink>.
</para>

<para>
The best way to submit a problem report is with the &man.send-pr.1;
program on your NetBSD system.
It provides a form with several
<ulink url="#pr-fields">fields</ulink>
for you to fill out with your favorite text editor (you might also want to read
<ulink url="#pr-hints">some advice</ulink> about what to put in the PR).
Once the form is completed, &man.send-pr.1; e-mails the report to the
our GNATS server.
</para>

<para>
When the report reaches the server,
it is automatically checked for syntax errors, assigned a new PR number,
and cataloged in the GNATS database.
Once in the database, the person responsible for the category that the report
was submitted to is notified, and a copy of the report is sent to
<ulink url="../mailinglists/#netbsd-bugs"><emphasis role="bold">netbsd-bugs</emphasis></ulink> mailing list.
</para>

<para>
In addition, a confirmation of the problem report,
including the assigned PR number, is sent back to you.
This number can be used to
<ulink url="query-pr.html">retrieve the PR</ulink> later.
This is sometimes useful because
the problem report may contain extensive information on the state of
tracking the bug and possible solutions.
</para>
</sect3>

<sect3 id="appending">
<title>Appending to an existing Problem Report</title>

<para>
To add additional text to a PR that has already been submitted, just send
e-mail to
<email>gnats-bugs@NetBSD.org</email>, with a
subject line containing <quote>Re: </quote>, the PR category, and number;
for example
<programlisting><emphasis role="bold">Subject: Re: kern/5514</emphasis></programlisting>
The message will automatically be appended to the GNATS database entry,
and will automatically be carbon-copied to several addresses:
<itemizedlist>
<listitem><simpara>the sender of the new message</simpara></listitem>
<listitem><simpara>the person listed as being <quote>responsible</quote>
  for handling the PR</simpara></listitem>
<listitem><simpara>the original submitter of the PR</simpara></listitem>
<listitem><simpara>for reports in category <quote>pkg</quote>: the mailing list <ulink
url="../mailinglists/#pkgsrc-bugs">pkgsrc-bugs@NetBSD.org</ulink></simpara></listitem>
</itemizedlist>

Note that if you do not carbon-copy any other interested parties yourself
they will not receive a copy of your mail.
</para>

</sect3>

<sect3 id="pr-hints">
<title>What Goes In a Problem Report</title>

<para>
  A database is only as good as the data that goes into it.
  In general, common sense (assuming such an animal exists) dictates the
  kind of information that would be most helpful in tracking down and
  resolving problems in software.
</para>

<sect4 id="general-advice">
  <title>General Advice</title>
  
  <itemizedlist>
    <listitem>Include anything <emphasis>you</emphasis> would want to know if you were
      looking at the report from the other end. There's no need to include
      every minute detail about your environment, although anything that
      might be different from someone else's environment should be included
      (your path, for instance).
    </listitem>
    
    <listitem>Narratives are often useful, given a certain degree of
      restraint. If a person responsible for a bug can see that A was
      executed, and then B and then C, knowing that sequence of events
      might trigger the realization of an intermediate step that was
      missing, or an extra step that might have changed the environment
      enough to cause a visible problem. Again, restraint is always in
      order ("I set the build running, went to get a cup of coffee
      (Columbian, cream but no sugar), talked to Sheila on the phone,
      and then THIS happened...") but be sure to include anything
      relevant.
    </listitem>
    
    <listitem>Richard Stallman writes,
      <blockquote>
        The fundamental principle of reporting bugs usefully is this:
        <emphasis role="bold">report all the facts.</emphasis>
        If you are not sure whether to state a fact or leave it out, state it!
      </blockquote>
      This holds true across all problem reporting systems, for computer
      software or social injustice or motorcycle maintenance. It is
      especially important in the software field due to the major
      differences seemingly insignificant changes can make (a changed
      variable, a missing semicolon, etc.).
    </listitem>
    
    <listitem>Submit only <emphasis>one</emphasis> problem with each Problem Report.
      If you have multiple problems, use multiple PRs. This aids in
      tracking each problem and also in analyzing the problems associated
      with a given program.
    </listitem>
    
    <listitem>It never hurts to do a little research to find out if the
      bug you've found has already been reported. Most software releases
      contain lists of known bugs in the Release Notes which come with
      the software. In addition, it's a good idea to
      <ulink url="query-pr.html">search the NetBSD GNATS problem report database</ulink>
      to see if someone already reported the problem you're having (who knows?
      there might already be a fix or work-around in the database).
    </listitem>
    
    <listitem>The more closely a PR adheres to the standard format, the
      less interaction is required by a database administrator to route
      the information to the proper place. Keep in mind that anything
      that requires human interaction also requires time that might be
      better spent in actually fixing the problem. It is therefore in
      everyone's best interest that the information contained in a PR be
      as correct as possible (in both format and content) at the time of
      submission. See <ulink url="#pr-fields">a description of the fields</ulink> in a 
      problem report for more details.
    </listitem>
  </itemizedlist>

</sect4>

<sect4 id="kernel-panic">
  <title>When Reporting a Kernel Panic</title>

  <para>
    So, the kernel panic'd, and gave you a whole lot of hexadecimal numbers,
    and halted.
    It's important for you to report this event,
    since real operating systems should never crash or panic,
    unless the computer hardware fails egregiously
    (there's usually not much an OS can do about hardware failure).
    That leaves kernel bugs as the other cause of a panic, and
    we need to track down those bugs and squash them to make NetBSD
    even more stable and robust than it already is.
  </para>

  <para>
    The trouble is that the stack dump that the kernel printed is
    specific to your kernel, and the numbers really have to be converted
    back into symbol table references so that someone else who doesn't have
    your system's kernel can get an accurate picture of where it decided to die.
  </para>

  <para>
    At a minimum, copy down the "PC" numbers and convert them to symbolic
    references - that's the <emphasis>Program Counter</emphasis> for the computer; where it
    was executing. Ideally, if you can arrange to cut &amp; paste the
    whole thing, that's even better.
  </para>

  <para>
    So, when the kernel gives you this (usually several lines of this):
  </para>

  <para>
    <programlisting>
      pc = 0xf80ff430  args = (0x0, 0x41001fe5, 0xf8139c00, 0xf8123d20, 0xf8101e38, 0xf8143800, 0xf8123c68) fp = 0xf8123c68
    </programlisting>
  </para>

  <para>
    The PC number is specific to the kernel you were running, and is not likely
    to be the same as anyone else's kernel, so it must be converted to a symbol
    reference.
    To convert a hexadecimal PC value to symbolic reference,
    use &man.gdb.1;, in the following way:
  </para>

  <para>
    <programlisting>
      gdb -k /netbsd
      x 0xf80ff430

      0xf80ff430 &lt;cpu_reboot+196&gt;:     0x40000093
    </programlisting>
  </para>

  <para>
    That "&lt;cpureboot+196&gt;" result from &man.gdb.1; is what the
    people who will work on the problem report will need, so put it
    (preferably along with the rest of that "args" line) into your
    problem report.
  </para>

  <para>
    See
    <ulink url="http://www.NetBSD.org/cgi-bin/query-pr-single.pl?number=3765">problem
      report #3765</ulink> for an example of an exhaustive PR on a kernel panic.
  </para>
</sect4>

</sect3>


<sect3 id="pr-fields">
  <title>NetBSD Problem Report Fields</title>

  <para>
    Each problem report has several machine-parsable fields in it, to make it
    possible to process the reports semi-automatically. The values for
    several of those fields and their definitions are listed below,
    to help you more clearly specify
    what's wrong (and hopefully expedite the problem resolution).
  </para>

  <para>
    In addition to the fields listed below, NetBSD problem reports are
    assigned to various <emphasis role="bold">Categories</emphasis> which reflect the part
    of the overall software that is thought to be the source of the problem.
    These categories are roughly split into two types:
  </para>

  <orderedlist>
    <listitem>Machine Independent (e.g. <replaceable>bin</replaceable>, <replaceable>lib</replaceable>,
      <replaceable>security</replaceable>) - problems in the user level programs, daemons,
      libraries, and the machine independent parts of the kernel (i.e. those
      parts that are the same without regard to the particular hardware that
      NetBSD is running on, and therefore a problem is likely to affect <emphasis>all</emphasis>
      platforms).
    </listitem>

    <listitem>Port Specific (e.g. <replaceable>port-alpha</replaceable>, <replaceable>port-ofppc</replaceable>,
      <replaceable>port-sparc</replaceable>) - device driver, or CPU-specific support (i.e. kernel
      trap handlers) problems that are only going to affect the one kind of machine
      that the problem occurred on.
    </listitem>
  </orderedlist>



  <sect4 id="severity">
    <title>Severity</title>

    <para>
      The severity of the problem.
      The accepted values are:
    </para>
    
    <itemizedlist>
      <listitem><anchor id="severity-critical"/>critical
        <blockquote>
          The product, component or concept is completely non-operational or some
          essential functionality is missing (e.g. kernel panic or program core dumps).
          No workaround is known.
        </blockquote>
      </listitem>
      
      <listitem><anchor id="severity-serious"/>serious
        <blockquote>
          The product, component or concept is not working properly or significant
          functionality is missing. Problems that would otherwise be considered
          <replaceable>critical</replaceable> are rated <replaceable>serious</replaceable> when a workaround is known.
        </blockquote>
      </listitem>
      
      <listitem><anchor id="severity-non-critical"/>non-critical
        <blockquote>
          The product, component or concept is working in general, but lacks
          features, has irritating behavior, does something wrong, or doesn't
          match its documentation.
        </blockquote>
      </listitem>
    </itemizedlist>
    
    <para>
      The default value is <replaceable>serious</replaceable>.
    </para>
  </sect4>
  
  <sect4 id="priority">
    <title>Priority</title>
    
    <para>
      How soon the problem report submitter requires a solution.
      The accepted values are:
    </para>
    
    <itemizedlist>
      <listitem><anchor id="priority-high"/>high
        <blockquote>
          A solution is needed as soon as possible.
        </blockquote>
      </listitem>
      
      <listitem><anchor id="priority-medium"/>medium
        <blockquote>
          The problem should be solved in the next release.
        </blockquote>
      </listitem>
      
      <listitem><anchor id="priority-low"/>low
        <blockquote>
          The problem should be solved in a future release.
        </blockquote>
      </listitem>
    </itemizedlist>
    
    <para>
      The default value is <replaceable>medium</replaceable>.
    </para>
  </sect4>
  

  <sect4 id="class">
    <title>Class</title>
    
    <para>
      The class of a problem report can be one of the following:
    </para>
    
    <itemizedlist>
      <listitem><anchor id="class-sw-bug"/>sw-bug
        <blockquote>
          A general software problem (<replaceable>`sw'</replaceable> stands for "software").
        </blockquote>
      </listitem>
      
      <listitem><anchor id="class-doc-bug"/>doc-bug
        <blockquote>
          A problem with the manual pages or other documentation.
        </blockquote>
      </listitem>
      
      <listitem><anchor id="class-change-request"/>change-request
        <blockquote>
          A request for a change from existing behavior that is not a bug
          ("It's nice, but it would be better if ...").
        </blockquote>
      </listitem>
      
      <listitem><anchor id="class-support"/>support
        <blockquote>
          A support problem or question.
        </blockquote>
      </listitem>
    </itemizedlist>
    
    <para>
      The default value is <replaceable>sw-bug</replaceable>.
    </para>
</sect4>

</sect3>


<sect3 id="pr-states">
  <title>NetBSD Problem Report States</title>
  
  <para>
    Each PR goes through a defined series of states between origination and
    closure. The submitter of a PR receives notification automatically via E-mail of
    any state changes.
  </para>
  
  <sect4 id="open">
    <title>open</title>
    <para>
      <blockquote>
        The initial state of a Problem Report. This means the PR has been filed
        and the responsible person(s) notified.
      </blockquote>
    </para>
  </sect4>
  
  <sect4 id="analyzed">
    <title>analyzed</title>
    <para>
      <blockquote>
        The responsible person has analyzed the problem. The analysis should
        contain a preliminary evaluation of the problem and an estimate of the
        amount of time and resources necessary to solve the problem. It should
        also suggest possible workarounds.
      </blockquote>
    </para>
  </sect4>
  
  <sect4 id="feedback">
    <title>feedback</title>
    <para>
      <blockquote>
        The problem has been solved, and the submitter has been given a patch
        or other fix.  The PR remains in this state until the submitter
        acknowledges that the solution works.
      </blockquote>
    </para>
  </sect4>
  
  <sect4 id="suspended">
    <title>suspended</title>
    <para>
      <blockquote>
        Work on the problem has been postponed. This happens if a timely
        solution is not possible or is not cost-effective at the present time.
        The PR continues to exist, though a solution is not being actively
        sought. If the problem cannot be solved at all, it should be closed
        rather than suspended.
      </blockquote>
    </para>
  </sect4>
  
  <sect4 id="dead">
    <title>dead</title>
    <para>
      <blockquote>
        Work on the problem has been permanently abandoned.
        This state is for problems where there is no possible way to continue
        examining the PR, e.g.  someone reported that their machine crashed
        once, in an old version of NetBSD, and could never reproduce it;
        someone no longer has the hardware needed to reproduce the problem.
        The purpose of the "dead" state, as distinct from the "closed" state,
        is so that people searching the database can quickly ascertain that a
        problem is not known fixed.
      </blockquote>
    </para>
  </sect4>
  
  <sect4 id="closed">
    <title>closed</title>
    <para>
      <blockquote>
        A Problem Report is closed ("the bug stops here") only when any
        changes have been integrated, documented, and tested, and the submitter
        has confirmed the solution.
      </blockquote>
    </para>
</sect4>

<html:hr/>
<ulink url="#page-top">[Page&nbsp;top]</ulink>
<ulink url="query-pr.html">[Query&nbsp;PR]</ulink>
<ulink url="http://www.NetBSD.org/cgi-bin/sendpr.cgi?gndb=netbsd">
[Send&nbsp;PR]</ulink>
<ulink url="../Gnats/">[GNATS&nbsp;summary]</ulink>

</sect3>

</sect2>
</sect1>

</webpage>
