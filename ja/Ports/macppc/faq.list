<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<!-- Copyright (c) 1998, 1999, 2000
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-2022-jp">
<link rev="made" href="mailto:www@JP.NetBSD.ORG">
<title>NetBSD/macppc Frequently Asked Questions</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">

<h1>NetBSD/macppc よくある質問</h1>

NetBSD/macppc に関するよくある質問をいくつか掲げます。
<p>

この FAQ は作成作業中です。さらなる情報、質問、回答があれば、
<a href="mailto:port-macppc@NetBSD.org">port-macppc@NetBSD.org</a> までメールを
(訳註: 英語で) 送ってください。
<p>

関連する次の FAQ も見てください:
<ul>
    <li><a href="/Documentation/elf.html" origlink="../../Documentation/elf.html">The NetBSD ELF FAQ</a>.
     <li>NetBSD のプラットフォーム独立なワークステーションコンソールドライバー
 	についての <a href="../../Documentation/wscons/">The wscons
 	FAQ</a>
</ul>

<LIST>

<SECTION>一般的な質問
<ENTRY>usb-mouse-bug USB マウスが認識されません。

キーボードでなく、 Mac 本体背面に直接接続してみてください。


<ENTRY>mouse-buttons X で 1 ボタンマウスを使って 3 ボタンマウスをエミュレートする方法は ?

今のところ、できません。


<ENTRY>usb-keyboard-problems USB キーボードの問題
カーネルによっては、 USB キーボードの最初の打鍵が何度も繰り返される
という問題があります。このため、インストールのさい
"<tt>(I)nstall, (S)hell or (H)alt ?</tt>" という質問が繰り返されます。
この問題を回避するため、最初に shift キーを押してください。
<p>
最近の機種では、 NetBSD がデバイスを設定後にシングルユーザーモードに入る前に
ハングすることがあります。
おすすめの回避策は、 USB デバイス (特にハブ) をすべて外し、
マウスをキーボードに挿し、キーボードを Mac 本体背面に直接つなぐことです。

<ENTRY>cannot-allocate-vm-panic <tt>panic: startup: cannot allocate VM for buffers</tt>
RAM をたくさん積んだマシンでは、カーネルがバッファーキャッシュを
割り当てようとする際、カーネルがカーネル VM から逸脱することがあります。
次のいずれかで回避できます:
<ol>
<li>RAM をいくつか外す
<li><a href="../../Documentation/kernel/#how_to_build_a_kernel">カーネルコンフィグレーション</a>に
    <tt>"options BUFPAGES=800"</tt> を加える
</ol>

<ENTRY>pciide-lost-interrupt <tt>pciide0:0:0: lost interrupt</tt>
NetBSD の CMD 646 IDE コントローラーの初期化コードは、
Open Firmware による設定のいくつかを完全に解除しません。
Open Firmware は IDE コントローラーを 0646U2 モードに設定し、
いくつかの割り込みの設定を変更しているのです。
MI pciide ドライバーは、このような状況に対処できず、
"lost interrupt" というメッセージがたくさん出るのです。
<p>
この場合、 Open Firmware を使ってブートローダー (<tt>ofwboot.elf</tt>) 
やカーネルをそのハードドライブからロードすると、
NetBSD ではそのドライブを使えません。
<p>
次善策としては、カーネルを別のブート可能なバスに移し、
それから CMD 646 IDE バスにつないだドライブを
NetBSD ファイルシステムにマウントするという方法があります。
キーフレーズは「別のブート可能なバス」です。
この問題を持つ G3 や G4 の機種には、もうひとつの IDE バス
(と追加の SCSI バス) があります。
通常は、ハードドライブはこの問題があるバスにつながれており、
一方、CD-ROM や Zip のドライブは別のバスにつながれていて問題なく動作します。

<p>
遅い IDE バスのプロトコルを使うことにはなりますが、
ハードドライブを CD-ROM がつながっているバスに移し
(マスター / スレーブのジャンパーに注意してください) 、
この問題を回避するという方法もあります。

<ENTRY>mesh-fifo <tt>Panic: mesh: FIFO != 0</tt>
このバグは NetBSD 1.5 以降では現れません。
<p>
これは、 SCSI ケーブルやデバイスに問題がある場合に起こります。
内蔵と外付けの終端抵抗を確認してください。
ケーブルの長さと品質を確認してください。
不要なデバイスを全部外してみてください。
<p>
この問題は、 SCSI の世界のよい住人とはいえない
MESH SCSI バス上の Zip ドライブがある場合、しばしば起こります。
<p>
MacOS からリブートして NetBSD をブートするのでなければ、
MESH ドライバーはより信頼できるようになるという人もいます。
(つまり、 MacOS を動かしている場合、再起動ではなくシステム終了をしてから、
電源を入れて NetBSD をブートしてください。)
<p>
M L Riechers はこのトピックに関して、たいへん徹底的な
<a href="http://mail-index.netbsd.org/port-macppc/2000/08/02/0029.html">
記事</a>を投稿しています。
<p>
健闘を祈ります。


<ENTRY>mesh-too-big SCSI の不可解なハング、タイムアウトといった問題
<a href="#ofw-real-base">下記</a>を見てください。

<ENTRY>bm0-device-timeouts device timeouts on bm0 と言われます
この問題は NetBSD 1.5 以降では修正済です。

<p>
10Mb のハブを介す (bm0 を強制的に 100Mb/s から 10Mb/s にする) と、
この問題を回避できるようです。

<ENTRY>non-sync-monitor ときどき、モニターが同期しません
これは PowerMacintosh 7300 - 8600 の機種での問題で、
ビデオ信号が十分早く決定されないために起こります。
OF 1.0.5 用の<a href="SystemDisk-tutorial/of105patch.html">パッチ</a>を当てるべきです。

<ENTRY>changing-resolution 解像度や色数を変える方法は ?
NetBSD 上では変更できません。 Open Firmware 上で変更しなければなりません。
また、 NetBSD/macppc は 8 bpp を超える色数には対応していません。
<p>
古い機種 (7300 - 8600) は OF で解像度を変更できません。
これらの機種では (<a href="SystemDisk-tutorial/of105patch.html">パッチ</a>適用後) 640x480 、 67 Hz に固定されます。
パッチを当てない場合は周波数が決まりません
(たいてい 60 Hz か 120 Hz ですが、そうとも限らないのでなんとも) 。
<p>
<!-- OF &gt;= 2.0 の新しい機種では、 (OF プロンプトで) 次のようにタイプすると:
(pre)0 &gt; (b)dev screen(/b)
0 &gt; (b)show-modes(/b)
0 &gt; (b)mode#(/b)
1 &gt; (b).(/b)(/pre)
(p)
その機種で有効な解像度がリストされます。
もし、 MacOS 上で解像度をこのいずれかに設定すれば、
Open Firmware はその設定を保持するはずです。 -->

最近の機種では、 MacOS で必要な解像度を設定する必要があります。
Open Firmware はその設定を保持します。
<p>
Chris Tribo によれば、彼の XClaimVR 64 カードは MacOS のモニターの設定を
無視して、いつも同じ解像度を使うとのことです。

<!-- ======================================== -->
<SECTION>対応ハードウェア

<ENTRY>nubus NetBSD/macppc は NuBus ベースの Power Mac (7100, 8100 等) をサポートしていますか ?

いいえ。 NetBSD/macppc は NuBus に対応していません。
さらに、 NuBus ベースの Power Mac は Open Firmware を持っていませんが、
NetBSD/macppc は Open Firmware に強く依存しています。

<p>
NuBus ベースの Power Macintosh マシンは、 4 グループに分類されます:
<ul>
<li><b>Apple PDM</b><br>
    あらゆる x1xx なマシン、たとえば 6100, 6150, 7100, 8100
<li><b>Apple PERFORMA class</b><br>
    52xx, 53xx, 62xx, 63xx (6360 は除く)
<li><b>Apple POWERBOOK ('M2') class</b><br>
    1400, 2300, 5300
<li><b>Power Computing "Power" シリーズ</b><br>
    "Power 100" と "Power 120"
</ul>

<p>これらの機種では、たとえプロセッサーを G3 にアップグレードしても、
他の部分が未サポートなので、動作しません。
(しかし、ロジックボードを完全にアップグレードすれば、
新しい機種と同等になるので、動作するでしょう)

<p>現在、これらの機種に対応するための作業をしている人を私たちは知りません。
もし、この作業に興味があれば、 (訳註: 英語で)
<a href="mailto:port-macppc@NetBSD.org">メールを送ってください</a>。


<ENTRY>68k-upgrade NetBSD/macppc は PowerPC プロセッサーにアップグレードした 68k ベースの Mac に対応していますか ?

いいえ。上記と同じ理由からです。
(これは<em>プロセッサー</em>だけをアップグレードした場合の話です。
マザーボードをすべてアップグレードすれば、
新しい機種と同等になるので、動作するでしょう。)


<ENTRY>601 NetBSD/macppc は Power Macintosh 7200 や 7500 に対応していますか ?

これらの機種は PCI と Open Firmware を持っていますが、 PowerPC 601
プロセッサーを使っているため、今のところ非対応です。しかし、
7500 のプロセッサーはアップグレード可能なので、 603/604/G3/G4 へ換装すれば
NetBSD が動作するでしょう。


<ENTRY>powerbook NetBSD/macppc は PowerPC ベースの PowerBooks に対応していますか ?

機種によります。 PowerBook 2400 と新しい G3 PowerBook は
PowerBook 1400, 2300, 5300 は、 PCI ベースでないため、非対応です。
他の機種では、そのままで動くかもしれませんし、
若干のドライバーの追加が必要かもしれません。

<p>いくつかの G3 Powerbook では、
左側のメディアベイにフロッピードライブがないと、
インストールフロッピーからのブートはできないと報告されています。

<p>パワーマネージメントは未サポートですので注意してください。
NetBSD の動作中は PowerBook のサスペンド、レジュームはできません。

<ENTRYLINK>models.html NetBSD/macppc 対応機種の一覧

<ENTRY>peripherals NetBSD/macppc どんな周辺機器に対応していますか ?

<p>
(XXX 機種別の使用チップについて、さらなる情報を必要としています)

<p>
<ul>
  <li> <strong>イーサネット</strong>
  <ul>
    <li> オンボード 79C950 (MACE) イーサネット
    <li> オンボード bmac イーサネット: 10Base-T のみ
    <li> オンボード gmac イーサネット
    <li> Tulip-compatible, 3Com, NE2000 互換 PCI カード (de,
	ep, ne ドライバー)
  </ul>

  <li> <strong>ディスク</strong>

  <ul>
    <li> オンボード 53c94 SCSI コントローラー
    <li> オンボード MESH SCSI コントローラー
    <li> Advansys 1200[A,B] 9xx[U,UA] PCI SCSI (ブートデバイスとしては使用不可)
    <li> Adaptec / Future Domain PCI SCSI (Macintosh firmware を持つものは
	ブートデバイスとして使用可)<br>
	<i><a href="#boot-pci">下記</a>参照</i>
    <li> BusLogic PCI SCSI (正式には未対応)

    <li> オンボード IDE ハードドライブと CD-ROM ドライバー<br>
	<i><a href="#pciide-lost-interrupt">上記</a>参照</i>

    <li> USB の大容量記録デバイス (Zip ドライブなど)
  </ul>

  <li> <strong>シリアル</strong>
  <ul>
    <li> オンボード RS-422 シリアル (モデム / プリンター) ポート
    <li> オンボード USB コントローラー (iMac と青い G3)
    <li> USB ベースのシリアル・パラレルポート
  </ul>

  <li> <strong>ビデオ</strong> (<a href="#ofw-boot-serial">下記</a>参照)
  <ul>
    <li> ほぼ全機種のオンボードビデオ
    <li> Open Firmware ドライバーを持った PCI ビデオカード
  </ul>

  <li> <strong>入力</strong>
  <ul>
    <li> ADB キーボードとマウス
    <li> USB キーボードとマウス
  </ul>

  <li> <strong>PCMCIA/CardBus</strong>

</ul>

<p>
個々の拡張カードやデバイスの対応について、詳しくは、
<a href="../../Hardware/pci.html">機種独立の PCI ドライバー</a>、
<a href="../../Hardware/usb.html">機種独立の USB ドライバー</a>、
<a href="../../Hardware/pcmcia.html">機種独立の PCMCIA ドライバー</a>、
<a href="../../Hardware/cardbus.html">機種独立の Cardbus ドライバー</a>
のページを見てください。
(今のところ、 NetBSD で動作する個々の ADB デバイスのリストはありません。)
<p>
NetBSD/macppc で未対応のものは、

<ul>
  <li> 内蔵オーディオ
  <li> ブート用として以外の (内蔵や USB の) フロッピードライブ
  <li> FireWire (IEEE 1394)
  <li> パワーマネージメント
  <li> Airport
  <li> 複数のプロセッサー (2 個目以降の CPU は動作しません)
</ul>


<!-- ======================================== -->
<SECTION>Open Firmware

<ENTRY>ofw Open Firmware って何ですか ?

Open Firmware は、 "IEEE Std 1275-1994: IEEE Standard
for Boot Firmware (Initialization Configuration) Firmware: Core
Requirements and Practices" とその補遺で仕様が定められた、
プラットフォーム独立のブートファームウェアです。
Sun の OpenBoot firmware を元にしており、
プロセッサー独立のインターフェース言語である ANS Forth を使っています。

Open Firmware のより詳しい情報は、
<a href="http://playground.sun.com/1275/home.html">Open Firmware
ワーキンググループホームページ</a>にあります。


<ENTRY>ofw-version 私の機種の Open Firmware のバージョンは ?

<a href="models.html">対応機種</a>ページを見てください。
あなたの機種が載っていなければ、 Open Firmware を使って確かめられます。
OF プロンプトで次のようにタイプします:
<pre>0 &gt; <b>dev /openprom</b>
0 &gt; <b>.properties</b>
name                    openprom
device_type             BootROM
model                   OpenFirmware 3
relative-addressing     
supports-bootinfo       

 ok</pre>
<p>
ちなみに、 G3 や G4 プロセッサーを積んでいない機種は OF 1.0.5 か 2.0.x です。
"トランスルーセント" な機種はすべて OF 3 です。

<ENTRY>ofw-bugs 私の機種の Open Firmware の動作にバグはありますか ?

ありえます。
<p>

Open Firmware 3.0 以降の mac では、<a href="http://asu.info.apple.com/">Apple
Software Updates</a>ウェブサイトから、
その機種用の新しいファームウェアをダウンロードできるかもしれません。
<tt>firmware</tt> を探して、
その機種用の最新のファイルをダウンロードしてください。
<p>

古い (ファームウェアを更新できない) mac でも、
システムにパッチを当てることができます。
Open Firmware には、開発後に見付かった問題を修正するための小さな
nvram があります。ありがたいことに、 Apple は多くの既知の問題を修正して
Open Firmware の変数を変えるための MacOS 用のユーティリティーを作っています。
このユーティリティーによるパッチから、 Open Firmware
を使ってブート可能でないデバイスからのブートができることがわかりました。
<p>

システムにパッチを当てるには、
<a href="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin">
SystemDisk</a> をダウンロードして、
ディスクイメージ中の <tt>System Disk</tt> プログラムを実行して、
<tt>Power User (Open Firmware)</tt> をクリックして、
<tt>Save</tt> をクリックするだけです。

<p>Note: <i><tt>Command-Option-P-R</tt> で PRAM をクリアすると、
nvram のパッチは消えます。</i>
<p>Note 2: <i>OF 1.0.5 の機種で MacOS を起動すると、
nvram のパッチは消えます。</i>
<p>

OpenFirmware 1.0.5 の機種では、追加の
<a href="SystemDisk-tutorial/of105patch.html">パッチ</a>があり、
System Disk ユーティリティーには<i>ない</i>修正を施すことができます。

<ENTRY>ofw-access Open Firmware にアクセスする方法は ?

Apple の <tt>System Disk</tt> を使って、ブート時は常に Open Firmware
に入るようにできます。この方法については、簡単な
<a href="SystemDisk-tutorial/">チュートリアル</a>を見てください。
<p>
手動で Open Firmware にアクセスするには、
ブートの間 Command-Option-O-F を押し続けます
(PowerBooks では、内蔵キーボードを使う必要があります) 。
起動音が鳴った少し後─これは機種によってばらつきがあり、
G3 PowerBooks は最もタイミングが難しいようです─に、
ファームウェアはキーの状態をチェックします。
もし、うまくいかなければ、起動音が鳴り始めるまで待ち、
鳴り終わらないうちに素早くキーを押してみてください
(そして、 Open Firmware の画面が出るまで押し続けてください) 。
また、再起動するよりは、電源を切った状態から起動したほうが、
Open Firmware に入りやすいとの報告もあります。
<p>
ブート時は常に Open Firmware プロンプトに入るようにするためには、
(OF プロンプトで) 次のようにタイプします:
<pre>setenv auto-boot? false</pre>
これで、 PowerMacintosh はブートやリブートの際、
いつも OF プロンプトに入るようになります。


<ENTRY>ofw-boot-serial Open Firmware に入ろうとすると、ブートが止まり、モニターに何も表示されなくなります。

古いバージョンの Open Firmware は、
デフォルトではキーボードやモニターではなくモデムポートを使って通信します。
(いくつかの古い PowerComputing の互換機や Performa など)
古い PowerPC 601 ベースの機種を対応プロセッサーにアップグレードしている場合、
この仕様を変更することはできません。
ですが、他の多くの機種では、
シリアルコンソールでなくキーボードとビデオを使うようにできます。

<p>最も簡単にこれを行う方法は、 Apple の System Disk を使うことです
(<a href="SystemDisk-tutorial/">チュートリアル</a>を見てください) 。
このプログラムを実行して、 <tt>Power User (Open Firmware)</tt> を
クリックしてから <tt>Save</tt> ボタンをクリックすると、
Open Firmware は使用可能な内蔵ディスプレイとキーボードを使うようになります。

<p>あるいは、シリアルコンソールで設定することもできます:
他のコンピューター (または端末) をモデムポートに接続し、
このシリアルポートを 38400 ボー、 8 ビット/バイト、ストップビット 1 、
パリティなしに設定します。
(Mac 以外を使う場合は、 Mac のミニ DIN 8 ピンから標準的な
DB9/DB25 への変換が必要です。)
kermit などの端末プログラムを使います。

<p>マシンを起動し、起動音が鳴ったらすぐに
Mac のキーボードの Command-Option-O-F を押し続けます。
しばらくすると (シリアル) コンソールに `<tt>0&nbsp;ok&gt;</tt>'
というプロンプトが出るはずです。

<p>マシンがシリアルコンソールのかわりにモニターとキーボードを使うように
切替えるため、次のようにタイプします:

<pre>
	" screen" output
	" kbd" input
</pre>

<p>Open Firmware は Forth 言語を元にしており、
変わった文法を持っていることに注意:
最初の引用符はそれに続くスペースを伴っており、
このスペースは引用符で囲まれた文字列の一部ではありません。
最後の引用符はその前にスペースを伴いませんが、
次の語との区切りのスペースが後にあります。

マシンによってはデバイスの別名 "screen" がないため、
ビデオデバイスの Open Firmware でのフルパスを確かめなければなりません。
さらに Open Firmware は、指定した出力デバイスが存在しないものであっても
文句を<i>言わない</i>ことに注意してください。
7x00 、 8x00 の機種と、 9x00 や G3 の一部の機種の出力デバイス名は
"<tt>/chaos/control</tt>" です。
<p>
<tt>screen</tt> でも <tt>/chaos/control</tt> でもうまくいかない場合は、
デバイスツリーからビデオカード名 (ATI のカードは "ATY," で始まり、
Twin Turbo カードは "IMS," で始まります) を含む PCI デバイス、
たとえば "<tt>/bandit/ATY,mach64</tt>" や
"<tt>/bandit@F4000000/IMS,tt128mb8A</tt>" のようなものを探します。
<tt>dev / ls</tt> とタイプすると、
Open Firmware で使えるデバイスのリストが得られます。
<p>起動の際 Open Firmware が常にキーボードとモニターを使うようにするためには、
次のようにタイプします:

<pre>
	setenv input-device kbd
	setenv output-device screen
</pre>

<p>(screen は機種によって適宜変えてください。)
これは、設定を変更するか PRAM をリセットするまで有効です。


<ENTRY>systemdisk Open Firmware のブート変数と nvram の設定

<a href="http://www.apple.com">Apple</a> による便利なユーティリティーを使って
設定することができます。詳細は簡単な
<a href="SystemDisk-tutorial/">チュートリアル</a>を見てください。
<p>
あるいは、 Open Firmware のプロンプトで <tt>setenv</tt> コマンドを使って
変数を変更することもできます。
利用可能な変数を調べるには <tt>printenv</tt> を使います。
<p>
<tt>nvramrc</tt> スタートアップスクリプトの内容を編集するために、
System Disk を ResEdit で改造することができます。 <tt>OFtc</tt>
リソースを見て System Disk が使っている機種 ID を調べてください。
それから対応する <tt>OFpt</tt> リソースを編集します。
<p>
あるいは (危険でもありますが) <tt>nvramrc</tt> を直接編集することもできます。
forth の文法は (特にスペースの有無について) <i>大変</i>厳格なので、
これは危険な方法です。
<tt>nvramrc</tt> を編集して一時的にシリアルコンソールを使いたいのであれば、
パッチをペーストするだけです。
使用可能なコマンドのリストについては、
<a href="nvedit.html"><tt>nvedit</tt> HOW-TO</a> を見てください。
<p>
いくつかの機種では、 System Disk のパッチを当てると、
当てない状態より状況が悪化することに注意してください。
もしこうなった場合は、 <tt>nvramrc</tt> を無効にします:
<pre>0 &gt; <b>setenv use-nvramrc? false</b></pre>
<p>
Note: <i><tt>Command-Option-P-R</tt> で PRAM をクリアすると、
Open Firmware 上で行ったすべての設定は消えます。</i>
<p>
Note 2: <i>OF 1.0.5 の機種で MacOS をブートすると、
Open Firmware 上で行ったすべての設定は消えます。</i>
<p>
Note 3: <i>極端な場合、 Open Firmware の設定によって
マシンが起動しなくなることもあります。これは PRAM クリアでは直りません。
この場合は、電源を抜き、 10 分間ほどマザーボードから電池を外します。
PowerBook の場合は power manager をリセットします。</i>

<ENTRY>ofw-claim-failed ブートしようとすると Open Firmware が "CLAIM failed" と言います

これは Open Firmware がメモリーの割り当てに失敗したときに出る
一般的なメッセージです。
原因はいくつかあります。
<p>
これはしばしばメモリーに問題があることを意味します。
もし、何か試したことが失敗したのちに再度何かを試して
"CLAIM failed" とのメッセージが出たのであれば、
これは一旦リブート (OF コマンドは "reset-all") すべき
であるとの指示です。
<p>
Open Firmware のバージョンが 1.0.5 か 2.X のマシンでは、
このエラーは、ときどきランダムに現れます。
かまわずに boot コマンドを試してみてもよいでしょう
(いくつかの機種では、これで動作することが知られています) 。
また、シリアルコンソールを使っていない場合は、
スクリーンドライバーと Open Firmware のコンフリクトによって
OF が ofwboot.xcf をロードできないのかもしれません。
いくつかの機種では、スクリーンとキーボードを使ってはブートできません。
唯一の回避策はシリアルコンソールを使う
(入出力デバイスを ttya か ttyb にする) ことです。
System Disk ユーティリティーを使って (<a href="SystemDisk-tutorial/">チュートリアル</a>参照)
input と output を ttya に設定するか、
Open Firmware で次のようにタイプします:
<pre>setenv input-device ttya
setenv output-device ttya
reset-all</pre>
<p>
これはマシンをリセットし、モデムポートに 38400 ビット毎秒、 8 ビット/バイト、
ストップビット 1 、 パリティなしでメッセージを送ります。

<ENTRY>ofw-load-base "load-base" の設定の問題
Open Firmware の環境変数 <tt>load-base</tt> は、
XCOFF バイナリーがメモリー上にロードされるアドレスです。
Open Firmware 1.0.5 と 2.X でのデフォルト値は 4000 です。
このアドレスが使われていると、
<tt>ofwboot.xcf</tt> で Open Firmware が上書きされ、 NetBSD をロードしません。
Open Firmware 1.0.5 や 2.X の機種では、 <tt>load-base</tt> を
安全なアドレスの範囲である 600000 にすることをおすすめします。
Apple は MacOS X に同じ問題があることを知っており、 <a
href="SystemDisk-tutorial/">System Disk</a> ユーティリティーは
OF 1.0.5 and 2.X の機種では自動的に <tt>load-base</tt> を
600000 に設定します。
mkLinux では異なる <tt>load-base</tt> 値を使いますが、
この値を使ってはいけませんので注意してください。
<p>
Open Firmware 3 の機種は書き換え可能なファームウェアを持っていますが、
<tt>load-base</tt> を 600000 に設定すると、ファームウェアを上書きして
マシンを壊してしまう (Apple での高価な修理が必要になる) ことがわかりました。
<b> Open Firmware 3 な機種で <tt>load-base</tt> を変更してはなりません。</b>
Apple は、 Open Firmware 3 では、 <tt>load-base</tt> のデフォルト値を
最適な値にしたので、どんな場合でも変更する必要はありません。
<p>
load-base を設定する必要があるのは、 Open Firmware から直接に
ofwboot.xcf をブートしようとする場合だけです。
installboot や NetBSD のインストーラーは、ファイルシステムが
<tt>ofwboot.xcf</tt> を含むようには設定<i>しない</i>ことに注意してください。
この場合、ファイルシステムは、パーティションマップにおいて、
細工された Apple パーティションマップのエントリーと ofwboot を持つようになります。
これら別種のブートローダーには、 <tt>ofwboot.xcf</tt> のような問題はありません。
このため、ブートデバイスとして、たとえば
<tt>scsi/sd@0:0</tt> や <tt>fd:0</tt> を使う場合、
<tt>ofwboot.xcf</tt> は使わないので、 <tt>load-base</tt> を設定する必要は
ありません。
<p>
その機種の Open Firmware が 1.0.5 か 2.X であるかを確認してから
(<a href="#ofw-version">上記</a>参照) 、下記のコマンドを実行して
<tt>load-base</tt> を適切に設定します
(System Disk はこれを自動的に行うことを、覚えておいてください):

<pre>0 &gt; <b>setenv load-base 600000</b></pre>

正しく設定されたか、 <tt>printenv</tt> コマンドで再確認すべきです。

<ENTRY>ofw-real-base "real-base" の設定の問題
Open Firmware の環境変数 <tt>real-base</tt> は、
<tt>ofwboot</tt> がカーネルをメモリー上にロードするアドレスです。
多くのユーザーからの報告によれば、
<tt>real-base</tt> のデフォルト値では、
あたかも SCSI に妙な問題があるような挙動を示したり、
大きな (通常 3 MB を超える) カーネルのロード中に
<tt>ofwboot</tt> がハングしたりするとのことです。
藤原誠氏の
<a href="http://mail-index.netbsd.org/port-macppc/2000/08/13/0004.html">報告</a>によれば、 
この問題は <tt>real-base</tt> を変えると修正できます。
<p>
Open Firmware 3 の機種は書き換え可能なファームウェアを持っていますが、
<tt>real-base</tt> を変更すると、ファームウェアを上書きして
マシンを壊してしまう (Apple での高価な修理が必要になる) ことがわかりました。
<b> Open Firmware 3 な機種で <tt>real-base</tt> を変更してはなりません。</b>
いずれにせよ、 OF 3 は、大きなカーネルに関してもうまく動作するので、
この件は問題にはなりません。
<p>
その機種の Open Firmware が 1.0.5 か 2.X であるかを確認してから
(<a href="#ofw-version">上記</a>参照) 、下記のコマンドを実行して
<tt>real-base</tt> を適切に設定します (注意: System Disk はこの変数を
適切に設定<b>しません</b> ─ System Disk を使うたびに、 <tt>real-base</tt>
を設定しなおす必要があります):
<pre>0 &gt; <b>setenv real-base F00000</b>
0 &gt; <b>reset-all</b></pre>
<p>
正しく設定されたか、 <tt>printenv</tt> コマンドで再確認すべきです。
<p>
この問題への次善策は、カーネルを再構築して、サイズを 3 MB より
小さくすることです。 OF 1.0.5 や 2.X の機種には内蔵 USB がないため、
PCI USB インターフェースがなければ、 USB ドライバーを含めずに
カーネルを作れます。


<ENTRY>ofw-auto-boot 起動の際、何もしなくても勝手に Open Firmware に入るようにする方法は ?

Open Firmware で次のようにタイプします:

<pre>
	setenv auto-boot? false
</pre>

<p>これは、変数値を "true" に戻すか、
PRAM をリセットするまで有効です。


<ENTRY>ofw-boot-keys ほかに、ブートシーケンスを変更する特殊なキーはありますか ?

よく知られた、 PRAM をクリアするための Command-Option-P-R (これは
Open Firmware の設定も消します) や、
若干知名度が劣る、最初のブートデバイスからブートするための
Command-Option-Shift-Delete のほか、
いくつかの機種では次のようなキーが有効です。
内蔵 CD-ROM ドライブからブートする "C" 、
ネットブートする "N" 、内蔵 Zip ドライブからブートする "Z" 、
デフォルトのブートデバイスを無視して強制的に内蔵ディスクからブートする "D" 。
(これらは Apple の文献で "snag keys" として参照されています。)

<p>実際には、これらはそれぞれ Open Firmware のデバイスの別名
"cd", "enet", "zip", "hd" を使っているので、デバイスの別名を変えると
これらのキーの効果も変わります。機種によっては使えないキーもあります。


<ENTRY>ofw-misc このほか、 Open Firmware で何ができますか ?

いくつか有用なコマンドを挙げます:

<table>
<tr><td><code>bye</code></td><td>Mac OS をブートする(OF &lt; 3.0 の場合)</td></tr>
<tr><td><code>mac-boot</code></td><td>Mac OS をブートする(OF &gt; 3.0 の場合)</td></tr>
<tr><td><code>boot</code></td><td>デフォルトの OS をブートする</td></tr>
<tr><td><code>boot&nbsp;...</code></td><td>Specify what to boot</td></tr>
<tr><td><code>reset-all</code></td><td>Reset, as though you'd pressed the reset button</td></tr>
<tr><td><code>shut-down</code></td><td>マシンの電源を切る</td></tr>
</table>

<p>基本的な Open Firmware のコマンドについて、詳しくは

<a
href="http://developer.apple.com/technotes/tn/tn1061.html">"Technote
1061 - Fundamentals of Open Firmware, Part I: The User Interface"</a>
と <a
href="http://developer.apple.com/technotes/tn/tn1062.html">"Technote
1062 - Fundamentals of Open Firmware, Part II: The Device Tree"</a>
を見てください。


<!-- ======================================== -->
<SECTION>ブート

<ENTRY>boot-support NetBSD/macppc をブートするにはどんな方法がありますか ?

NetBSD/macppc は Open Firmware を使ってブートするので、
MacOS がブートできるすべてのデバイスからブートできます。
これには、あらゆる SCSI や IDE ドライブ (コントローラーが対応しているもの) 、
内蔵フロッピー、 CD-ROM が含まれます。
(<a href="../../Sites/cdroms.html#netbsdmissionrelease">NetBSD
Mission 1.5 Release CD-ROM</a> は macppc でブート可能です。)

<p>イーサネットハードウェアが Open Firmware のブートに対応していれば、
NetBSD (MacOS でも) をネットワーク経由でブートすることもできます。
すべての対応機種の内蔵イーサネットはネットブートに対応しています。
Asante は Open Firmware 対応の PCI イーサネットカード (10NIC PCI)
を製造していますが、ブート後の NetBSD が対応しているかは不明です。
NetBSD のブートに対応した Adaptec の PCI SCSI カードがいくつかあります。
PCI カードからのブートについては<a href="#boot-pci">下記</a>
を参照してください。


<p>Macintosh 用でない SCSI カードやブート可能でない Macintosh 用 SCSI カード
に接続された SCSI ドライブからは、
たとえその SCSI カードが NetBSD でサポートされていても、ブートはできません。
また、 Open Firmware は内蔵 USB を持つ初期の機種では
あらゆる USB デバイスからのブートに対応しません。
誰も試していませんが、最近の機種では USB ハードドライブからのブートが可能なはずです。

<p>
さらにややこしいことに、
NetBSD カーネルは 3 段階を経てロードされ、各段階について設定が必要です。

<table border=1>
<tr><td>段階名</td><td>OF 1.0.5 and 2.0.X</td><td>OF 2.4</td><td>OF 3</td>
<td>機能</td></tr>

<tr><td><tt>bootxx</tt></td>
<td>yes (optional)</td>
<td>yes (optional)</td>
<td>no</td>
<td>単純な初期段階のブートローダーで、ディスクのパーティション "zero"
に置かれ、 <tt>ofwboot.xcf</tt> をロードする。<br>
この実体は Apple Partition Map のあるべき場所に置かれるため、
<tt>bootxx</tt> を使うドライブでは MacOS と NetBSD は共存できない。</td></tr>

<tr><td><tt>ofwboot.xcf</tt></td>
<td>yes</td>
<td>yes</td>
<td>no</td>
<td>必須のブートローダー (OF が扱えるファイルシステムから、または
<tt>bootxx</tt> によって、またはイーサネット経由でロードされる) で、
NetBSD ファイルシステムとディスクラベルを扱え、
ELF カーネル (gzip されていてもよい) をロードできる</td></tr>

<tr><td><tt>ofwboot.elf</tt></td>
<td>no</td>
<td>no</td>
<td>yes (optional)</td>
<td>オプショナルなブートローダー (OF が扱えるファイルシステムまたは
イーサネット経由でロードされる) で NetBSD ファイルシステムやディスクラベルを扱え、
ELF カーネル (gzip されていてもよい) をロードできる</td></tr>

<tr><td><tt>netbsd</tt></td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>NetBSD の動作に必要なカーネル。
<tt>ofwboot.xcf</tt> または <tt>ofwboot.elf</tt> によりロードされる。
OF 3 の機種では、 OF が扱えるファイルシステムから直接、
またはイーサネット経由でカーネルをロード可能</td></tr>
</table>

<p>
いずれにせよ重要なことは、どのバージョンの Open Firmware も、
NetBSD が使うファイルシステムを扱えないということがです。
このため、 Open Firmware が扱えるファイルシステム上に必要なファイルを
置かねばなりません。<p>
<table border=1>
<tr><td>ファイルシステムの種類</td><td>OF 1.0.5 and 2.0.X</td><td>OF 2.4</td><td>OF 3</td>
<td>解説</td></tr>

<tr><td>"partition zero"</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td><tt>bootxx</tt> の置き場。現在、 <tt>bootxx</tt>
は OF 3 マシンに非対応。</td></tr>

<tr><td>ethernet</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>詳しくは <a href="../../Documentation/network/netboot/">The Diskless
HOW-TO</a> 参照</td></tr>

<tr><td>ISO 9660</td>
<td>yes</td>
<td>yes</td>
<td>no</td>
<td>標準的な CD-ROM フォーマット。詳しくは<a href="#boot-cd">下記</a>参照。
</td></tr>

<tr><td>floppy</td>
<td>yes</td>
<td>maybe</td>
<td>no</td>
<td>OF 3 の機種にはフロッピードライブがない。
OF 2.4 の機種ではフロッピーからのブートに問題があると報告されている。
フロッピーイメージの書き込み方は<a href="#write-floppy">下記</a>参照。
</td></tr>

<tr><td>MS-DOS</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>ただし、ブートローダーは <tt>ofwboot.xcf</tt> も
<tt>ofwboot.elf</tt> も MS-DOS ファイルシステムを扱えず、
カーネルを MS-DOS ファイルシステムからロードできないことに注意。
</td></tr>

<tr><td>HFS and HFS+</td>
<td>no</td>
<td>yes</td>
<td>yes</td>
<td>ただし、 NetBSD は HFS ファイルシステムを扱えず、
ブートローダーやカーネルを HFS 上に置いた場合は、これらのアップグレードには
MacOS や<a
href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/sysutils/hfsutils/README.html">
hfsutils</a> が必要なことに注意。
</td></tr>
</table>
<p>


この説明で、あなたの疑問を解消できれば幸いです。



<ENTRY>boot-disk ディスクをブート可能にする方法と、それをブートさせるための Open Firmware のコマンドは ?

これは Open Firmware のバージョンに完全に依存します。
OF バージョンの調べ方は<a href="#ofw-version">上記</a>を見てください。
<p>

<ul>
<li><h4>OF 1.0.5 と 2.0.X:</h4> このバージョンの OF では、
ISO 9660 ディスク、 MS-DOS ディスク、ネットワークと、
"whole" disks (partition "0") からの XCOFF バイナリーによるブートのみ可能です。
"whole" disks 用として、第二段階のブートローダー (<tt>ofwboot.xcf</tt>) をロードするだけの大変シンプルな <tt>bootxx</tt> プログラムがあります。
<tt>bootxx</tt> ブートローダーは MacOS パーティションテーブルと同じ場所にインストールする必要があります。
このため、当然ながら、 NetBSD が MacOS とともに "whole" disks を共有して使うことは不可能です。
<p>
NetBSD/macppc には、 ELF カーネルをロードするため、専用の
XCOFF ブートローダーがあります。
この XCOFF ブートローダーが前提としている "load-base" 値を使うように
OF が設定されているか、確認してください。
この設定は (OF で)
"<tt>setenv&nbsp;load-base&nbsp;600000</tt>" とします。
OF にこの XCOFF プログラムをロードさせるため、次のいずれかが必要です:
<p>

<ul>
<li><a href="../../Documentation/network/netboot/">Diskless
HOW-TO</a> に従い、 <tt>ofwboot.xcf</tt> をネットワーク経由でロードする<br>
<tt>boot&nbsp;enet</tt>
<p>

<li><tt>installboot</tt> プログラムを使い、 <tt>bootxx</tt> と <tt>ofwboot</tt>
をインストールする (NetBSD/macppc インストーラーはこれを自動的に行います) 。
これを NetBSD/macppc 上で手動で行うには次のようにします:<br>
<tt>cp /usr/mdec/ofwboot </tt><em>bootfile</em><br>
<tt>/usr/mdec/installboot </tt><em>bootfile</em><tt> /usr/mdec/bootxx
</tt><em>bootdev</em>
<p>

ここで、 <em>bootfile</em> は、ブート可能とするディスクの
ルートファイルシステム上の "<tt>/boot</tt>" ファイルのパス、
<em>bootdev</em> は、このファイルを含むデバイスの raw デバイスノードです。
<p>

そして、フロッピーかネットワークからブートするのでなく、
ファイルシステム (sd0 とします) が /mnt にマウントされている場合、次のようにします:

<pre>
	cp /usr/mdec/ofwboot /mnt/boot
	/usr/mdec/installboot /mnt/boot /usr/mdec/bootxx /dev/rsd0a
</pre>
<p>

installboot が raw デバイスとマウントされたファイルシステムの双方に
アクセスする必要があるため、この作業はシングルユーザーモードで、または
"options INSECURE" としたカーネルの下でしかできないことに注意してください。
<p>

<li><tt>ofwboot.xcf</tt> を ISO 9660 フォーマットの CD-R の最上層に置きます。
これを SCSI CD-ROM ドライブを使って ISO 9660 フォーマットからロードするには、
次のようにします:<br>
<tt>boot&nbsp;scsi/sd@3:0,ofwboot.xcf</tt>
<p>

詳しくは<a href="#boot-cd">下記</a>を見てください。
<p>

<li><tt>bootxx</tt> と <tt>ofwboot.xcf</tt> を
(NetBSD/macppc インストールフロッピーのように) フロッピーディスクに置いて、<br>
<tt>boot fd:0</tt>

<li><tt>ofwboot.xcf</tt> をDOS フォーマットのフロッピーディスクに置く<br>
<tt>boot fd:1,ofwboot.xcf -a</tt><br>
ofwboot は (カーネルと違って)
DOS ファイルシステムからファイルをロード<i>できない</i>ことに注意。
</ul>
<p>
</li>

<li><h4>OF 2.4:</h4> このバージョンの OF は、
HFS や HFS+ ディスク、 ISO 9660 ディスク、 MS-DOS ディスクと、
ネットワーク経由での XCOFF イメージでのブートにのみ対応しています。 
旧バージョンの OF 用の <tt>installboot</tt> プログラムは使えません。
<p>NetBSD/macppc には、 ELF カーネルをロードするための専用の
XCOFF ブートローダーがあります。
XCOFF ブートローダーが前提としている "load-base" 値を
OF が使うようにしなければなりません。
この設定は (OF で)
"<tt>setenv&nbsp;load-base&nbsp;600000</tt>" とします。
OF にこの XCOFF プログラムをロードさせるため、次のいずれかが必要です:
<p>

<ul>
<li><a href="../../Documentation/network/netboot/">Diskless
HOW-TO</a> に従い、 <tt>ofwboot.xcf</tt> をネットワーク経由でロードする<br>
<tt>boot&nbsp;enet:0</tt>
<p>

<li><tt>ofwboot.xcf</tt> を MacOS フォーマットのドライブの
HFS または HFS+ フォーマットのパーティションの最上層に置く
(バイナリーモードで転送するよう注意) 。
<p>

<li><tt>ofwboot.xcf</tt> を、 ISO 9660 フォーマットの CD-R の最上層に置きます。<p>

詳しくは<a href="#boot-cd">下記</a>を見てください。
<p>

<li><tt>ofwboot.xcf</tt> を DOS フォーマットのフロッピーディスクに置く<br>
<tt>boot fd:1,ofwboot.xcf -a</tt><br>
ofwboot は (カーネルと違って)
DOS ファイルシステムからファイルをロード<i>できない</i>ことに注意。
</ul>
<p>
</li>

<li><h4>OF 3.0 以降:</h4> このバージョンの OF は、
次のいずれかからの ELF バイナリーのロードのみに対応しています:
HFS と HFS+ のディスク、 MS-DOS のディスク、ネットワーク
<p>
NetBSD/macppc には、カーネルをロードするための専用の ELF ブートローダーがあります。
また、これらの機種では ELF カーネルを直接ロードすることもできますので、
OF にこれら ELF プログラムをロードさせるため、次のいずれかが必要です:
<p>

<ul>
<li><a href="../../Documentation/network/netboot/">Diskless
HOW-TO</a> に従い、 <tt>ofwboot.elf</tt> か <tt>netbsd</tt> をネットワーク経由で
ロードします。<br>
<tt>boot&nbsp;enet:0</tt>
<p>

<li><tt>ofwboot.elf</tt> か <tt>netbsd</tt> を MacOS でフォーマットした
ドライブの HFS か HFS+ のパーティションの最上位にコピーします。
(バイナリーモードで転送する必要があることに注意)<br>
<tt>boot hd:,ofwboot.elf</tt>
<p>

<li><tt>ofwboot.elf</tt> と <tt>netbsd</tt> を
HFS/ISO 9660 ハイブリッド CD-R の最上層にコピーします。<br>
<tt>boot cdrom:ofwboot.elf</tt>
<p>
詳しくは<a href="#boot-cd">下記</a>を見てください。
</ul>
</li>

</ul>

<ENTRY>autoboot Open Firmware が常に NetBSD をブートするようにする方法は ?
まず、 NetBSD をブートするための Open Firmware コマンドを調べておきます。
次に、そのコマンドを使って Open Firmware の変数に設定します。
最後にテストします。
<p>
<a href="#boot-support">上記</a>またはインストールノートを見て OF コマンドを調べてください。
<p>
OF の変数は OF コマンドラインででも System Disk のような MacOS ユーティリティーでも設定できます。設定の方法は <a
 href="SystemDisk-tutorial/">System Disk Tutorial</a> を見てください。
OF コマンドラインで変数を手動で設定する場合、
"<tt>setenv</tt>" コマンドを使って下記の変数 (すべてが必要とは限りません) を適切に設定します:
<p>
<table border=1>
<tr><td><tt>auto-boot?</tt></td><td><tt>true</tt></td></tr>
<tr><td><tt>boot-device</tt></td><td>ブートしようとするデバイス
  (たとえば <tt>enet:0</tt>)</td></tr>
<tr><td><tt>load-base</tt></td><td><tt>600000</tt> (<a
  href="#ofw-load-base">上記</a>参照。<strong>OF 3 では設定してはいけません
  </strong>)</td></tr>
<tr><td><tt>real-base</tt></td><td><tt>F00000</tt> (<a
  href="#ofw-real-base">上記</a>参照。<strong>OF 3 では設定してはいけません
  </strong>)</td></tr>
<tr><td><tt>boot-file</tt></td><td>OF がロードするファイル、
  たとえば <tt>ofwboot.xcf</tt><br>
  "whole disk" で <tt>bootxx</tt> を使う場合は <tt>netbsd</tt></td></tr>
<tr><td><tt>use-nvramrc?</tt></td><td><tt>true</tt>
   (nvram スクリプトを用意した場合)</td></tr>
<tr><td><tt>boot-command</tt></td><td><tt>wBoot</tt>
  (HD が動き出すまでブートを遅らせるよう設定した場合)</td></tr>
<tr><td><tt>input-device</tt></td><td><tt>kbd</tt> (他の値を設定しない場合)
  </td></tr>
<tr><td><tt>output-device</tt></td><td><tt>screen</tt> (他の値を設定しない場合)
  </td></tr>
</table>
<p>
設定が済んだら、正しく設定できたか "<tt>printenv</tt>" コマンドで
確かめてください。ここで <tt>reset-all</tt> とタイプすると、
うまく設定できていればリブートして NetBSD に入るでしょうし、
そうでなければ Open Firmware に落ちるでしょう。

<ENTRY>write-floppy フロッピーイメージを書き込む方法は ?
raw イメージをフロッピーディスクに書き込む方法はいくつかあります:
<ul>
 <li>NetBSD などの unix 環境下で dd(1) を使う。
 <li>DOS/Windows マシンで (<a href="../i386/">NetBSD/i386</a> と共に配布されている) rawrite.exe を使う。
 <li>MacOS で <a href="ftp://ftp.netbsd.org/pub/NetBSD/arch/macppc/floppy/README.rawdisk">suntar</a> を使う。
</ul>


<p>このフロッピーは、 MacOS のフロッピーブートのような使い方は
できないことに注意: Open Firmware に入って
"<tt>boot fd:0</tt>" とタイプしなければなりません。

<ENTRY>boot-pci PCI card からブートする方法は ?
いくつかの PCI カードは Open Firmware のドライバーを持っており、
そのカード経由でブートできます。
特に、 Asante は OF ドライバーを持つイーサネットカードを作っており、
また、ほとんどの Adaptec の SCSI カードは OF ドライバーを持っています。
注意すべきは、あるカードが Open Firmware で動作することは、
そのカードが NetBSD でサポートされていることを意味しない (その逆も同様)
ということです。
<p>
まず最初に、 PCI カードの Open Firmware での名前を確認します。
Apple は、各機種共通の内蔵デバイスには (scsi, hd, enet のように)
別名を付けています。
サードパーティー (つまり PCI カードのメーカー) はそういうことができません。
Open Firmware のドライバーを持つすべてのデバイスのリストを得るには、
OF プロンプトで次のようにタイプします:<br>
<tt>0 &gt; <b>dev / ls</b></tt>
ここで、デバイス名がどうなっているかが問題です。
普通、ベンダー名はデバイス名に含まれていて、
<tt>/pci/pci-bridge@d/ADPT,2930@3</tt> のようになります
(ADPT は Adaptec 製品を表し、機種は 2930 です) 。
<p>
次に、そのデバイスがブート可能かどうか確認する必要があります。
ブートするには Open Firmware の "word" で <tt>open</tt> が必要です。
このデバイスがサポートする OF "words" から調べることができます:<br>
<tt>0 &gt; <b>dev /pci/pci-bridge@d/ADPT,2930@3</b><br>
0 &gt; <b>words</b></tt>
<p>
リスト中に "open" があれば、
そのデバイスは Open Firmware からブート可能のはずです。
ブートするには、次のようにします:<br>
<tt>0 &gt; <b>boot /pci/pci-bridge@d/ADPT,2930@3/@5:0</b></tt><br>
ここで 5 はブートしようとしているドライブの SCSI ID 、
0 はパーティション番号です。
<p>
注意: 実質的にはアットマーク以降のアドレスがすべてであり、
<tt>/pci/pci-bridge@d/ADPT,2930@3</tt> は <tt>/pci/@d/@3</tt> のように
短縮することができます。

<ENTRY>boot-net netboot の設定は ?

<a href="../../Documentation/network/netboot/">Diskless NetBSD
HOW-TO</a> を見てください。

<p>Mitchell Spector も、簡単な<a
href="http://www.enchantedlearning.com/tech/netbsd_imac.shtml">iMac 向け
netboot 情報</a>を含んだページを作っています。

<ENTRY>boot-cd ブート可能な CD-ROM の作り方は ?
<tt>ofwboot.xcf</tt> と <tt>ofwboot.elf</tt> のいずれか一方あるいは両方
(その機種の  Open Firmware のバージョンによる) と、
<i>gunzip で伸長した</i>カーネルを含む ISO 9660 イメージを作ります。
MacOS 用の gunzip プログラムには、カーネルを ASCII ファイルとみなして
伸長するものがあるので注意してください。
ofwboot とカーネルのファイルを CD の一番上の階層 ( <tt>/</tt> ) に置きます。
インストールに必要な他の配布物 (base.tgz, etc.tgz など)
を一緒に含めることもできます。
<p>
CD を焼きます。ブートして Open Firmware に入ります。
Open Firmware から CD でマシンをブートします。
OF のバージョンによって、ブート用のコマンドは異なります。
例を示します:

<table cellpadding=5>
<tr><td><tt>boot scsi/sd@3:0,ofwboot.xcf -a</tt></td>
<td>CD が "scsi" Open Firmware バス上にあるOF 1.0.5 の機種<br>
<i>Note: OF 1.0.5 は <tt>ofwboot.xcf</tt> を、 ISO/HFS ハイブリッド CD
からロードできません。純粋な ISO CD でなければなりません。</i></td></tr>
<tr><td><tt>boot ata/atapi-disk:0,ofwboot.xcf -a</tt><br>
<tt>boot ide1/disk@0:0,ofwboot.xcf -a</tt></td>
<td><tt>cd</tt> デバイスがない OF 2.0.X の機種</td></tr>
<tr><td><tt>boot cd:ofwboot.xcf -a</tt></td>
<td>OF 2.0.X や 2.4 の機種</td></tr>
<tr><td><tt>boot cd:netbsd</tt><br>
<tt>boot cd:ofwboot.elf -a</tt></td>
<td>OF 3.0 の機種<br>
<i>Note: OF 3 は HFS/ISO ハイブリッド CD からしかロードできません。</i></td></tr>
</table>
<p>
カーネルの名前を尋ねられたら <tt>netbsd</tt> とタイプします。
<p>
この方法で問題がある場合、単にブートフロッピーのイメージをそのまま
CD-ROM に焼くという方法もあります。ただし、この方法が使えるのは
Open Firmware 1.0.5 か 2.X の機種だけです (OF 3.0 以降では使えません) 。
この方法を使ってブートする場合、ファイル名 <tt>ofwboot.xcf</tt>
を指定してはいけません。このファイルシステムのイメージは、
bootxx ブートローダーがインストールされている状態なので、
0 番目のパーティションを使うことになります。
<tt>boot&nbsp;scsi/sd@3:0</tt> や <tt>boot&nbsp;cd:0</tt> のようにします。
<p>



<ENTRY>grey-screen ブートしようとすると、画面がグレーになってクエスチョンマークが点滅するのはなぜですか ?
これは、 Open Firmware のブートコマンドが間違っており、
マシンが  Open Firmware の <tt>boot-device</tt> 環境変数値をもとに
ブートしようとしていることを意味します。
この変数のデフォルト値は、 MacOS をブートするようになっています。
クエスチョンマークが点滅するグレーの画面は、
マシンがブート可能な MacOS のファイルシステムを探しているが
見付からないことを意味します。
<p>
リブートして Open Firmware に入り直し、コマンドをよく確認してください。


<ENTRY>black-lcd ブートの間、画面が真っ暗になってしまうのはなぜですか ?
バグです。 NetBSD カーネルはバックライトを消してしまいます。
回避するため、 PowerBook の画面の明るさを上げてください。
<p>
もし PowerBook を使っているのでなければ、
その機種はデフォルトでシリアルコンソールを使うようになっています。
<a href="#ofw-boot-serial">上記</a>を見てください。


<ENTRY>dash-a カーネルがいつもルートデバイスを尋ねてくるのはなぜですか ?
多くの人が、 NetBSD/macppc システムを無人でブートさせられないと報告しています。
Open Firmware はカーネルを正しくロードするものの、
カーネルはルートデバイス (つまり / ファイルシステムの所在)
を見つけられていないようです。
<p>
これが修正されるまでの次善策があります。次のような設定で
<a href="../../Documentation/kernel/#how_to_build_a_kernel">カーネルを
コンパイル</a>する必要があります:
<pre>#config		netbsd	root on ? type ? #to automatically detect root device
config		netbsd	root on sd0 type ffs #for SCSI disk
#config		netbsd	root on wd0 type ffs #for IDE disk
#config		netbsd	root on ? type nfs #for netboot
</pre>

ここで <tt>sd0</tt> はルートファイルシステムのあるデバイス名です。


<ENTRY>bootx Linux の BootX ユーティリティーは NetBSD/macppc のブートに使えますか ?
いいえ。ですが、 BootX のメンテナーは、
誰かが NetBSD 用のパッチを書けば取り込むと言っています。 (<a
href="http://mail-index.netbsd.org/port-macppc/1999/03/12/0002.html">port-macppc メーリングリストのアーカイブ</a>を見てください。)




<!-- ======================================== -->
<SECTION>その他もろもろ

<ENTRY>elf <tt>ldconfig</tt>/<tt>ld.so.conf</tt> はどこにありますか ?

NetBSD/macppc は ELF を使っているので、
<tt>ldconfig</tt> や <tt>ld.so.conf</tt> はありません。
より詳しくは、<a href="/Documentation/elf.html" origlink="../../Documentation/elf.html">NetBSD ELF FAQ</a>
を見てください。


<ENTRY>cross-compile 他の NetBSD アーキテクチャーでクロスコンパイルする方法は ?

まず、パッケージコレクションから
cross/powerpc-netbsd パッケージをコンパイル、インストールしてください。

カーネルの構築のため、通常にコンフィグレーションしてから、
次のようにしてコンパイルします:

<pre>
	make PATH=/usr/pkg/cross/powerpc-netbsd/bin:$PATH \ 
		MACHINE=macppc MACHINE_ARCH=powerpc depend all
</pre>

クロスコンパイルユーザーランドは若干複雑になります。 (XXX 以上)

(XXX この項目は MI FAQ に移すべきです)


<ENTRY>linux NetBSD/macppc で MkLinux や LinuxPPC のバイナリーが動きますか ?
今のところ動きません。不可能なわけではなく、単に誰も作業していないからです。


<ENTRY>macos NetBSD/macppc で MacOS のバイナリーが動きますか ?
ほえ ! 実は、 LinuxPPC 用の
<a href="http://www.ibrium.se/linux/mac_on_linux.html">Mac-on-linux</a>
という興味深いリンクがあります。
ですから、いずれできるようになるかもしれません。

<ENTRY>keys <img src="/images/ports/macppc/icon-command.gif" origlink="../../images/ports/macppc/icon-command.gif" width="13" height="13" alt="command key"> や <img src="/images/ports/macppc/icon-option.gif" origlink="../../images/ports/macppc/icon-option.gif" width="17" height="13" alt="option key"> のアイコンの意味は (あるいは、 "command" や "option" キーはどれ) ?
Aplle はキーボードに特別なキーを用意しており、
(特に US キーボード以外では) 混乱する人がいるかもしれません。
<img src="/images/ports/macppc/icon-command.gif" origlink="../../images/ports/macppc/icon-command.gif" width="13" height="13"
alt="command key"> 印の付いたキーは、普通、 "Command" キーとして参照されます。
キーボードによっては、コマンドキーに "open apple"
(<img src="/images/ports/macppc/icon-open-apple.gif" origlink="../../images/ports/macppc/icon-open-apple.gif" width="13" height="15"
alt="open apple key">) 印も付いています。

US キーボード以外では、 US キーボードで "option" キーとして印のあるキーに
<img src="/images/ports/macppc/icon-option.gif" origlink="../../images/ports/macppc/icon-option.gif" width="17" height="13"
alt="option key"> 印の付いたキーがあります。
<p>
しばしば、 Mac のドキュメントでは、 "C-O-p-r" などを押すよう指示しています。
これは、 command キーと option キーを "p" と "r" とともに押すことを
意味しています。


<!-- ======================================== -->
</LIST>

<a href="./">Up to <em>NetBSD/macppc Port Page</em></a>
<hr>

<DOCLINK>

<hr>
<address>
  <small>
  (連絡先 - <a href="../../Misc/feedback.html">英語</a>,
       <a href="mailto:www@JP.NetBSD.ORG">日本語:
       www@JP.NetBSD.ORG</a>)<br>
  $NetBSD: faq.list,v 1.55 2000/12/06 13:48:30 dent Exp $<br>
  <a href="../../Misc/disclaimer.html">Copyright &copy;
    1998, 1999, 2000
    The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
