<html>
<head>
<!-- Copyright (c) 1996, 1997, 1998, 1999, 2000
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<link rev="made" href="mailto:www@jp.NetBSD.ORG">
<title>NetBSD/i386 Frequently Asked Questions</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">

<h2>NetBSD/i386  FAQ (よくある質問と回答集)</h2>

この文書は NetBSD/i386 特有の良くある質問(と回答)のまとめになることを
目標としています。

<LIST>

<h2>その他の情報</h2>
<ul>
<li><a href="http://www.xfree86.org/FAQ/#SectionB">XFree86 FAQ</a>
    - X のインストールや設定に関する問題。
<li><a href="ftp://ftp.NetBSD.ORG/pub/NetBSD/NetBSD-1.4.1/i386/INSTALL.html">
    NetBSD 1.4.1 インストールノート</a> - サポートされているハードウェアおよびインストールの方法。
<li><a href="../../Documentation/elf.html">The NetBSD ELF FAQ</a>.
    NetBSD 1.5から i386 port は a.out ではなく、ELF 実行形式を使用します。
<li><a href="../../Documentation/wscons/">The wscons
    FAQ</a>.  NetBSDの機種非依存のワークステーションコンソールドライバー。
<li><a href="../../MailingLists/#port-i386">port-i386 メーリングリスト</a>
    - さらなる疑問がある場合は購読して下さい。
<li><a href="../../Documentation/network/netboot/intro.i386.html">Netbooting
    NetBSD/i386</a> - フロッピーまたは DOS パーティションからのブート。
<li><a href="../../Documentation/power-mgmt/">ラップトップの
    パワーマネジメント</a>
<li><a href="../../Documentation/">General NetBSD Documentation</a>
    - NetBSD/i386 に限らない質問
<li>Luke Mewburn による *BSD のための
    <a href="http://goanna.cs.rmit.edu.au/~lukem/papers/building-pcs.html">
    i386 ハードウェアの選び方ガイド</a>
<li>東芝による <a href="http://newsletter.toshiba-tro.de/~feyrer/netbsd/">NetBSD のページ</a>
</ul>

<SECTION>ディスクの分割/ブート

<ENTRY>boot-floppy-too-big ブートフロッピー(イメージ)が大き過ぎるのですが。
もし boot.fs イメージを 'ascii' モード( Windows の FTP client や 
Netscape のデフォルトになっています)でダウンロードした場合、newlines は
改行/newline に変更されてしまい boot.fs イメージは壊れてしまいます
(さらにフロッピーディスクにおさまらない大きさになります)。
<p>
もし Windows の FTP client を使っているのならば、ブートイメージをダウンロードする前に
'bin' とタイプして binary モードにする必要があります。
<p>
もし、その他の方法を使用している場合は、boot.fs.gz ファイルをダウンロードし
winzip を使って伸長してたほうが簡単かも知れません。

<ENTRY>540mb-bios-limit 540MB BIOS limit があるマシンで大きなドライブを使用するには
    BIOS でジオメトリーとして 1024/16/63 を入力し、ブートパーティションが
    先頭の 540M に含まれていることを確認して下さい
    (これは、カーネルが BIOS から読み込まれるために必要です)。
    そうすれば、NetBSD から ディスク全体を使用することが可能です。

<ENTRY>determining_geometry "正しい" ディスクジオメトリーの決定法
<p>
NetBSD はブートプログラムをロードするのに PC BIOS を用いています。これが正しく働くためには
NetBSD と BIOS の両方でディスクジオメトリー が共通である(少なくとも
ブートパーティションを含んでいる部分に関しては)ことが必要です。<p>
PCに搭載されている BIOS が扱えるディスクのシリンダー数、ヘッド数、セクター数には
上限があります(<a href="#bios_disk_limits">表参照</a>)。(これは SCSIカード上の
BIOS も含みます）。
<p>
多くのディスクの本当のジオメトリーはこれらの制限値におさまらなくなってきたので、
新しい BIOS はジオメトリーを制限内におさまり、かつ、全体の大きさが
同じ（か少し小さく）なるように解釈しなおします。
<p>
もし、ディスクに(DOS, Windows, pfdisk 等によって作成された)有効な DOS MBR 
パーティションがあれば、それは "正しい" BIOS ジオメトリー を含んでいます。
NetBSD は sysinst 中でこれを BIOS ジオメトリーとして用います。
しかしながら、新しいディスクや MBR のセットアップが正しく行なわれていない
ディスクでは、NetBSD は間違った BIOS ジオメトリーを使用してしまいます。

理想としては、この情報はブートプログラムから渡されるべきでしょう。しかしながら
BIOS ディスクを NetBSD ディスクにマッピングする確実な方法がありません。
もっとも、現在の全然使えない状態を改善することは可能でしょう。
<p>
"正しい"解釈され直したジオメトリーを決定する方法の一つは 'pfdisk' を
用いることです。
<ol>
<li>pfdisk を ftp.netbsd.org (またはそのミラーサイト)からダウンロードします。<a
href="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-1.4.1/i386/installation/misc/pfdisk.exe">
    /pub/NetBSD/NetBSD-1.4.1/i386/installation/misc/pfdisk.exe</a>.
<li>'<tt>pfdisk <em>0</em></tt>' を実行します。 (0 は最初のディスクを 1 は二番目のディスクを意味します)。
<li>'<tt>list</tt>'と入力し、
<li>ジオメトリーを記録した後, リブートをかけ, NetBSD に用います。
</ol>

<h4><a name="bios_disk_limits">BIOS disk parameter limits</a></h4>
<table border=1>
<tr><th>パラメーター</th><th>ビット数</th><th>最大値</th></tr>
<tr><td align=right>シリンダー数</td>
	<td align=right>10</td><td align=right>1023</td></tr>
<tr><td align=right>ヘッド数</td>
	<td align=right>8</td><td align=right>255</td></tr>
<tr><td align=right>1トラック当りのセクター数</td>
	<td align=right>6</td><td align=right>63</td></tr>
</table>
(これにより、少なくとも BIOS が扱える最大の容量は 8Gbytes に制限されます。)

<ENTRY>ms_partition マイクロソフトパーティションへのアクセス
<p>
NetBSD は Microsoft の FAT, FAT32, NTFS4 を含む様々な異なる
ファイルシステムをサポートしています(完全なリストは 
fstab(5.i386)を参照して下さい)。NTFS5 は Windows NT 4.0 ServicePack 4で
こっそりと導入され、Windows 2000ではデフォルトで使用されています。
NTFS5 は執筆時点でサポートされていません。
Long filename は FAT と NTFS の両方でサポートされています。
<p>
他のファイルシステムにアクセスするためには、正しい "<tt>disklabel</tt>" を
セットアップする必要があります。"<tt>disklabel</tt>" はシステムに対して
どこにディスク上のデータを探しにいけば良いか教えます。
正しい"<tt>disklabel</tt>"を用いれば、NetBSD で使用するために
"<tt>mount</tt>" することができます。
<p>
<strong>ディスクラベルの設定</strong>
<p>
<ol>
<li>ファイルシステムが含まれているディスクを決定する<br>
もし、一つの IDE/ST506 または SCSI ディスクしか持っていないのならば、
これは <em>wd0</em> または <em>sd0</em> となります。複数のディスクを
お持ちならば、"<tt>dmesg | more</tt>" の出力から該当するディスク名を
決定して下さい。
<p>
<li>パーティションのサイズとオフセットの決定<br>
"<tt>fdisk</tt>" と入力すると、各パーティションのサイズとオフセットを
見ることができます。出力は次のようになるでしょう:<br>
<pre>
NetBSD disklabel disk geometry:
cylinders: 16938 heads: 15 sectors/track: 63 (945 sectors/cylinder)

BIOS disk geometry:
cylinders: 1023 heads: 240 sectors/track: 63 (15120 sectors/cylinder)

Partition table:
0: sysid 7 (OS/2 HPFS or NTFS or QNX2 or Advanced UNIX)
    start 63, size 3190257 (1557 MB), flag 0x80
        beg: cylinder    0, head   1, sector  1
        end: cylinder  210, head 239, sector 63
1: sysid 169 (NetBSD)
    start 3193155, size 4096575 (2000 MB), flag 0x0
        beg: cylinder  211, head  45, sector  1
        end: cylinder  482, head  29, sector 63
2: sysid 6 (Primary 'big' DOS, 16-bit FAT (&gt; 32MB))
    start 7302960, size 4596480 (2244 MB), flag 0x0
        beg: cylinder  483, head   0, sector  1
        end: cylinder  786, head 239, sector 63
3: sysid 15 (Ext. partition - LBA)
    start 11899440, size 4097520 (2000 MB), flag 0x0
        beg: cylinder  787, head   0, sector  1
        end: cylinder 1023, head 239, sector 63
</pre>
この例ではディスクは次の4つのパーティションからなります:<BR>
0) Windows NT 4.0 NTFS4 パーティション<BR>
1) NetBSD ffs パーティション<BR>
2) MS-DOS FAT パーティション<BR>
3) "extended" パーティション中の Windows 2000 NTFS5<BR>
<p>
<li>"<tt>disklabel &lt;DISKNAME&gt;</tt>"と入力する<br>
もしディスクが MS-DOS パーティションしか含んでいない場合、
NetBSD は自動的に先頭の MS-DOS パーティションを含む '仮想'ディスクラベルを
生成します。<br>
出力は次のようになるでしょう:<br>
<pre>
# disklabel wd0
</pre>
<i>physical disk information</i>
<pre>
8 partitions:
#        size   offset     fstype   [fsize bsize   cpg]
  a:   410130  3193155     4.2BSD     1024  8192    16   # (Cyl. 3379 - 3812)
  b:   409185  3603285       swap                        # (Cyl. 3813 - 4245)
  c:  4096575  3193155     unused        0     0         # (Cyl. 3379 - 7713)
  d: 16006410        0     unused        0     0         # (Cyl.    0 - 16937)
  e:  3274425  4012470     4.2BSD     2048 16384    32   # (Cyl. 4246 - 7710)
</pre>
<p>
もし、必要な fstype がすでに定義されていれば(すなわち MSDOS)、
<a href="#ms_partition_mounting">パーティションのマウント</a>
まで進んで下さい。
<p>
もし、NetBSD のインストールが完了していないのならば、 mbrlabel(8)コマンドを
用いて、ディスクの<em>fdisk</em>パーティション情報とコア中の disklabel を
同期させることができます。そうすれば、この情報を使うことにより BSD と
他の OS のパーティション情報を含んだ新しい disklabel を生成することができます。
<p>
<li>ディスクラベル編集の準備<br>
<em>vi</em>以外のエディターを用いたい場合は、
"<tt>setenv EDITOR &lt;YOUR_EDITOR&gt;</tt>" 例えば "<tt>setenv EDITOR
pico</tt>"
と入力します。
<p>
<li>"<tt>disklabel -e &lt;DISKNAME&gt;</tt>" と入力して disklabel を編集します<br>
disklabel の最下部まで進めば label の編集準備は完了です。<p>
必要なのは次の2点です:
    <ol>
    <li>使用されていない最初のアルファベット (この例では 'f')。
    <li>fdisk で得られた 'start/size' の値 (例えば '63')。
    </ol>
<p>
一番下に NTFS のために次の行を加えます:
<pre>
  &lt;PARTITION&gt;:   &lt;SIZE&gt;  &lt;OFFSET&gt;   NTFS
</pre>
上の例題の場合、適切な入力は次のようになります(fsize,bsize と cpg は
ブランクのままです):
<pre>
  f:  3190257       63       NTFS
</pre>
MSDOS のためには次のような行を加えます:
<pre>
  &lt;PARTITION&gt;:   &lt;SIZE&gt;  &lt;OFFSET&gt;   MSDOS
</pre>
例題では次のようになります:
<pre>
  g:  4596480  7302960      MSDOS
</pre>
パーティションについての注意: NetBSD/i386 は現在のところ、一つのディスク辺り
8個のパーティション('a' - 'h') しかサポートしていません。また、パーティション
テーブルの直前にある 'number of partitions' 行には、存在するパーティションの
数以上の数字を指定する必要があります。
<p><li>変更を保存し、ディスクラベルをチェックする<br>
エディターを終了し, "<tt>disklabel &lt;DISKNAME&gt;</tt>" と入力して、
新しいパーティションが存在するか確認して下さい。
</ol>

<p>
<strong><a name="ms_partition_mounting">ファイルシステムのマウント</a></strong>
<p>
各々のディスクパーティションは '/dev' にデバイスエントリを持っています。
デバイスエントリの形式は '/dev/'、ディスク名、パーティション文字 となっています。
上記の例題では NTFS と MSDOS パーティションに対するデバイスエントリはそれぞれ
'/dev/wd0f' と '/dev/wd0g' となります。
<p>
<ol>
<li>マウントポイントを作成する<br>
    "<tt>mkdir &lt;MOUNTPOINT&gt;</tt>", 例えば "<tt>mkdir /msdos</tt>" と
    "<tt>mkdir /nt4</tt>".
<p><li>ファイルシステムをマウントする<br>
    "<tt>mount -t &lt;TYPE&gt; &lt;DEVICE&gt; &lt;MOUNTPOINT&gt;</tt>",
    例えば "<tt>mount -t msdos /dev/wd0g /msdos</tt>" と "<tt>mount -t ntfs
   /dev/wd0f /nt4</tt>".
<p><li>うまくいっていることを確認する<br>
    "<tt>ls &lt;MOUNTPOINT&gt;</tt>", 例えば "<tt>ls /msdos</tt>" と "<tt>ls
    /nt4</tt>".
<p><li>ブート時に自動的にファイルシステムがマウントされるようにする<br>
    もし、NetBSD の起動時に自動的にマウントされるようにしたいならば、
    <em>/etc/fstab</em> を編集し、次の形式の行を加えて下さい。
<pre>
    &lt;DEVICE&gt; &lt;MOUNTPOINT&gt;  msdos   rw
    &lt;DEVICE&gt; &lt;MOUNTPOINT&gt;  ntfs    rw
</pre>
    上の例題の場合は
<pre>
    /dev/wd0g /msdos  msdos   rw
    /dev/wd0f /nt4    ntfs    rw
</pre>
となります。
</ol>

<ENTRY>dual_boot NetBSD や DOS/Windows/その他の OS のメニューからの起動
この部分は、すでにディスクのパーティションを切っていて、NetBSD と
その他のあなたが使用するつもりの OS をインストールし終っていることを仮定しています。
ここでは、OSBS ブートセレクターを用います。

<ol>
<li>OSBS ブートセレクター をダウンロードします。
    これは ftp.netbsd.org の <a href="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-1.4.1/i386/installation/misc/osbsbeta.exe">
    /pub/NetBSD/NetBSD-1.4.1/i386/installation/misc/osbsbeta.exe</a> に置いてあります。
<li>OSBS を取り出します。
    osbsbeta.exe を DOS ディスクに保存し、実行します。
    実行により 'OS-BS\OSBS20B8.EXE' が取り出されます。
<li>'<tt>OS-BS\OSBS20B8.EXE</tt>' を実行します。
<li>'<tt>Install</tt>' -&gt; '<tt>Boot menu</tt>' を選びます。
<li>ブートメニューに加えたいそれぞれのパーティションに対して '<tt>INSERT</tt>'を押します。
<li>終れば、'<tt>ESCAPE</tt>' を押します。続いて、デフォルトでブートする OS の選択、
    ブート開始までの待機時間(10秒くらいが適当でしょう)、ブート時の start id の
    変更(通常は必要ありません) についての設定を行います。
<li>ブートメニューを保存し、修了します。
<li>フロッピーディスクからブートしていた場合は、それを取り除きます。
</ol>
これで、マシンのブート時にブートメニューが出てくるようになったはずです。
<p>
1.4 以降では、もう一つの方法として新しい NetBSD のブートメニューも使用できます。
<ol>
<li>ブートメニューをインストールするために 'fdisk -i -c /usr/mdec/mbr_bootsel' を実行します。
<li>その後、対話的にブートメニューを設定するために 'fdisk -B' を実行します。(これはオプションでは
ありません。)
</ol>
fdisk(8) のマニュアルも参照して下さい。

<ENTRY>nt_boot Windows NT のブートメニューに NetBSD を加える方法

Windows NT のブートローダーを使って NetBSD をブートするには
512 Byte のブートブロックのファイル(<tt>nbsdX.bb</tt>, 下の link 参照)が
必要です。さらに、<tt>boot.ini</tt>ファイルに次のように書き加えて下さい。
<PRE>
[boot loader]
default=c:\nbsd0.bb
[operating systems]
<A HREF="/Ports/i386/nbsd0.bb">c:\nbsd0.bb</A>="NetBSD (harddisk 0)"
<A HREF="/Ports/i386/nbsd1.bb">c:\nbsd1.bb</A>="NetBSD (harddisk 1)"
<A HREF="/Ports/i386/nbsd2.bb">c:\nbsd2.bb</A>="NetBSD (harddisk 2)"
</PRE>
ブートブロックは<b>シングルユーザーモード</b>で次のコマンドを
用いて作ることも出来ます。
<pre>	dd if=/dev/r<i>XXY</i>a of=nbsd<i>Y</i>.bb count=1 bs=512</pre>
ここで、<i>XX</i> はディスクの種類 (一般には <tt>sd</tt> か <tt>wd</tt>),
 <i>Y</i> はディスクの番号(通常は <tt>0</tt>)です。
<p>
もし、NetBSD を最初のディスク以外ににインストールするならば、上記の
コマンドを実行する前に、ブートブロックをコンパイルし直してインストールする
必要があります。(コンパイルし直すには、/usr/src/sys/arch/i386/boot 
ディレクトリで幾つかの変更をする必要があります)。
</p>

<ENTRY>fips 全体が Dos/Windows で使用されているディスクに NetBSD をインストールする
DOS/Windows によって全てのディスク領域が占有されているハードディスクでも、
ディスクに空き容量がある場合ならば、DOS/Windows のパーティションを
小さくし、2番目のパーティションを作成することで NetBSD をインストールすることが
できます。<p>
これを行なうためには
<ul>
<li>DOS パーティションの全てのデータを <i>defrag</i> を用いて
パーティションの先頭に移動する。
<li>DOS パーティションの大きさを <i>FIPS</i> を用いて変更する。
Fips は 例えば次の場所から手に入れることができます。<a
href="ftp://ftp.du.se/disk0/slackware/slackware-3.4/install/FIPS/">ftp://ftp.du.se/disk0/slackware/slackware-3.4/install/FIPS/</a>.
全ての付属ドキュメントを読む事を忘れないで下さい。
<li><a href="#dual_boot">上</a>で述べられている方法でブートローダーをインストールします。
<li>NetBSD をインストールします。
</ul>

<ENTRY>new_sysid 'old NetBSD or FreeBSD' からパーティション sysid を変更する
1.3.3 以降の NetBSD はデフォルトの パーティション sysid が 165 から 169 に
変更されています。これは FreeBSD との衝突を避けるために行なわれました。
1.3.3 のシステムは sysid が 165 のパーティションからもブートしますが、
パーティションをオープンする度に警告を発します。
ディスクパーティションを 165 から 169 に変更するためには
次の手順に従って下さい。
<ol>
<p><li><b>1.3.3 のブートフロッピーがあることを確認する</b><br>
    これは何かがうまくいかなかった時に備えるためです。インストール済みのシステムを
    フロッピーディスクからブートするには、フロッピーから起動して、
    カウントダウンが行なわれている間にスペースキーを押し、
    '<tt><b>boot hd0:</b></tt>' と入力します。
<p><li><b>新しい ID を理解するブートブロックを使用していることの確認</b><br>
    もし、システムが 1.3.3 以降の sysinst を用いてインストールされているならば、
    問題ない<em>はず</em>です。そうでないならば、次のコマンドを実行して下さい。
    <ul>
    <li>'<tt><b>/usr/mdec/installboot biosboot.sym /dev/r{DISK}a</b></tt>'.
    </ul>
    もしカーネルが '<tt>options INSECURE</tt>' 無しで作られている場合は
    シングルユーザーモードにするためにシャットダウンする必要があります。
    <ul>
	<li>'<tt><b>shutdown now</b></tt>'
	<li>shell の入力を求められたら ENTER を押します。
	<li>'<tt><b>fsck -p</b></tt>'
	<li>'<tt><b>mount -vat ffs</b></tt>'
	<li>'<tt><b>cd /usr/mdec ; ./installboot biosboot.sym
		/dev/r{DISK}a</b></tt>'
    </ul>
    ここで {DISK} は 最初の ATA (IDE) ディスクに対しては <tt>wd0</tt>,
    最初の SCSI ディスクに対しては <tt>sd0</tt> などを意味します。
<p><li><b>パーティション ID の変更</b><br>
    '<tt><b>fdisk {DISK}</b></tt>' を実行して下さい。
    一つのパーティションは次のようになっているはずです。
<pre>	X: sysid 165 (FreeBSD or 386BSD or old NetBSD)</pre>
    ここで、X は 0, 1, 2, あるいはもっとも多そうな 3 です。
    '<tt><b>fdisk -u -X {DISK}</b></tt>' を実行します。
    <ol>
    <li>
	<tt>Do you want to change our idea of what BIOS thinks? [n]</tt>
	に対して<tt><b>ENTER</b></tt>と入力。
    <li>
	<tt>Do you want to change it? [n]</tt>
	に対して<tt><b>y ENTER</b></tt>と入力。
    <li>
	<tt>Supply a decimal value for "sysid" [165]</tt>
	に対して<tt><b>169 ENTER</b></tt>と入力。
    <li>
	<tt>Supply a decimal value for "start" [......]</tt>
	に対して<tt><b>ENTER</b></tt>と入力。
    <li>
	<tt>Supply a decimal value for "size" [.......]</tt>
	に対して<tt><b>ENTER</b></tt>と入力。
    <li>
	<tt>Explicitly specify beg/end address? [n]</tt>
 	に対して<tt><b>ENTER</b></tt>と入力。
    <li>
	<tt>Is this entry okay? [n]</tt>
	に対して<tt><b>y ENTER</b></tt>と入力。
    <li>
	<tt>Should we write new partition table? [n]</tt>
	に対して<tt><b>y ENTER</b></tt>と入力。
    </ol>
<p><li><b>全てが成功したか確認するためにリブートします</b><br>
    何か問題が起きた場合はブートフロッピーの fdisk を使って
    やり直すことが可能です。
<p><li><b>Be particularly relieved that NetBSD should not need to change its
    partition ID again.</b><br>
</ol>

<SECTION>特定のハードウェアの問題

<ENTRY>irq2or9 IRQ 2 と IRQ 9
    IBM AT とその後継機 (全ての NetBSD が作動する PC を含みます) では
    さまざまなハードウェア上の理由のために IRQ 2 は IRQ 9 にマップされています。
    そのため、"IRQ 2" と設定されているカードを使うためには
    NetBSD のカーネルコンフィギュレーションファイルでは IRQ 9 を
    選択する必要があります。

<ENTRY>ne200-device-timeout '<tt>ne1: device time out</tt>' という問題
    古いタイプの ISA カードは特定のアドレスと IRQ に設定されます。
    NetBSD は自動的にアドレスを検出することができますが、IRQ を決定する
    方法は不確実であり、自動設定テーブル(autoconfiguration table)には
    広く使われている値が決め打ちされています。もし、アドレスは正しく、
    IRQ が違っていた場合、デバイスは使用されたときに timeout を起こします。
    これは他の PCI, EISA や ISA-PnP バスに対しては影響しません。
    <p>
    もし、この問題に遭遇した場合の解決方法は次の 3つです。
    <ul>
    <p><li>カーネルの設定(<CURRENTSRC>sys/arch/i386/conf/GENERIC)と
        一致するようにカードの設定を変更する。変更には、ジャンパー
        スイッチや、DOS プログラムを使用します。通常 DOS プログラムは
        カード購入時に付属しています。
    <p><li>カード設定に合わせた新しいカーネルをコンパイルする。
    <p><li>別のカードを購入する - 最新の PCI ベースの PC において、
        ISA ネットワークカードは他のデバイスのパフォーマンスに
        かなりの影響を与えます。- fxp(4) (インテル社の Etherexpress-PRO) や
        tlp(4) (Tulip やその互換カード）などの PCI カードがおすすめです。
    <p><li>ddb(4)を用いたカーネル設定の手動変更
    <ol>
	<li>カーネルを '<tt><b>-d</b></tt>' オプションをつけてブートします。
            (カウントダウンが 0 になる前に、スペースバーを押し、
            '<tt><b>boot netbsd -d</b></tt>' と入力します。)
	<li><tt><b>x/xla loc,100</b></tt> と入力します。
	    出力の中の <tt>0x280</tt> を含む欄の offset を記録します。
	    GENERIC カーネルにはこのアドレスを持つ 3種類の ISA ネットワーク
            カードが存在します。
	<li>使用するカードの正しいアドレスを設定する
	    <tt><b>w/l loc+&lt;offset&gt; &lt;address&gt;</b></tt>.
	<li>使用するカードに合うように IRQ を設定する
	    <tt><b>w/l loc+&lt;offset&gt;+0x10 &lt;irq&gt;</b></tt>.
	<li>ブートを続行する。
    </ol>
    </ul>

<ENTRY>usb-interrupt USB の問題 '<tt>uhci0: couldn't map interrupt</tt>'
    この問題は BIOS で (おそらく "PNP & PCI Setup" というメニュー中の)
    "Allocate interrupt for USB" オプションが無効になっている場合に
    起こり得ます。有効にすると、多くの場合 NetBSD が起動する直前に
    BIOS は、IRQ の設定を含んだ 'Serial Controller'リストを表示します。

<ENTRY>cyrix-486dlc-cache  '<tt>WARNING: CYRIX 486DLC CACHE UNCHANGED</tt>' とは何ですか?
このメッセージはカーネルが Cyrix 486DLC を検出したが、Cyrix の特別な
キャッシュの設定が使用可能か判断できないために、キャッシュ設定を
行わなかったことを意味します。これは 386 マザーボード用の 
Cyrix '386/486 hybrid' アップグレードの場合にのみ該当し、
Cyrix を含む全てのベンダーの 486(以降の cpu を含む)プロセッサーの場合には
該当しないはずです。<p>
Many 386 motherboards (and CPUs) were too primitive to care about CPU
cache coherency, requiring the DLC to flush its cache any time a bus
hold was asserted by any bus device (indicating that a bus-master
transaction was potentially in progress). This obviously results in a
speed cost compared to running with full cache coherency. <p>
Cyrix 用キャッシュ設定のために次の2つのカーネルオプションが存在します。
<p>
<ul>
<li><tt><b>options CYRIX_CACHE_WORKS</b></tt><br>
    このオプションは CPU キャッシュを有効にしますが、
    外部バスの hold リクエスト時にはフラッシュするように指示します。
    486 よりは遅くなりますが、386(on-chip キャッシュがありません)よりは
    高速になります。このオプションはほとんどのマザーボードで
    動作するはずです。
<p>
<li><tt><b>options CYRIX_CACHE_REALLY_WORKS</b></tt><br>
    このオプションは特別に 486DLC/486DRX 用にデザインされたマザーボードで
    のみ使用可能です。これらのマザーボードでは正しく完全にバスマスタリングが
    実装されており、キャッシュのコヒーレンシーがサポートされています。
    (あまり出回っていません。)このオプションは本物の 486 と同様に、
    バスの hold リクエスト時にフラッシュすることなく、キャッシュを
    完全に利用します。
</ul>
<p>
これら 2つが両方とも指定されていない場合、chip は BIOS の設定のまま
動作します。ほとんどの BIOS はキャッシュオプションを指定しません。
これは確実に動作する安全策ではありますが、パフォーマンスは最低となります。
もし、486DLC/486DRX マザーボードや DLC/DRX タイプの BIOS ならば、
自動的にパフォーマンスが良くなるような設定になっているはずです。
<p>
これらのオプションは試してみる価値はあります。もしマザーボードが指定されたオプションを
サポートしていない場合、ブート後すぐにシステムは動作しなくなります。
そうなった場合は、カーネルの最適化を弱めればいいだけです。
(もちろん、最適化していないカーネルを上書きしてはいけません。
新しいカーネルがブートしなかったときに必要になります！)

<ENTRY>thinkpad IBM Thinkpad 上での NetBSD/i386
NetBSD-1.3.3 まででは, 少なくとも Thinkpad 560 (おそらくその他のいくつかのモデルでも) では
カーネルのコンフィギュレーションファイルに次の 3行を加える必要があります。
<pre>	options PCIC_ISA_INTR_ALLOC_MASK=0x71ff
	options PCIC_ISA_ALLOC_IOBASE=0x2a0
	options PCIC_ISA_ALLOC_IOSIZE=0x060
</pre>
Allen D. Ball 
&lt;ball@impression-technology.com&gt; の Thinkpad 560E では、次のような変形が用いられています。
<pre>	options	PCIC_ISA_INTR_ALLOC_MASK=0x0e10
	options PCIC_ISA_ALLOC_IOBASE=0x400
	options PCIC_ISA_ALLOC_IOSIZE=0xbff
</pre>

1.3 の場合、 <tt>sb</tt> の行を <tt>irq 5</tt> ではなく、<tt>irq 7</tt>を使うように
変更する必要があります。
<pre>	sb0     at isa? port 0x220 irq 7 drq 1 drq2 5
</pre>
もし、apm を使用したい場合には、
<a href="http://www.NetBSD.org/cgi-bin/query-pr-single.pl?number=6279">
PR port-i386/6279</a>も参照した方が良いでしょう。

<ENTRY>vid_mem_conflict "setting tty flags" の直後にモニターが DPMS modeに落ちてしまうのですが
少なくとも一人の人が、カーネルによってビデオカードが正しくプローブされないと
報告しています。具体的には "setting tty flags" が表示された後、スクリーンが
暗くなり、モニターがパワーセーブモードになってしまうという現象です。
報告された原因はいくつかのビデオカードが DOS でいうところの COM4 と
同じ I/O メモリーを使用していることでした。この理由により、
NetBSD の com3 (これは DOS の COM4 にあたります) は GENERIC カーネルで
有効になっていません。

<ENTRY>pcmcia_modem_flow_control PCMCIA モデムが動かない
もし、あなたのお持ちの PCMCIA モデムが動かないようでしたら、
com(4) デバイスをハードウェアフローコントロールモードで使用しているか
どうかを確認して下さい。
多くの PCMCIA モデムはハードウェアフローコントロールを用いている時だけ動きます。

<SECTION>X Window System の実行

<ENTRY>x_needs_insecure_kernel X が INSECURE なカーネルか、シングルユーザーモードでしか起動しない
'<tt>options INSECURE</tt> が指定されていない場合、NetBSD は /dev/mem への
直接アクセスを禁止します。もしもあなたのビデオカードが linear memory access が
必要であったり、恩恵を受けることが出来るのならば、aperture ドライバ
<CURRENTSRC>xsrc/xc/programs/Xserver/hw/xfree86/etc/apNetBSD.shar
をインストールするべきでしょう。
これは、たとえ kernel の secure レベルが 0 より大きくても、X サーバーが
VGA のフレームバッファに直接アクセスすることを可能にします。
新しいディレクトリを作り、apNetBSD.shar をそこにコピーして、
'sh apNetBSD.shar' を実行して下さい。そして、その結果作られる
README をお読み下さい。

<ENTRY>x_and_ps2_mouse X が PS/2 mouse を認識しない
1.3.3 までのデフォルトの NetBSD/i386 GENERIC カーネルには PS/2 マウスのサポートが
含まれていません。PS/2 サポートを有効にするためには <a
href="../../Documentation/kernel/#how_to_build_a_kernel">カーネルの
再コンパイル</a>が必要となります。
上記の説明にしたがってステージ 4 の &lt;MYCONF&gt;編集の際に次の行を探し
先頭の '#' を取り除いてカーネルを作成して下さい。
<pre>
   '#pms0    at pckbd? irq 12'
</pre>
これにより、ブート時にブートメッセージ中に 'pms0 at pc0' または
'pms0 at vt0' という表示が含まれるようになります。<p>
XFree86 のセットアップを行なう時には、マウスデバイスとして 'pms0' を
プロトコルとして 'BusMouse' を選択して下さい。

<SECTION>その他の NetBSD/i386 FAQs

<ENTRY>netscape NetBSD/i386 で Netscape は使えますか
<a href="../../Documentation/software/packages.html">NetBSD パッケージコレクション</a>には
次の 3つの 'Netscape'ブラウザが含まれています。
<p>
<ul>
<li><PKGSRC>www/communicator - 完全な email までを含む Netscape commnicator (linux ライブラリーが必要です)
<li><PKGSRC>www/navigator - スタンドアロンな Navigator ブラウザー(linux ライブラリーが必要です)
<li><PKGSRC>www/mozilla - Free なバージョンの Netscape ブラウザー
</ul>
<p>
communicator と navigator パッケージは mozilla よりも高速でより
多くの機能がありますが、/emul/linux 以下に linux ライブラリーが
必要です(compat_linux(8) を参照のこと) 。Linux ライブラリーは
pkgsrc 中の emulators/<PKGSRC>emulators/suse_linux から入手できます。

<ENTRY>quake2 NetBSD 上での GNU/LINUX 用の Quake II の実行
すでに、<a href="">NetBSD i386</a>が動いていることを仮定します。
また、<a
href="../../Documentation/kernel/#how_to_build_a_kernel">
カーネルの再構築</a> の知識も必要です。
この方法は NetBSD 1.4,
<a href="http://www.idsoftware.com/quake2/">Quake II</a>
バージョン 3.20 と NetBSD の <a
href="../../Documentation/software/packages.html">パッケージ</a>セット中の
suse_* v6.1 <PKGSRC>emulators を基にしています。

<p>他の (より新しい) バージョンでもおそらく同じように動くことでしょう。</p>

<hr>

<p>始める前の注意点:</p>
<ul>
  <li>エミュレーション用のバイナリと Quake II ゲーム本体のために
      かなりのディスク容量が必要です。</li>
  <li>おそらく全てを root としてインストールする必要があります。
      これは、あなたのシステム全体とセキュリティを suse_* と ゲームの
      作者に委ねることを意味します。多くの個人で使用している場合には
      それほどの問題にならないかも知れませんが、全てはあなたの判断に
      委ねられます。
      私個人としては、これらの作者を信じない理由はありませんが、
      あなたのシステムが複雑であればあるほど、またコンポーネントを
      無条件で信じれば信じるほど、危険は大きくなることに注意してください。</li>
  <li>私が 8-bit モードの X サーバーで試したところ、Quake II がきちんと
      動作したグラフィックモードは ``ref_softx'' だけでした。
      OpenGL は``glide'' なしではうまくいかないみたいですが、
      私が持っているカード(STB Nitro 3D)では glide はサポートされていません。
      Direct vidoe は動作するようですが、必要なライブラリを
      私は持っていません。
      (これは結局、まずは X Window System の設定が<strong>必要</strong>と
       いうことになります。)
      ゲーム自体は 24-bit X でも動作しますが、グラフィックがおかしくなります。
      Quake II は標準サイズのウインドウを使用しますが、水平方向に 1/2 に
      押し縮められた状態にグラフィックがなってしまいます。この時、
      画面の右半分は真っ黒になってしまいます。</li>
  <li>ドキュメントによれば、Quake II を任意のユーザーが実行できるように
      設定できることになっています。
      しかしながら私はゲームを root で<strong>しか</strong>
      実行できませんでした。
  <li>多くの人は Quake II サーバを NetBSD で実行することに成功しています。
      しかし、私はネットワークモードでしか<strong>実行</strong>できていません。
      何が問題なのかは不明です。</li>
</ul>

<p>以上で全てです。あとは Quake II 付属の使用説明書を良く読んで下さい。</p>

<hr>

<ol>

  <li>もしも、NetBSD 1.4 の GENERIC カーネルを使用して<strong>いない</strong>
      ならば、カーネルコンフィギュレーションファイル注で COMPAT_LINUX オプションを
      有効にして、カーネルを作り直し、リブートする必要があるかもしれません。</li>

  <li>あらかじめ、<a
      href="http://www.linux.org/">GNU/LINUX</a>-compatibility package
      をインストールしておく必要があります。
      <em>注意: The linux_* packages は、必要なものを含んでいるわけでは
          <strong>ありません</strong>。でも、GNU/LINUX 版の BASH を
          パッケージから入れておきたいと思うはずです。
          (エミュレーションの動作形態として、エミュレーション中に動作する
           <strong>いくつかの</strong> shell を用意しておくことは
           便利なときがあります。でも、かならず用意しておく必要が
           あるわけでは<strong>ありません</strong>)</li>

  <li>配布 CD を mount(8) します。</li>
  <li>CD の ルートディレクトリに移動します。</li>
  <li>sh(1) を用いて <tt>/bin/sh setup</tt> を実行します。 </li>

  <li>setup の途中で、``rpm'' についてたずねられる場面があります。
      rpm とは Red-Hat Package Manager の事で、これは NetBSD パッケージとして
      利用可能です。(rpm はもともと GNU/LINUX 用のコマンドです。)
      ところが、私がそれを使用するように指定したところ、setup スクリプトは
      利用しようとしませんでした。
      でもあわてないでください。
      私は単にデフォルトを選びました。
      こうすると、setup は cpio(1) を用います。
      rpm を使わないならば、setup は cpio の存在する場所を尋ねてきます。
      NetBSD 1.4 では cpio は ``/usr/bin/cpio'' にあります。</li>

  <li>その他の点ではすべてがスムーズに進むはずです。
      CD は setup の最中に何度もスタートストップを繰り返すかもしれません。(私はそうでした)
      でも、これは問題ではありません。
      CD を見てみると、CD-ROM にはトラックが分断されて記録されているようなので
      マスター CD-ROM の作成に何らかの細工がされているのだと考えています。</li>

</ol>

<hr>

<p>助言と問題解決のヒント</p>

<ul>
  <li>Do you dislike having visible ``window decoration'' (borders
      and whatnot)?
      ../quake2/config.cfg ファイルを見てください。
      horizontal offset(デフォルト値は 3) と vertical offset (22) という
      2つのオプションがあるはずです。
      これらを 0 に設定するとタイトルバーと境界線はなくなります。
      スクリーンの解像度と同じ解像度でゲームを実行する場合には、
      こうしておくと良いでしょう。</li>

  <li>このゲームは GNU/LINUX 用のものなので、Quake II を GNU/LINUX 
      ディレクトリーに移動したくなるかもしれません。
      (もし、setup スクリプトを GNU/LINUX BASH で実行していれば
       自動的にこうなりますが、NetBSD の sh を用いていれば、
       Quake II は /usr/local/games にインストールされます。)</li>

  <li>Quake II が ``pics/colormap.pcx'' ファイルがないというような
      エラーで実行できない場合、
      root で実行するのを<strong>やめて</strong>みてください。
      root 以外が実行できるようにできるかもしれませんが、
      一番単純なのは ``su root'' をしてから、ゲームを実行してみることです。</li>
</ul>

<ENTRY>windows_refund Windows を使わないのですが、払い戻しが受けられますか
いくつかの PC システムは Microsoft Windows がプレインストールされた
状態でしか手に入れることが出来ません。このようなシステムの価格には
Windows ライセンスの値段が含まれています。もし、あなたが Windows を
使用したくないのならば、Microsoft から払い戻しを受ける権利があるかも
知れません。詳しくは<a
href="http://www.wired.com/news/news/technology/story/17442.html">Wired
の記事</a>, や Linux mall の <a href="http://www.linuxmall.com/refund/">Windows
refund center</a> を御覧下さい。
<p>
もっとも良い方法は Windows を完全に含まない PC の再販ができる業者を探し、
支援する事でしょう。

<ENTRY>kgdb シリアルラインを用いた NetBSD のカーネルのデバッグ法
コンフィグファイルに次の内容を加えてカーネルをコンパイルします。:
<pre>	makeoptions     DEBUG="-g"
	options         KGDB
	options         KGDBRATE=38400
	options         KGDBADDR=0x2f8</pre>
 
これは、他の計算機の gdb(1) と2番めのシリアルポートを
38400 bps で用いて通信するということを意味します。
ヌルモデムケーブルをシリアルポートに接続し、もう一方を別のマシン(ソースがあり、
カーネルをコンパイルしたマシンです)に接続すれば、カーネルを
<pre>	<b>boot netbsd -d</b></pre>
としてブートすることによりデバッグを始めることができます。

もう一方のマシンで、ヌルモデムケーブルが3番目のシリアルポートに
接続されているとすると次のようになります。
<pre>	% <b>cd &lt;your_compile_dir&gt;</b>
	% <b>gdb</b>
	(gdb) <b>set remotebaud 38400</b>
	(gdb) <b>set remotebreak</b>
	(gdb) <b>target remote /dev/tty02</b></pre>
接続が確立されれば、通常と同様に gdb を使うことができます。

</LIST>

<a href="">Up to <em>NetBSD/i386 Port Page</em></a>
<hr>

<DOCLINK>

<hr>
<address>
  <small>
  <a href="../../Misc/feedback.html">(Contact us)</a>
  $NetBSD: faq.list,v 1.39 2000/09/07 18:02:18 dent Exp $<br>
  <a href="/Misc/disclaimer.html">Copyright &copy;
    1996, 1997, 1998, 1999, 2000
    The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
