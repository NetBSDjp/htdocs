<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<!-- Copyright (c) 1994-2001
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<link rev="made" href="mailto:www@JP.NetBSD.ORG">
<title>NetBSD/sgimips: Frequently Asked Questions</title>
</head>
<body bgcolor="#ffffff" text="#000000" link="#2020cc" vlink="#700080">

<h1>NetBSD/sgimips よくある質問</h1>

<LIST>

<h2>他の情報源</h2>

<ul>
<li><a href="../../Documentation/network/netboot">Diskless NetBSD HOW-TO</a>
<li><a href="../../Documentation/Hardware/Misc/serial.html">NetBSD
シリアルポート入門</a>
<li> <a href="http://www.reputable.com/indytech.html">Indy tech</a>
     サイトには、 SGI Indy ハードウェアに関する多くの情報があります。
</ul>


<SECTION>全般的な質問

<ENTRY>serialconsole Indy のシリアルコンソールに関して知っておく価値のある事柄
この情報は他の機種にも適用できるかもしれないことに留意しておいてください。
マシンをシリアルコンソールでブートできるようにするため、
マシンを立ち上げるときはキーボードを外しておいてください。
シリアルコンソールは、デフォルトでは serial #1 で、 9600、 8N1 で動作します。
<p>

PROM モニターで "<tt>setenv console d</tt>" とすることでコンソールを
serial #1 に、 "<tt>setenv console d2</tt>" とすることで serial #2
にすることもできます (デフォルトは "<tt>g</tt>" です) 。また、
コンソールの速度は "<tt>setenv dbaud &lt;bps&gt;</tt>" で設定できます。
これらの PROM 変数を設定した後は、 "<tt>init</tt>" するか、マシンを
リブートする必要があります。
<p>

Irix をコンソールからブートした場合、シリアルコンソール上でのログインが
できなくなります。 /etc/inittab を編集して下記の行を追加することで、
ログインできるようになります。
<p>

<pre>
st:23:respawn:/sbin/getty systty co_9600        # serial console - HF
</pre>

このあと、忘れずに "<tt>init q</tt>" して inittab を再読み込みしてください。
<p>

シリアルポートのピン配置は SPARC システムのシリアルポートと同じですので、
ハードウェアハンドシェーキング線を使わない用途に限れば、 Macintosh
のシリアルケーブルはシリアルコンソール用のケーブルとしてしっかり使えます。
詳細については、 <a href="../../Documentation/Hardware/Misc/serial.html">NetBSD
シリアルポート入門</a>を参照してください。


<ENTRY>bootstrapping NetBSD/sgimips のブートの方法は?
<ul>
<li> このポートのブートには、 SGI の ARCS firmware を使ってカーネルを
     ネットブートすることが必要です。ネットブートの設定についての詳細は
     <a href="../../Documentation/network/netboot/">Diskless NetBSD HOW-TO</a>
     を参照してください。おおまかな手順は以下のとおりです:
     <p>

     <ol>
     <li> etc.tgz と base.tgz を、たとえば /home/indy/root 以下に展開します。
          展開した root/dev ディレクトリーで "<tt>sh MAKEDEV all</tt>" を実行します。
     <li> マシンの PROM に入り、 MAC アドレスを調べます。調べるには、
          "<tt>printenv eaddr</tt>" とします。
     <li> DHCP を設定します。以下のような内容を /etc/dhcpd.conf に書きます:

<pre>
ddns-update-style       none;
subnet 10.0.0.0 netmask 255.255.255.0 {			# 適切な値に置き換え
	host indy {
		hardware ethernet 08:00:69:09:93:78;    # そのマシンの MAC アドレスに置き換え
		fixed-address 10.0.0.15;                # 適切な値に置き換え
		#filename "/netbsd";                    # XXX これは *設定しない* !
		option root-path "/home/indy/root";
		server-name="10.0.0.3";
	}
}
</pre>

     "<tt>filename</tt>" は設定できないことに注意してください。
     設定してしまうと、それ以外の値を、後述する PROM の <tt>boot</tt>
     コマンドで、カーネル名として指定できなくなります。
     <p>

     <li> 再度マシンの PROM に入り、 IP アドレスが正しく設定されているか
          確認してください:

<pre>
>> <b>printenv netaddr</b>
netaddr=1.2.3.4
>> <b>setenv netaddr 10.0.0.15</b>
>> <b>printenv netaddr</b>
netaddr=10.0.0.15
</pre>

     <li> /etc/inetd.conf で tftp が使えるようになっていることを確認し、
          それから適切なカーネル (たとえば netbsd.IP22 とする) を /tftpboot に置きます。
          <p>

     <li> PROM に、ネットブートして "netbsd.IP22" カーネルをロードするよう
          指示する:

<pre>
>> <b>boot -f bootp():/netbsd.IP22</b>
Setting $netaddr to 10.0.0.15 (from server 10.0.0.3)
Obtaining /netbsd-IP22 from server 10.0.0.3
...
</pre>

     <li> ルートデバイスを尋ねられたら、選択肢を調べるために "<tt>?</tt>"
          と入力します。たとえば "<tt>sq0</tt>" は Indy のイーサネットです。
     <li> ダンプデバイスは、単に RETURN を押します
     <li> ブート用のディスクを用意していなければ、
          ルートファイルシステムはきっと nfs 経由のものでしょうから、
          ルートデバイスとしては "<tt>nfs</tt>" と答えます。
     </ol>

     問題が起きた場合は、 tcpdump(8) か pgksrc/net/ethereal を使って
     ネットワークトラフィックのデバッグをしてください。 PROM コマンドの
     より詳しい説明は、 Irix
     <a href="http://www.mcsr.olemiss.edu/cgi-bin/man-cgi?prom">prom</a>
     マニュアルページを見てください。
     <p>

<li> それから、 NetBSD の FFS とディスクラベルを持つセカンドハードディスク
     を用意します。さらに、セカンドディスク上の root/swap を使うよう
     カーネルに指示します。ただし、現在、 firmware は FFS ファイルシステムから
     カーネルをブートすることができません。今のところは、ネット経由で
     ブートする必要があります。
</ul>
<p>

ブートを始めるには以下のファイルが必要です:
<p>

<dl compact>
<dt>スナップショット:
<dd><a href="ftp://ftp.netbsd.org/pub/NetBSD/arch/sgimips/snapshot/">ftp://ftp.netbsd.org/pub/NetBSD/arch/sgimips/snapshot/</a>
<dt>カーネル:
<dd><a href="ftp://ftp.netbsd.org/pub/NetBSD/arch/sgimips/netbsd.ip32">ftp://ftp.netbsd.org/pub/NetBSD/arch/sgimips/netbsd.ip32</a>
</dl>

<ENTRY>crosscompiling sgimips カーネルを i386 でクロスコンパイルする方法は?

NetBSD-current/i386 システム上で sgimips 用の NetBSD-current カーネルを
クロスコンパイルする方法を示します。 NetBSD リリース版を使っている場合は、
この項目の末尾を見てください。でははじめましょう:
<p>

<ol>
<li> cross-mipseb-netbsd-1.3.0.0 バイナリーパッケージをインストールするか
     これを pkgsrc/cross/mipseb-netbsd から構築します ("eb" は
     "endian: big" を表します) 。
     <p>

<pre>
# cd /usr/pkgsrc/cross/mipseb-netbsd
# make install
</pre>

<li> まず、クロスコンパイラーへのパスが通っているか確認します。これは
     /usr/pkg/cross/mipseb-netbsd/bin にインストールされます。 (また、
     このあとネイティブコードのコンパイルをしたい場合は、これのせいで混乱
     しないようにしてください 8-):
     <p>

<pre>
# PATH=/usr/pkg/cross/mipseb-netbsd/bin:$PATH
# export PATH
</pre>

<li> MACHINE 環境変数値を "sgimips" に設定します:
     <p>

<pre>
# MACHINE=sgimips
# export MACHINE
</pre>

<li> MAHINE_ARCH 環境変数値を "mipseb" に設定します:
     <p>
<pre>
# MACHINE_ARCH=mipseb
# export MACHINE_ARCH
</pre>

<li> 例によって、カーネルコンフィグディレクトリーに移動してコンフィグファイル
     を用意し、 config(8) を実行します:
     <p>

<pre>
# cd /usr/src/sys/arch/sgimips/conf
# cp TEAL MYMACHINE
# vi MYMACHINE
# config MYMACHINE
</pre>

<li> 例によって、コンパイルディレクトリーに移動し、コンパイルを実行します:
     <p>

<pre>
# cd ../compile/MYMACHINE
# make depend
# make
</pre>

<li> できあがったカーネルを /tftpboot ディレクトリー、あるいは
     あなた好みのどこかに置きます:
     <p>
</ol>

上記の説明は -current システム上で -current ソースを使う場合はうまく
いきます。リリースシステム (1.5.x) では、より新しい config(8) コマンドが
必要なため、うまくいきません。リリース版をお使いの場合は、別ディレクトリー
(たとえば /home/i386-current) に -current/i386 システムを作り、
そちらを chroot 環境で使うという方法があります。
<p>


<ENTRY>resetting-eaddr IP22 その他で $eaddr をリセットする方法は ?
ここに示すのは、少なくとも Indy と、おそらく HPC3 を持つ他のマシンでも
使える、イーサネットアドレスの設定方法です。
<p>

一切の責任を持たないので…以下省略。
<p>

PROM プロンプトで:
<p>

<pre>dump -w -x 0xbfbe04e8</pre>
<p>

この出力の妥当性チェックとして、 'ec0: bad ethernet address'
エラーメッセージで示されるアドレスと一致するかどうか調べます。
もし一致していなければ、なにも上書きすべきではないでしょう。
<p>

<pre>fill -w -v 0xGG 0xbfbe04e8
fill -w -v 0xHH 0xbfbe04ec
fill -w -v 0xII 0xbfbe04f0
fill -w -v 0xJJ 0xbfbe04f4
fill -w -v 0xKK 0xbfbe04f8
fill -w -v 0xLL 0xbfbe04fc</pre>
<p>

ここで、 GG:HH:II:JJ:KK:LL が、予定しているイーサネットアドレスになるように
します。マシンに附属してきたアドレスを使うのがよいでしょう。
わからなければマシンの背面を調べてください。
<p>

電源を落とし、一分間待ってから電源を入れます。これで、 $eaddr 以外の
すべての変数は、 resetenv コマンドを使ったときのようにリセットされています。

<ENTRY>prom-tftp-client-failing PROM tftp クライアントがデフォルトの設定の NetBSD の tftpd との組み合わせでうまく動きません

SGI マシンの PROM tftp クライアントは、デフォルトの設定の NetBSD の tftpd
との組み合わせで、うまく動作しないことがあります。そのマシンの PROM が
符合ビットの立ったポート番号に対応していないせいかもしれません。
これに対する次善策は、匿名コネクション用のポート番号の上限を
32767 にすることです。次のように調整すると解決するはずです:
<p>
<tt># sysctl -w net.inet.ip.anonportmin=20000<br>
# sysctl -w net.inet.ip.anonportmax=32767</tt>



<ENTRY>prom-issues このほかにありそうな PROM の問題

PROM バージョンやインストールされた OS (SASH) バージョンによる、
いくつかの問題があります:
<p>

<ol>
<li> 古いバージョンの SASH には、メモリーマップを誤って報告するという
     問題があります。ブート  (copyright message 以前でも) 時に、カーネルが
     UVM 絡みのメッセージとともに panic する場合は、 sash を介さずに
     PROM から直接カーネルをブートしてみてください  (IRIX 6.x
     にアップグレード前の (5.3 が動作している) I2
     にもこの問題があります) 。
     <p>

<li> もうひとつの古い PROM の問題 -- 古い PROM は ELF を扱えないため、
     ECOFF カーネルが必要かもしれません。これの回避策は sash (IRIX 5.x
     においてでも ELF を理解するようです) を使うことですが、
     問題 #1 を見てください。
     <p>
</ol>

</LIST>

<a href="./">Up to <em>NetBSD/sgimips Port Page</em></a>
<hr>

<DOCLINK>

<hr>
<address>
  <small>
  (連絡先 - <a href="../../Misc/feedback.html">英語</a>,
       <a href="mailto:www@JP.NetBSD.ORG">日本語:
       www@JP.NetBSD.ORG</a>)<br>
  $NetBSD: faq.list,v 1.25 2002/12/21 22:45:23 soren Exp $<br>
  <a href="../../Misc/disclaimer.html">Copyright &copy; 1994-2001
  The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
