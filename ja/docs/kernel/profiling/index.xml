<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE webpage
  PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
         "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-docs-kernel-profiling-index">
  <config param="desc" value=""/>
  <config param="cvstag" 
    value="$NetBSD: index.xml,v 1.1 2007/06/09 11:33:48 dsieger Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: index.xml,v 1.1 2007/06/09 11:33:48 dsieger Exp   -->
  <config param="rcsdate" value="$Date: 2007/06/09 11:33:48 $"/>
<head>

    <!-- Copyright (c) 1994-2005
    The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->

    <title>NetBSD ドキュメンテーション: カーネルプロファイリング HOWTO</title>
  </head>


  <para>この文章にはどのようにカーネルプロファイリングが動作し、
    どう使うのかが書かれています。このドキュメントは Matthias Drochner
    <email>drochner@zel459.zel.kfa-juelich.de</email> の筆によります。</para>

  <sect1 role="toc">
    <sect2 id="kern-prof">
      <title>カーネルプロファイリング</title>

      <sect3 id="how-does-it-work">
      <title>どのように動作するのか</title>


      <para>プロファイル済みのコードの振る舞いに関する、
	2種類のデータが個別に記録されます:
	全関数の呼び出し頻度 (呼び出しグラフプロファイリング)
	と各関数の処理にかかった時間です。
	これらは、適当にサンプルされた時に関数内にあるプログラムカウンターの確率によって概算され、
	その確率は、調べている関数が実行中に起こる、
	プロファイリングタイマーの割り込み率によって逆に概算されます。
	&man.gprof.1; というユーティリティーを使って、データを解釈します。
	しかし、二つのデータの相関性がないため、いくつか制限が出てきます。
	これは、manページのBUGSの章に書かれています。</para>

      <para>カーネルのプロファイリングとユーザープログラムのプロファイリングは、
	よく似ています;
	プロファイリングデータを処理する方法と、
	コントロールする方法が若干違う程度です。</para>

      <para>カーネルプロファイリングに関係するデータは、
	グローバル構造体の <emphasis
	  role="bold"><code>_gmonparam</code></emphasis> 内にあります。
	この構造体は、(
	<emphasis
	  role="bold"><filename>kern/subr_prof.c</filename></emphasis> 中の) <emphasis
	  role="bold"><code>kmstartup()</code></emphasis> により、
	システムが初期化する際に初期化されます。
	ユーザーレベルのコントロールプログラムである <emphasis
	  role="bold">&man.kgmon.8;</emphasis> は、
	コントロールとデータアクセスのために
	<emphasis role="bold">&man.sysctl.3;</emphasis> を呼び出し、
	一部 <emphasis
	  role="bold">&man.kvm.3;</emphasis> アクセスを呼び出しています
	(動作しているカーネルがプロファイルされる標準的な場合もです!) 。</para>
    </sect3>

      <sect3 id="call-graph-recording">
	<title>呼び出しグラフの記録</title>

	<para>プロファイリングのフラグ (<emphasis
	    role="bold"><code>-pg</code></emphasis>) により、
	  コンパイラーは関数のエントリーごとに <emphasis
	    role="bold"><code>mcount()</code></emphasis>
	  を呼び出します。
	  これは、マシン独自の橋渡しによって、
	  <emphasis
	    role="bold"><code>_mcount(frompc,selfpc)</code></emphasis> へ送られます。
	  <emphasis
	    role="bold"><code>_mcount(frompc,selfpc)</code></emphasis> は
	  <emphasis
	    role="bold"><filename>sys/lib/libkern/mcount.c</filename></emphasis> で実装されます。
	  <emphasis role="bold"><code>frompc</code></emphasis>
	  は関数を呼び出すアドレスで、 <emphasis
	    role="bold"><code>selfpc</code></emphasis>
	  は呼ばれる関数自体のアドレスです。</para>

	<para>プロファイル中に遭遇する全ての (<emphasis
	    role="bold"><code>frompc</code></emphasis>, <emphasis
	    role="bold"><code>selfpc</code></emphasis>)
	  用に、 <emphasis
	    role="bold"><code>struct tostruct</code></emphasis>
	  は <emphasis
	    role="bold"><code>_gmonparam.tos</code></emphasis> が示す配列から割り当てられます。
	  エントリーは最初に使用する順番で、
	  始めから終わりまで単純に割り当てられます。 <emphasis
	    role="bold"><code>kmstartup()</code></emphasis> 内のあるマジックによって、
	  カーネルのテキストサイズから配列のサイズが決められます --
	  一種の"経験則" のようです。</para>

	<para><emphasis role="bold"><code>struct tostruct</code></emphasis> 
	  のエントリーは、ヒストグラムカウンターと一緒に、呼ばれた関数
	  (<emphasis role="bold"><code>selfpc</code></emphasis>)
	  のアドレスを持っています。
	  同じ呼び出しアドレスにあるエントリーは、リンクした一覧を形成します。
	  一覧のヘッド (つまり、特定の呼び出しアドレスに属する
	  <emphasis role="bold"><code>_gmonparam.tos</code></emphasis>
	  配列内の最初のエントリーの見出し) は、
	  <emphasis role="bold"><code>_gmonparam.froms</code></emphasis>
	  という二つ目のデータ配列にあります。この
	  <emphasis role="bold"><code>_gmonparam.froms</code></emphasis> は、
	  ある値によって分割された呼び出しアドレス
	  (<emphasis role="bold"><code>frompc</code></emphasis>)
	  により、見出しを付けられます (ある値は、コード内の二つの呼び出しの最短距離
	  より長くなることはありません - <emphasis 
	    role="bold"><filename>sys/sys/gmon.h</filename></emphasis> にあるコメントを見てください) 。</para>

	<para>標準的な関数呼び出しには、それぞれの
	  <emphasis role="bold"><code>frompc</code></emphasis> に対して
	  <emphasis role="bold"><code>selfpc</code></emphasis> がひとつしかないことに注意してください。
	  その結果、典型的な一覧が一つのメンバーのみで構成されるようになります。</para>
      </sect3>

      <sect3 id="statistical-profiling">
	<title>統計的なプロファイリング</title>

	<para>プロファイリングが始まると、プロファイリングタイマーの割り込みが
	  セットされ、 <emphasis
	    role="bold"><code>statclock()</code></emphasis> を呼び出します (
	  <emphasis
	    role="bold"><filename>sys/kern/kern_clock.c</filename></emphasis> を参照してください) 。
	  プロファイリングタイマーは、関数への干渉がシステムのクロックと
	  同期して動かなくならないように、通常のシステムクロックから独立した
	  タイマーであるべきです。 <emphasis
	    role="bold"><code>statclock()</code></emphasis> はユーザープログラムでも、
	  カーネルプロファイリングでも使われます。</para>

	<para>ある値で再分割されていれば、
	  割り込み時にプログラムカウンターは見出しとして使われて、
	  ヒストグラムの <emphasis
	    role="bold"><code>_gmonparam.kcount</code></emphasis>
	  に記録され、該当するセルの値が増えます。</para>
      </sect3>

      <sect3 id="how-to-use-it">
	<title>使い方</title>


	<itemizedlist>
	  <listitem>プロファイリングカーネルを構築し、ブートします。
	    これには、 <emphasis role="bold"><code>-p</code></emphasis> フラグを用いて
	    <emphasis role="bold">&man.config.8;</emphasis> します。
	    用いなければ、特別なことはありません。プロファイリングカーネルは
	    以下のようなメッセージを自動設定後、ルートファイルシステムが
	    マウントされる前に出力します。
	    <screen>Profiling kernel, textsize=1611256 [f0100000..f02895f8]</screen>
	    </listitem>
	  <listitem><emphasis
	      role="bold"><code>/netbsd</code></emphasis> が現在動作しているカーネルであるか
	    確認してください。もし違えば、下の
	    <emphasis role="bold">&man.kgmon.8;</emphasis> の呼び出しで、 <emphasis
	      role="bold"><code>-N</code></emphasis>
	    オプションを使ってください。</listitem>
	  <listitem><emphasis
	      role="bold"><code>kgmon -b</code></emphasis> でプロファイリングを開始します。</listitem>
	  <listitem>いくつかアプリケーションを起動して、システムの中でも調べたい部分に
	    負担をかけます。</listitem>
	  <listitem><emphasis
	      role="bold"><code>kgmon -h</code></emphasis> でプロファイリングを止めます。</listitem>
	  <listitem><emphasis 
	      role="bold"><code>kgmon -p</code></emphasis> を起動して、収集したデータを
	    <emphasis
	      role="bold"><filename>gmon.out</filename></emphasis> というファイルに書き込みます。</listitem>
	  <listitem>他のものを計測する前に、 <emphasis
	      role="bold"><code>kgmon -r</code></emphasis>
	    でカーネル内のプロファイリングデータのバッファーをリセットします。</listitem>
	  <listitem><emphasis role="bold"><filename>gmon.out</filename></emphasis>
	    から人間が判読できる解釈を入手するため、
	    以下のコマンドを実行します。
	    <screen>% gprof /netbsd gmon.out &gt; gprof.txt</screen></listitem>
	  <listitem>データの解釈をします。</listitem>
	</itemizedlist>
      </sect3>
    </sect2>
  </sect1>

  <parentsec url="../" text="NetBSD ドキュメンテーション: カーネル"/>

</webpage>
