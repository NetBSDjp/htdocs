<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE webpage
 PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
        "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-docs-network-pppoe-index">
<config param="desc" value="NetBSD ドキュメンテーション: PPPoE (DSL) 経由の接続手順"/>
<config param="cvstag" value="$NetBSD: index.xml,v 1.2 2010/02/15 20:47:34 hubertf Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: index.xml,v 1.2 2010/02/15 20:47:34 hubertf Exp   -->
<config param="rcsdate" value="$Date: 2010/02/15 20:47:34 $"/>
<head>
<!-- Copyright (c) 1994-2004
        The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<title>NetBSD ドキュメンテーション: PPPoE (DSL) 経由の接続手順</title>
</head>


<sect1 role="toc">

<sect2>
<title>PPPoE (DSL) 経由の接続手順</title>

<sect3 id="intro">
<title>はじめに</title>
<para>
この文書は、 PPPoE (DSL プロバイダーでよく使われています) 経由で
インターネットに接続するための簡単なセットアップについて説明します。
</para>

<para>
この文書が対象としているのは NetBSD 1.6 以降です。これより前のリリースには
カーネル PPPoE サポートが含まれません。古い NetBSD リリース版を使っている場合は、
pkgsrc から net/rp-pppoe パッケージをインストールするようおすすめします。
これにはすべてを設定してくれる <code>adsl-setup</code>
というコマンドが含まれています。
</para>

<para>
PPPoE は <emphasis role="bold">P</emphasis>oint-to-<emphasis role="bold">P</emphasis>oint <emphasis role="bold">P</emphasis>rotocol <emphasis role="bold">o</emphasis>ver
<emphasis role="bold">E</emphasis>thernet の略です。典型的な設定は、 DSL モデム (これは DSL 線経由で
<emphasis>Access Concentrator</emphasis> と呼ばれるプロバイダーのルーターと喋ります)
とあなたのマシンを通常のイーサネットでつなぐことです。このため、対 DSL
モデム専用のイーサネットインターフェースが必要です。このイーサネット
インターフェース上に PPP 接続が構築されます。
</para>

<para>
よく見るとこれは妙なことのように見えます。イーサネットで接続しているのです - 
プロバイダーはなぜその上層で IP を使わないのでしょう? いくつかのプロバイダーは、
(ケーブルモデム接続のように) DHCP で IP アドレスを割り振って、 IP を使っています。
ほとんどのプロバイダーは、そのようにはしていません。 PPPoE を使ったほうが、
プロバイダーにとっては若干楽になるからです。 PPPoE では妙に小さい MTU
を使っており、そのせいで、インターネット上の不適切に設定された防火壁の
向こうにいるシステムの多くとの通信ができなくなるため、ユーザーにとっては若干面倒になります。
回避策は<ulink url="#clamping">あとで</ulink>説明します。
</para>

<para>
以下の例では、対 DSL モデム用のイーサネットインターフェースとして
<emphasis>ne0</emphasis> を使います。もちろん、これ以外のインターフェースでも
使えます。
</para>
</sect3>


<sect3 id="check-kernel">
<title>カーネルの確認</title>
<para>
PPPoE を使うためには、カーネルが PPPoE をサポートしている必要があります。
そのことを確認するため、
<screen> ifconfig -C </screen>
を実行し、出力から "pppoe" を探します。もしなければ、カーネルコンフィグファイルに
<programlisting>
  pseudo-device pppoe
</programlisting>
を追加する必要があります。
</para>
</sect3>


<sect3 id="manual-test">
<title>手動で接続テストする</title>
<para>
マシンを自動接続するよう設定する前に、手動でテスト接続をすることを
おすすめします。うまくいかない場合、このテストは設定のデバッグのための
簡単な方法になります。
</para>
<para>
まず最初に、 pppoe インターフェース自体を作り、ダミーの IP アドレス (これは PPP
ネゴシエーションによって置き換えられます) を割り振ります。このインターフェース
はまだ準備できていないので、ここでは down させておきます。
</para>
<screen>
  ifconfig pppoe0 create
  ifconfig pppoe0 inet 0.0.0.0 0.0.0.1 down
</screen>

<para>
次に、この pppoe インターフェースを、 DSL モデムへの接続に使っている
イーサネットインターフェースに割り付けます。このインターフェースは UP
されている必要がありますが、 IP アドレスが振られている必要はありません。
</para>

<screen>
  ifconfig ne0 up
  pppoectl -e ne0 pppoe0
</screen>

<para>
ここで、認証データが必要になります。 windows のソフトウェアはよく悪さをしたり
プロバイダーが個別に対応する必要があったりするため、ほとんどのプロバイダーは、
Linux ユーザー向けにデータのフォーマット方法の資料を提供しています。
t-online を使っている場合は <ulink url="#t-online-isdn-vs-dsl">この傍注</ulink>
をご覧ください。以下のようなコマンドで認証データを入力します (特殊な文字は、
シェルが解釈しないように単引用符を使って保護する必要があることに注意) :
</para>


<screen>
  pppoectl pppoe0 myauthproto=pap 'myauthname=XXX' 'myauthsecret=YYY' hisauthproto=none
</screen>

<para>
ここで <code>XXX</code> はユーザー名、 <code>YYY</code> はパスワードです。
<code>hisauthproto=none</code> は、 PPP が通信相手に認証を要求すること
-多くのプロバイダーはこれを拒否します-を防ぎます。お使いのプロバイダーが CHAP
プロトコルに対応している場合は <code>myauthproto=chap</code> にすることもできます。
</para>

<para>
これで、最初の接続を試す準備ができました。設定が誤っている可能性があるため、
ここでは再試行を制限しておきます:
</para>

<screen>
  pppoectl pppoe0 max-auth-failure=1
</screen>

<para>
そしてインターフェースをアクティブにします:
</para>

<screen>
  ifconfig pppoe0 up
</screen>

<para>
何事も起こりません (詳細なデバッグメッセージを有効にはしていないので) 。すべて
順調であれば PPPoE セッションが接続され、そのことは以下のようにして
確認できます:
</para>

<screen>
  # pppoectl -d pppoe0
  pppoe0: state = session
          Session ID: 0x254f
          PADI retries: 0
          PADR retries: 0
</screen>

<para>
この出力例は動作している設定のものです。 PPPoE セッションが確立して、
それを使用中 (state = session) です。もし出力中に session state がなければ、
認証データが間違っている (上記参照) か、アクセスコンセントレーターが
応答しないかセッションを確立していないかで、この場合は PADI または PADR
再試行が起きるでしょう。これは、 DSL のセットアップがうまくできていないか、
サービス名を指定する (pppoectl で <code>-s</code> オプションを使う) 必要があるか、
または、アクセスコンセントレーター名を指定する (pppoectl で <code>-a</code>
オプションを使う) 必要があるということです。プロバイダーでは必要な事項を
文書化しているはずです。詳細は &man.pppoectl.8; を参照してください。
</para>

<para>
PPPoE セッションが張れると、 PPP の IP ネゴシエーションを確認することが
できるようになります:
</para>

<screen>
  # ifconfig pppoe0
  pppoe0: flags=8851&lt;UP,POINTOPOINT,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1492
          inet 117.80.111.85 -&gt; 118.5.113.169 netmask 0xff000000
</screen>

<para>
これは、ローカル (117.80.111.85) とリモート (118.5.113.169) の IP アドレスが
割り振られていて (もちろん、実際にはこの例とは異なる IP アドレスになります) 、
動作する接続です。この例のような表示にならない場合、 PPP 認証データが
間違っています。再確認のうえ、 pppoectl の設定を再度おこなうところから
やり直してください。
</para>
</sect3>


<sect3 id="permanent-setup">
<title>永続的な接続の設定</title>
<para>
動作確認は済んだので、マシンが自動で接続を行なうように
設定したくなるでしょう。
</para>
<para>
マシンのブート時に自動で接続するためには、
先ほどの手動設定で行なった手順をコード化して、スクリプトや設定ファイル内に
書いておく必要があります。
</para>
<para>
プロバイダーとの契約が<ulink url="#stay-connected">均一</ulink>料金体系ならば、
常時接続にすることになるでしょう。
</para>
<para>
接続時間に応じて料金を払うのであれば、<ulink url="#connect-on-demand">
オンデマンド</ulink>接続がよいでしょう。
</para>
<para>
ISP がネームサーバーの IP アドレスを提供するはずですが、
自分で <code>/etc/resolv.conf</code> に書いておくべきです。
詳細は &man.resolv.conf.5; および <ulink url="../index.html#configuration_files">Networking
FAQ</ulink> を参照してください。
</para>
</sect3>


<sect3 id="stay-connected">
<title>常時接続回線の設定</title>
<para>
この設定の目標は、できるかぎりの間、回線を確保しておくことと、
(なんらかの理由で) 切断された場合はすみやかに再接続することです。
これはデフォルトの操作モードです。
上記の手動のテストで使った認証データを用意して、ファイルに書きます:
</para>
<para>
以下の内容を <code>/etc/ifconfig.pppoe0</code> ファイルに書きます:
</para>

<screen>
create
# PPPoE インターフェースとして使われる物理インターフェースを up する
! /sbin/ifconfig ne0 up
# $int が ne0 をイーサネットインターフェースとして使うようにする
! /sbin/pppoectl -e ne0 $int
# 認証の設定
! /sbin/pppoectl $int myauthproto=pap 'myauthname=XXX' 'myauthsecret=YYY' hisauthproto=none
# PPPoE インターフェース自身の設定。ここで使うアドレスはいずれも、
# 私たちは面倒を見ず、リモート ppp で選ばれたものを意味する
# 特殊なもの。
0.0.0.0 0.0.0.1 up
</screen>

<para>
このファイルが root にしか読めないことを確認してください。
</para>
<para>
<code>/etc/ppp/ip-up</code> に以下の内容を書きます:
</para>

<screen>
#! /bin/sh
/sbin/route add default $5
</screen>

<para>
このファイルは root が実行可能にしておきます。
</para>
<para>
<code>/etc/ppp/ip-down</code> に以下の内容を書きます:
</para>

<screen>
#! /bin/sh
/sbin/route delete default $5
</screen>

<para>
このファイルも root が実行可能にしておきます。
</para>
<para>
最後に、次の一行を <code>/etc/rc.conf</code> に追加します:
</para>

<screen>
ifwatchd=YES
</screen>

<para>
これで完了です。 pppoe0 インターフェースに <code>link1</code> フラグがないので
可能な限り接続が確立されたままになり、また、接続が失われた場合は
すみやかに再構築されます。接続できた時はいつも
<code>/etc/ppp/ip-up</code> スクリプトが実行され、切れたときはいつも
<code>/etc/ppp/ip-down</code> が実行されます。さらに、これらのスクリプトは、
クリーンアップ (例えば、接続が切れたときに古い NAT コネクションを捨て、
再接続時に動的に新しい IP が振られる) や、
再接続したときの情報を必要とするサーバーへの通知
(たとえば、 named のフォワードやキャッシュ) に使うことができます。
</para>
<para>
システムが ifwatchd デーモン (これは ip-up と ip-down スクリプトを実行します)
をブートするのは、おそらくかなり遅い時期になることに注意してください。
PPPoE 接続は、ネットワーク起動の初期の、 ifconfig.pppoe0 ファイルが実行される
ころに確立されます。接続はすみやかにされますが、 <code>/etc/ppp/ip-up</code>
スクリプトはまだ実行されていません。
&man.ifwatchd.8; 起動時に、常時接続の場合は ip-up スクリプトが実行されます。
多くのネットワークデーモンはこの間に起動されますが、
デフォルトルートがないために外部への接続ができません。
これらのデーモンを ip-up スクリプトでキックするのはよい考えです
(そして、動的 IP アドレスを使った場合にこれらのデーモンの引き起こす問題の
ほとんどにも注意を払ってください) 。典型的な例としては、すべての NAT
コネクションを捨て、 named と ntpd を再起動するものです:
</para>

<screen>
#! /bin/sh
/sbin/route add default $5
/etc/rc.d/ntpd restart
/etc/rc.d/named restart
</screen>
</sect3>


<sect3 id="connect-on-demand">
<title>オンデマンド接続回線の設定</title>
<para>
この接続設定では、トラフィックが生じたときのみ PPPoE 接続を確立します。
あらかじめ設定したアイドル時間が経過すると自動的に接続を切ります。
</para>
<para>
常時接続との主な違いは以下のとおりです
</para>

<itemizedlist>
<listitem><para>pppoe0 インターフェースに <code>link1</code> フラグがある</para>
</listitem>
<listitem><para>idle timeout (以下の例では 60 秒) により、トラフィックがないまま
一定時間経過すると接続を切断する</para>
</listitem>
<listitem><para>ルーティングの設定。たとえ接続が確立されていない間であっても、
ルートパケットを pppoe0 インターフェースに向けておく必要があります。</para>
</listitem>
</itemizedlist>

<para>
以下の内容を <code>/etc/ifconfig.pppoe0</code> に書きます:
</para>

<screen>
create
# PPPoE インターフェースとして使われる物理インターフェースを up する
! /sbin/ifconfig ne0 up
# $int が ne0 をイーサネットインターフェースとして使うようにする
! /sbin/pppoectl -e ne0 $int
# 認証の設定
! /sbin/pppoectl $int idle-timeout=60 myauthproto=pap 'myauthname=XXX' 'myauthsecret=YYY' hisauthproto=none
# PPPoE インターフェース自身の設定。ここで使うアドレスはいずれも、
# 私たちは面倒を見ず、リモート ppp で選ばれたものを意味する
# 特殊なもの。
0.0.0.0 0.0.0.1 link1 up
! /sbin/route add default -iface 0.0.0.1
</screen>

<para>
この設定では、デフォルトルートは上記設定ファイルによるものが常に使われるので
ifwatchd を使う必要はありません。 IP アドレスの変更や接続の切断や再構築を
知る必要がある場合は、 ifwatchd を設定して <code>/etc/ppp/ip-up</code> と
<code>/etc/ppp/ip-down</code> を使うようにすることもできます。
例は、<ulink url="#stay-connected">常時接続</ulink>の場合を
参照してください (ただし、デフォルトルートを変えてはいけません) 。
</para>
</sect3>


<sect3 id="clamping">
<title>MSS の調節を伴う NAT の設定</title>
<para>
誤設定された防火壁の向こうにあるシステムは Path-MTU-Discovery を使おうと
しますが、その防火壁があらゆる ICMP メッセージをブロックしてしまいます。
これは不正な設定ですが、珍しいことではありません。通常、このような
(遠隔で、あなたの管理下にない) 状況をあなたが修正することはできません。
しかも、時にはこういったリモートシステムを利用 (そこからデータをダウンロード
したり、オンラインバンキングするなど) する必要があります。
</para>
<para>
上記の説明のように特に配慮されたシステム群以外では、大きなデータ塊を PPPoE
経由で接続しているシステムに送ることはできないでしょう。しかし、回避策
(いんちきとも言うかも) があります: 最初の TCP ハンドシェークにおいて、
小さいサイズの MSS (maximum segment size) オプションを送って、
大きなパケットを扱えないように見せかけるのです。
</para>
<para>
PPPoE 接続されたあなたのマシン側からのコネクションについては、 sysctl 変数
net.inet.tcp.mss_ifmtu を 1 に設定します。
つまり、
</para>

<screen>
# Obey interface MTUs when calculating MSS
net.inet.tcp.mss_ifmtu=1
</screen>

<para>
を <code>/etc/sysctl.conf</code> に追加します。 PPPoE ルーターの向こうのシステム側
からのコネクションについては、以下の <code>/etc/ipnat.conf</code> の例のようにして、
NAT ルールに mssclamp オプションを設定する必要があります:
</para>

<screen>
map pppoe0 192.168.1.0/24 -&gt; 0/32 portmap tcp/udp 44000:49999 mssclamp 1440
map pppoe0 192.168.1.0/24 -&gt; 0/32 mssclamp 1440
</screen>

<para>
NAT の設定に関してより詳しいことは、
<ulink url="../#simplenat">NetBSD ネットワーキング FAQ</ulink> を参照してください。
</para>

<para>
NAT を使わないのであれば、単に MSS 調節をするために 1:1 の NAT ルールの
設定が必要です:
</para>

<screen>
map pppoe0 x.x.x.x/24 -&gt; 0/0 mssclamp 1440
</screen>

<para>
上の例では MTU が 1492 バイトであると仮定しています。お使いになっている PPPoE
接続で MTU がもっと小さい値の場合は、 MTU から 52 バイトを引いた値を使ってください。
例えば MTU が 1460 バイトなら 1408 バイトにします。
</para>

<para>
<emphasis role="bold">注意:</emphasis>
理論的には、上の例での適切な値は 1452 バイト (これは、小さめの PPPoE MTU
、TCP ヘッダーと、最大 0x40バイトの TCP オプションからなります)
になるはずなのですが、これでも場合によっては大きすぎるようです。
多くの人達が試した結果によれば、上で例示した MSS 値 (1440 バイト)
に調節すると一番うまくいっています。
</para>
</sect3>
</sect2>

<sect2>
<title>さまざまな覚書</title>

<sect3 id="t-online">
<title>T-Online のアカウント名に関する一般的な情報</title>
<para>
 ドイツの ISP T-Online へダイアルインで入る場合、
 正しいユーザー名と、独自のチャットスクリプトについての 2 点について、
 大変トリッキーな事柄があります。一般的な ppp の設定方法の説明は
 <ulink url="../#ppp">NetBSD Network FAQ</ulink> を参照してください。
</para>

<orderedlist>
  <listitem>
    <para>
      T-Online のログイン名は、三つの部分を
      つなぎ合わせたものになっています:
    </para>

    <orderedlist>
    <listitem>
      <para>
        Anschlu&szlig;kennung: 12 桁の数字
        (<emphasis>AAAAAAAAAAAA</emphasis>)、
        たとえば 000120123456
      </para>
    </listitem>
    <listitem>
      <para>
        T-Online Nr: 12 桁の数字 (<emphasis>TTTTTTTTTTTT</emphasis>)、
        たとえば 3200123456。 しばしば
        "32" で始まります; 12 桁より少ない場合は、
        '#' を加えます)
      </para>
    </listitem>
    <listitem>
      <para>
        Mitbenutzer-Nummer, 大抵は "0001" (<emphasis>MMMM</emphasis>)、
        たとえば 0001
      </para>
    </listitem>
    </orderedlist>
    
    <para>
      すると、ログイン名は、この三つの部分を何も挟まずに
      一行に並べたもの ("<emphasis>AAAAAAAAAAAATTTTTTTTTTTTMMMM</emphasis>") 、
      たとえば 0001201234563200123456#0001 になります。
      これを PPP オプションファイルの "<code>user</code>" 行に書きます。
    </para>
  </listitem>
  <listitem>
    <para>
      チャットスクリプトでは、モデムが
      <code>CONNECT</code> を知らせてきてから、
      "<code>.</code>" を送るように注意する必要があります:
    </para>

<programlisting>
ABORT BUSY    '' AT
              OK ATZ
              OK ATL1
              OK ATD0191011
              CONNECT <emphasis>'.'</emphasis>
</programlisting>

    <para>
      この最後のドットがないと、最初の LCP ConfReq frame を送出後、
      T-Online ダイアルインサーバーからの返答なしに、
      すぐに接続が切られることがあります。
    </para>
  </listitem>
  <listitem>
    <para>
      T-Online を T-DSL 経由で使う場合は、ログイン名に
      "<code>@t-online.de</code>" を追加してください。
      たとえば "<code>0001201234563200123456#0001@t-online.de</code>" のように。
    </para>
  </listitem>
</orderedlist>

<para>
  さらなる情報について、 (ドイツ語の) リンクをいくつか示します
  (これらのほとんどは NetBSD 向けではありませんが、
  心配は無用です─他の Unix-like オペレーティングシステムで
  うまく使える手法は、普通は NetBSD でもうまくいきます):
</para>

<itemizedlist>
  <listitem><para> <ulink url="http://www.linux-user.de/ausgabe/2001/08/018-rp-pppoe/rp-pppoe.html">Gut gebr&uuml;llt - Roaring Penguin Software's DSL-Software</ulink></para>
  </listitem>
  <listitem><para> <ulink url="http://www.albert-rommel.de/ppp.htm">PPP-Zugang
            zu <html:font color="#FF00FF">T</html:font>-Online</ulink></para>
  </listitem>
  <listitem><para> <ulink url="http://home.t-online.de/home/Diedrich.Ehlerding/besonderheiten.html">Netzzugang bei <html:font color="#FF00FF">T</html:font>-Online: Besonderheiten und Einschr&auml;nkungen</ulink></para>
  </listitem>
  <listitem><para> <ulink url="http://sdb.suse.de/sdb/de/html/toppp.html">SuSE:
       T-Online Zugang mit PPP</ulink></para>
  </listitem>
  <listitem> <para><ulink
       url="http://sdb.suse.de/sdb/de/html/t_online3.html">SuSE:
       T-Online: Verbindung wird nicht aufgebaut</ulink></para>
  </listitem>
  <listitem> <para><ulink
            url="http://sdb.suse.de/sdb/de/html/toppp_files.html">SuSE: PPP-Files f&uuml;r T-Online</ulink></para>
  </listitem>
</itemizedlist>
</sect3>


<sect3 id="t-online-isdn-vs-dsl">
<title>ISDN や DSL 用の T-Online アカウント名</title>
<para>
従来 ISDN で T-Online に接続していたユーザーは、 T-DSL でのユーザー名が
ISDN でのものとは異なることに注意してください。 DSL でのユーザー名は
末尾に <code>@t-online.de</code> を追加したものになるため、
<ulink url="#t-online">T-Online のアカウント名に関する一般的な情報</ulink>
の節を参照してください。
</para>
</sect3>

<sect3 id="pppoe-server">
<title>PPPoE サーバーのセットアップ</title>
<para>
  PPPoE のテストをしたいが DSL 回線がない場合は、どうすればいいでしょうか?
  もちろん、その場合は自分で PPPoE サーバーをセットアップするのです。
  &man.pppoe.4; マニュアルページに、必要な情報はほぼすべて載っています。

<itemizedlist>
  <listitem> <para>
    カーネルに "options PPPOE_SERVER" が含まれていることを確認します。
  </para> </listitem>
  <listitem> <para>
    サーバーの pppoe0 インターフェースに link0 フラグをセットします。
  </para> </listitem>
  <listitem> <para>
    ローカルおよびリモートの IP アドレスとして、それぞれで使いたいアドレスを設定します。
    たとえば、サーバーで 10.3.3.1 を使い、
    クライアントで 10.3.3.2 を使いたい場合は、
    /etc/ifconfig.pppoe0 ファイルの最後の行を、"0.0.0.0 0.0.0.1 up" ではなく
    "10.3.3.1 10.3.3.2 up" にします。
  </para> </listitem>
  <listitem> <para>
    認証のために、クライアントで "my" になっている部分は
    サーバーでは "his" に置き換えてください。たとえば、クライアントで "myauthproto"
    となっている部分はサーバーでは "hisauthprot" となります。
  </para> </listitem>
</itemizedlist>
</para>

<para>
  サーバーの /etc/ifconfig.pppoe0 ファイルの全文は、以下のとおりです。
  <screen>
create
# Server:
link0
#
! /sbin/ifconfig re1 up
! /sbin/pppoectl -e re1 $int
! /sbin/pppoectl $int hisauthproto=pap hisauthname='foobar@baz.com' hisauthsecret='oink' myauthproto=none
10.3.3.1 10.3.3.3 up
  </screen>
</para>

<para>
  これに対応するクライアントの /etc/ifconfig.pppoe0 ファイルは、以下のとおりです。
  <screen>
create
! /sbin/ifconfig re1 up
! /sbin/pppoectl -e re1 $int
! /sbin/pppoectl $int myauthproto=pap 'myauthname=foobar@baz.com' 'myauthsecret=oink' hisauthproto=none
0.0.0.0 0.0.0.1 up
  </screen>
</para>
</sect3>

</sect2>
</sect1>
</webpage>
