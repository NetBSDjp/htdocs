<?xml version="1.0" encoding="ISO-2022-JP"?>
<!DOCTYPE webpage
  PUBLIC "-//Norman Walsh//DTD Website V2.2//EN"
    "http://docbook.sourceforge.net/release/website/2.2/website.dtd" [

<!ENTITY % man-refs.ent SYSTEM "../../share/xml/man-refs.ent"> %man-refs.ent;

]>

<webpage id="ja-cvs-notes">
<config param="desc" value="開発者用 CVS 覚書"/>
<config param="cvstag" value="$NetBSD: notes.xml,v 1.1 2005/02/13 21:45:11 jschauma Exp $"/>
<!-- based on english translation: -->
<!-- NetBSD: notes.xml,v 1.1 2005/02/13 21:45:11 jschauma Exp   -->
<config param="rcsdate" value="$Date: 2005/02/13 21:45:11 $"/>
<head>

<!-- Copyright (c) 1994-2005
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->

<title>開発者用 CVS 覚書</title>
</head>

<sect1 role="toc">

<sect2 id="misc">

<sect3 id="head">
<title>'HEAD' が、期待したような使い方をできない理由</title>
<para>

HEAD は "main trunk 上の最新版" と同義ではなく、実は、
もっと特別な意味を持っています。 'cat' を例に、見てみましょう。
</para>

<itemizedlist>
<listitem>"<code><emphasis role="bold">cvs update -A</emphasis></code>" (または "<code><emphasis role="bold">cvs update -Dnow</emphasis></code>") すると、以下のリビジョンが得られます:
<programlisting><html:pre>	Makefile	1.9
	cat.1		1.16
	cat.c		1.21</html:pre></programlisting>
</listitem>

<listitem>"<code><emphasis role="bold">cvs update -r netbsd-1-4-base</emphasis></code>" すると、以下のリビジョンが得られます:
<programlisting><html:pre>	Makefile	1.8
	cat.1		1.16
	cat.c		1.19</html:pre></programlisting>
</listitem>

<listitem>"<code><emphasis role="bold">cvs update -r netbsd-1-4-PATCH001</emphasis></code>" または "<code><emphasis role="bold">cvs
update -r netbsd-1-4</emphasis></code>" すると、以下のリビジョンが得られます:
<programlisting><html:pre>	Makefile	1.8
	cat.1		1.16
	cat.c		1.19.2.1</html:pre></programlisting>
</listitem>
</itemizedlist>

<para>
どの場合でも、 "<code><emphasis role="bold">cvs update -r HEAD</emphasis></code>" して得られるのは、
"<code><emphasis role="bold">cvs update -A</emphasis></code>" や "<code><emphasis role="bold">cvs
update -Dnow</emphasis></code>" した時と同じものです。
</para>
<para>
一方、 "<code><emphasis role="bold">cvs diff -r HEAD</emphasis></code>" した場合は以下のようになります:
</para>

<itemizedlist>
<listitem>current の場合 (あらかじめ "<code><emphasis role="bold">cvs update -A</emphasis></code>"
    等としておいた場合) 、以下の diff が得られます:
<programlisting><html:pre>	file:		1st -r:	2nd -r:
	-----		-------	-------
	Makefile	1.9	1.9
	cat.1		1.16	1.16
	cat.c		1.21	1.21</html:pre></programlisting>

(つまり、何も出てきません。)
</listitem>

<listitem><code>-r netbsd-1-4-base</code> でアップデートしておいた場合は、以下の diff が得られます:
<programlisting><html:pre>	Makefile	1.9	1.8
	cat.1		1.16	1.16
	cat.c		1.21	1.19</html:pre></programlisting>
(そう、逆向き (新しいものに対して古いものへの差分) になっています。
"<code><emphasis role="bold">cvs diff -r foo</emphasis></code>" による比較は、リビジョン foo
のファイルが先に、チェックアウト済みのファイルが後になるからです。)
</listitem>

<listitem><code>-r netbsd-1-4-PATCH001</code> または <code>-r netbsd-1-4</code>
    でアップデートしておいた場合は、以下の diff が得られます:
<programlisting><html:pre>	Makefile	1.9	1.8
	cat.1		1.16	1.16
	cat.c		1.19.2.1 1.19.2.1</html:pre></programlisting>
</listitem>
</itemizedlist>
<para>
いいかえれば、 "<code><emphasis role="bold">cvs update -r HEAD</emphasis></code>" は、 (少なくとも、
attic 送りになったファイルがない単純な場合に限れば) 
"<code><emphasis role="bold">cvs update -A</emphasis></code>" または "<code><emphasis role="bold">cvs update -Dnow</emphasis></code>"
と同義ということです。
</para>
<para>
しかし、 "<code><emphasis role="bold">cvs diff -r HEAD</emphasis></code>" は、各ファイルを、
<emphasis>そのファイルの属する枝の最新版</emphasis>と比較します。
枝上の一部のファイル (分岐はしたが、その枝で変更されていない場合)
は、差分は分岐元の枝の最新版と比較した結果になります
(上述した例では、 <code>cat/Makefile</code> が該当し、 trunk
の最新版と比較されています) 。それ以外のファイル
(分岐後に分岐先の枝で変更されたファイル) では、
差分は現にチェックアウトされた枝の最新版と比較した結果になります。
</para>
<para>
いいかえれば、 <emphasis role="bold"><code>-r HEAD</code> に対する <code>diff</code>
は、ファイルが trunk の最新版と合致するかの確認用としては、
使えない</emphasis>ということです。
</para>
<para>
そういう用途には <code>-Dnow</code> が使えます (ただし、削除済みファイルの存在に関しては、
壊れ気味です……ですが、少なくとも冗長過ぎるということはありません
</para>
<para>
枝へ commit した後、並列に更新して -kk を使いたい場合は、
以下のように指定することもできます。
</para>
<orderedlist>
<listitem><code><emphasis role="bold">cvs update -kk</emphasis></code><html:br/>
    (チェックアウトした枝の最新版を、 -kk を指定して取得します。
    この枝に変更を加えて commit したばかりであれば、
    各ファイルを単に -kk 化するだけです。)</listitem>
<listitem><code><emphasis role="bold">cvs update -A
-kk</emphasis></code></listitem>
</orderedlist>
<para>
変更/追加/削除されたファイルがなければ、この二つはどちらも同じ結果になります。
</para>
<para>
以上ですが、要するに、 HEAD は危険な面もあるので使わないように、ということです。 (cgd)
</para>
</sect3>

<sect3 id="cvsignore">
<title><code>.cvsignore</code> ファイルは使用禁止!</title>

<para><code>.cvsignore</code> ファイルは、 NetBSD ソースコードリポジトリーの
大半の部分では、使われていません。 (議論の結果、ソースツリーから
追放されたのです。) <code>pkgsrc</code> 以外の全モジュールは、
今もこの禁制下にあります。
</para>
<para><code>.cvsignore</code> ファイル追放の理由は、簡単に言えば、 NetBSD
の開発上で問題を引き起こすからです。このファイルによる主な問題は
二つあります: 掃除が不完全になることと、
配布物にゴミファイルが残ることです。
</para>

<para>掃除が不完全になる問題についていうと、 NetBSD のソースは、
構築してから掃除すると、元のソースファイルだけが残らないといけません。
もし、 <code>make cleandir</code> して完全に掃除したあとで、
オブジェクトファイルや中間生成ファイル等のファイルといった、
ソース以外のファイルが残ったら、それはバグです。 <code>.cvsignore</code>
ファイルは、このバグを隠してしまうので、使ってはいけないのです。
</para>

<para>ゴミファイルを含まない配布物を構築することに関する問題については、
配布物にゴミファイルが含まれていないことを確認する一番簡単な方法は、
"<code>cvs update</code>" を "<code>-I! -ICVS</code>" を付けて実行することです。
しかし、 <code>-I</code> を指定して作業をすると、 <code>.cvsignore</code>
で指定されている内容が、 CVS で無視されるファイルのリストに追加されます。
このため、 <code>.cvsignore</code> ファイルで指定されたファイルを CVS
が将来にわたって無視するようになってしまうのです!
この結果どういうことになるかは、明らかでしょう: <code>.cvsignore</code>
ファイルで指定されたようなファイルが何かの間違いでソーススナップショットに
紛れ込んだ場合、それを除去できなくなります。
</para>

<para><code>.cvsignore</code> ファイルを含んだパッケージをインポートする場合は、
"<code>cvs import</code>" コマンドに "<code>-I .cvsignore</code>" オプションを付けて、
CVS がこのファイルを無視するようにしてください。
</para>
</sect3>

<sect3 id="moving">
<title>リポジトリー内のファイルの移動や複製</title>
<para>
時には、ファイルを CVS 履歴を保持したままで
移動あるいは複製する必要な事態が起こります。
そういったことは CVS ではサポートしていないので、 CVS の通常の
クライアント-サーバーの仕組みで行うことはできません。
</para>
<para>

かつては RCS ファイルそのものを移動するためのスクリプトがありましたが、
今はそういうことはサポートされません。普通にファイルを削除して、
新しい場所にファイルを追加してください。その際、将来追跡がしやすくなるよう、
それぞれに移動先と移動元を書いておいてください。
一度に沢山のファイルを扱う場合は、 cvs add するかわりに cvs import
してもかまいません。
</para>

</sect3>

<sect3 id="admin">
<title>リポジトリー上のログメッセージを変更する方法は?</title>

<para>
cvs commit した後に、その commit メッセージを変更することが必要になった場合は、
<code>cvs admin</code> コマンドを使って変更することができます:
</para>
<programlisting><html:pre>$ vi /tmp/newmsg
$ cvs admin -m 1.1:"`cat /tmp/newmsg`" file</html:pre></programlisting>
</sect3>

</sect2>
</sect1>
<parentsec url="./" text="CVS リポジトリー問題"/>
</webpage>
