<?xml version="1.0" encoding="ISO-2022-JP"?>
<!DOCTYPE webpage
 PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
        "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-developers-cvs-repos-cvs_intro">
<config param="desc" value="NetBSD CVS HOWTO"/>
<config param="cvstag" value="$NetBSD: cvs_intro.xml,v 1.8 2009/02/24 23:16:35 imil Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: cvs_intro.xml,v 1.8 2009/02/24 23:16:35 imil Exp   -->
<config param="rcsdate" value="$Date: 2009/02/24 23:16:35 $"/>
<head>

<!-- Copyright (c) 1994-2003
        The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->

<title>NetBSD CVS HOWTO</title>
</head>

<sect1 role="toc">

  <sect2>
    <title>導入と目的</title>
    <sect3 id="intro">
      <title>CVSとは何か?</title>
      
      <para>
	<acronym>CVS</acronym> とは<firstterm>Concurrent Versions System</firstterm> (協調バージョンシステム) の略です。
	CVSは同一ファイルで作業する複数の開発者によるソースの変更を追跡しつづける
	ように設計されている<firstterm>ソースコントロール</firstterm>あるいは<firstterm>リビジョンコントロール</firstterm>
	ツールです。開発者が選択したように同期をとりつづけることが
	できます。特に、CVSは<ulink url="../../index.html">NetBSDプロジェクト</ulink>では
	ソースツリーを維持するツールとして使われています。
      </para>
      <para>
	重要なのは、CVSの<emphasis>協調</emphasis>機能のおかげで複数の人々が同時に作業できる
	ことに注目することです。RCSとは違いファイルのロックはありません。
      </para>
    </sect3>
  </sect2>
  <sect2 id="getting-started">
    <title>始めよう</title>

    <para>
      この章ではシステム上にCVSをインストールする基本的なステップを解説します。
    </para>

    <sect3 id="install-cvs">
      <title>CVSのインストール</title>
      <para>
	ローカルマシンにCVSをインストールする必要があります。
	全ての作業を行うマシンであって、CVSのサーバーではありません。
	マシンにCVSがすでにインストールされていなければ、
	<ulink url="../../docs/software/packages.html">パッケージコレクション</ulink>
	から
	<ulink url="ftp://ftp.NetBSD.org/pub/NetBSD/packages/pkgsrc/devel/scmcvs/README.html">CVS</ulink>
	をインストールして下さい。
      </para>
    </sect3>
    <sect3 id="configure-environment">
      <title>CVS用の環境設定</title>
      <para>
	CVSを使う予定であるローカルマシンで、シェルに<command>csh</command> か
	<command>tcsh</command>を使っていれば、<filename>.cshrc</filename>ファイルに
	以下の行を付け加えて下さい。
      </para>

<programlisting language="C shell">
setenv CVSEDITOR vi
setenv CVSROOT yourusername@cvs.NetBSD.org:/cvsroot
setenv CVS_RSH ssh
</programlisting>

      <para>
	もし<command>sh</command> か <command>bash</command>をお使いでしたら、
	<filename>.profile</filename>ファイルに以下の行を付け加えて下さい。
      </para>

<programlisting language="Bourne shell">
CVSEDITOR=vi
CVSROOT=yourusername@cvs.NetBSD.org:/cvsroot
CVS_RSH=ssh
export CVSEDITOR
export CVSROOT
export CVS_RSH
</programlisting>
    </sect3>
    
    <sect3 id="sourcedir">
      <title>CVSの作業用ディレクトリーを作る</title>
      <para>
	私は自分のマシン上に<filename class="directory">/usr/cvs</filename> にCVS関連のものを
	全て置いていますが、これは人の好みによります。
	このドキュメントの残りではマシンに<filename class="directory">/usr/cvs</filename> ディレクトリーを
	作ったものとします。もう一度繰り返しますが、これはローカルマシンであって、
	CVSサーバーではありません。
      </para>
    </sect3>
  </sect2>
  <sect2 id="using">
    <title>CVSを使う</title>
    <para>
      この章ではCVSを使う基本的なステップを説明します。
    </para>

    <sect3 id="example">
      <title>例</title>
      <para>
	この章では空の<filename class="directory">/usr/cvs</filename> ディレクトリーから始め、
	<filename class="directory">htdocs/people/</filename> モジュールを追加し、変更を加えてコミットする方法を示します。
	基本的なステップは以下の通り:
      </para>

<screen language="shell">
cd /usr/cvs
cvs checkout htdocs/people
cd htdocs/people
vi developers.xml
make
cvs ci developers.xml developers.html
</screen>

      <para>
	これらのステップを以下により詳しく説明します。
      </para>

<screen language="shell">
cvs checkout htdocs/people
</screen>

      <para>
	このコマンドで、CVSが
	<filename class="directory">htdocs/people</filename>
	というディレクトリーをローカルマシンにチェックアウトします。
	これは <filename class="directory">htdocs/people</filename> 以下にある各ファイルの最新バージョンが
	CVSサーバーからローカルマシンへコピーされることを意味します。
	加えて、
	<filename class="directory">CVS</filename> ディレクトリーが
	<filename class="directory">/usr/cvs</filename>,
	<filename class="directory">/usr/cvs/htdocs</filename>,
	<filename class="directory">/usr/cvs/htdocs/people</filename>
	の中に作られます。重要なので覚えておいて欲しいのは、CVSのチェックアウトは
	RCSにあるチェックアウトとは違い、ファイルをロックしません。
	つまり、他の開発者がチェックアウトされたファイルにもアクセスできるのです。
      </para>
      <para>
	一度ディレクトリーをローカルマシンにチェックアウトしたら、
	このディレクトリー用に再び<command>cvs co</command>、つまり
	<command>cvs checkout</command>
	をする必要はありません。もし以前チェックアウトしたディレクトリーを最新のバージョンへ
	アップデートしたければ、例えば単純に
	<userinput>cvs update htdocs/people</userinput>
	とすればよいです。
      </para>
      <para>
	ディレクトリーをチェックアウト (以前に目的のモジュールをチェックアウト
	していれば、アップデート) したら、次はファイルを編集します。
	編集が全て完了したら、以下のようにします:
      </para>

<screen language="shell">
  make
</screen>

      <para>
	こうすると、 <filename>developers.xml</filename> ファイルをもとに
	<filename>developers.html</filename> ファイルが作り直されます。それから以下のようにします:
      </para>
<screen language="shell">
cvs ci developers.xml developers.html
</screen>
      <para>
	このコマンドは新しいバージョンを反映するため、
	CVSサーバーに変更部分をアップロードし、各ファイルのRCSヘッダーをアップデートします。
	変更をチェックイン (コミット) したら、変更に関して短く書き記すように促されるでしょう。
      </para>
      <para>
	ただし、ソースツリー内での新しい項目の追加とファイル再生成は、
	普通はそれぞれ別に commit します。
      </para>
    </sect3>
    
    <sect3 id="modules">
      <title>CVS モジュール</title>
      <para>
	CVSでは、モジュールとは一つのファイルや複数のファイルがあるディレクトリーを
	指すこともありますし、ディレクトリーツリーの全体を指すこともあります。
	<ulink url="modules.html">NetBSD
	のトップレベルCVSモジュール</ulink>
	のリストでは、NetBSDツリーのトップレベルCVSモジュールを列挙しています。
	特に注目すべき他のトップレベルモジュールは以下の通りです:

	<variablelist>
	  <varlistentry>
	    <term><emphasis role="bold">htdocs</emphasis></term>
	    <listitem>NetBSD のWWW ページ。</listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><emphasis role="bold">othersrc</emphasis></term>
	    <listitem>NetBSD に関連があるが NetBSD そのものではないコード。</listitem>
	  </varlistentry>
	</variablelist>
      </para>
      <para>
	トップレベルモジュールはそれぞれ、トップレベルを全てチェックアウト
	(し、アップデート) することも、低いレベルのモジュールをチェックアウト
	(し、アップデート) することも可能です。
	例えば、<filename class="directory">htdocs</filename> モジュール全体をチェックアウトするには、
	こうします:
      </para>
<screen language="shell">
cd /usr/cvs
cvs checkout htdocs
</screen>
      <para>
	<filename class="directory">htdocs/people</filename>
	サブディレクトリーを入手するだけならこうします
<screen language="shell">
cd /usr/cvs
cvs checkout htdocs/people
</screen>
      </para>
      <para>
	これらの例のように、一度モジュールをチェックアウトする必要があることを
	忘れないでください。例えば、すでに
	<filename class="directory">htdocs</filename> モジュールを
	チェックアウトして、最新のものにしたい場合は、こうします:
<screen language="shell">
cd /usr/cvs
cvs update htdocs
</screen>
      </para>
    </sect3>
    
    <sect3 id="importing">
      <title>新しいパッケージのインポート</title>
      <para>
	この章では
	<ulink url="http://www.NetBSD.org/developers/pkgsrc/#import">新しいパッケージのインポート
	</ulink> の説明をいくつか補足します。
      </para>
      <para>
	新しく作ったパッケージを追加する例をとりあげましょう。
	この例ではCVSの材料が
	<filename class="directory">/usr/cvs</filename> にあり、
	<filename class="directory">pkgsrc</filename> が
	そのサブディレクトリーにあると仮定します。
	新しいパッケージを<filename class="directory">foo/bar</filename> として、
	<filename>/usr/cvs/pkgsrc/foo/bar.work</filename> ディレクトリーの中にあるとします。
	このパッケージをソースツリーへインポートする段階は以下の通りになります:
      </para>
<screen language="shell">
<![CDATA[
cd /usr/cvs/pkgsrc/foo/bar.work
	
# 通常のテスト、つまりpkglintなどをします。
# files/patch-sum ファイルを生成するために、'make makepatchsum' するのを
# 忘れないでください。

grep TNF /usr/pkgsrc/doc/pkgsrc.txt

# このコマンドで"cvs import" を行うにあたり文法的に正しいかがわかります。
# (/usr/pkgsrc は/usr/cvs/pkgsrc へのシンボリックリンクです) 。

cvs import pkgsrc/foo/bar TNF pkgsrc-base 

# "bar.work" ではなく、"bar" であることに注意して下さい。

cd ../../..
cvs checkout pkgsrc/foo/bar 

# 全てが正常に行われたか確認するため、新しくインポートされたパッケージを
# チェックアウトします。

cd pkgsrc/foo
cvs update Makefile
vi Makefile 

# pkgsrc/foo/Makefile にbarを追加します。

cvs ci -m 'add & enable bar' Makefile

# pkgsrc/foo/Makefile へ変更をチェックインします。

cd /usr/cvs/pkgsrc/doc
cvs update CHANGES-YYYY

# これにより、最新のCHANGES-YYYYを確実に取得します。

vi CHANGES-YYYY

# foo/bar パッケージへの変更を書いたメモを作ります。

cvs ci -m 'Added foo/bar version 17.42' CHANGES-YYYY

# CHANGES-YYYY をチェックインします。
]]>
</screen>

    </sect3>
  </sect2>

  <sect2 id="other-ops">
    <title>その他役に立つCVSの操作</title>

    <sect3 id="output">
      <title>CVS 出力</title>
      <para>
	さまざまなCVSのタスクを実行すると、関係するファイルのリストをみることが
	あるでしょう。ファイル名は一文字のコードで表されます。
	コードの概要は以下の通りです:
      </para>

      <itemizedlist>
	<listitem><emphasis role="bold">U</emphasis>pdated (更新)</listitem>
	<listitem><emphasis role="bold">P</emphasis>atched (パッチ)</listitem>
	<listitem><emphasis role="bold">C</emphasis>onflict (コンフリクト)</listitem>
	<listitem><emphasis role="bold">M</emphasis>odified  (ローカルで) (変更済み)</listitem>
	<listitem><emphasis role="bold">A</emphasis>dded (追加済み)</listitem>
	<listitem><emphasis role="bold">R</emphasis>emoved (削除済み)</listitem>
	<listitem><emphasis role="bold">?</emphasis> (CVSの管理外)</listitem>
      </itemizedlist>

    </sect3>
  </sect2>

  <sect2 id="references">
    <title>他の情報源</title>

    <sect3 id="ref-netbsd">
      <title>NetBSD 特有</title>

      <itemizedlist>
	<listitem>pkgsrc <ulink url="../../docs/software/packages.html">ホーム
	ページ</ulink>。</listitem>
	<listitem><ulink url="../">役に立つ NetBSD の開発者情報</ulink>。</listitem>
	<listitem>完全な 
	<ulink url="http://www.NetBSD.org/docs/pkgsrc/">pkgsrc ドキュメント</ulink>。</listitem>
      </itemizedlist>

    </sect3>
    <sect3 id="ref-cvs">
      <title>CVS 特有</title>

      <itemizedlist>
	<listitem><ulink url="http://ximbiot.com/cvs/manual/">CVS のマニュアル</ulink></listitem>
	<listitem><ulink url="http://www.NetBSD.org/developers/cvs-repos/cvs-faq.txt">CVS のFAQ</ulink></listitem>
	<listitem><ulink url="http://www.cyclic.com/">Cyclic Software</ulink> という
	CVSをメンテナンスしている会社</listitem>
	<listitem><ulink url="http://cvsbook.red-bean.com/">Open Source Development with CVS, 3rd edition</ulink>,
	web 上で公開されている書籍 (訳註: <ulink url="http://kahori.com/j-cvsbook/">日本語訳</ulink>)。</listitem>
      </itemizedlist>
    </sect3>
  </sect2>
</sect1>
</webpage>
