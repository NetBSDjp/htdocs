# $NetBSD: table,v 1.590 2006/08/05 14:14:32 bjh21 Exp $

# declare ports (rows) ("port <port> [<port_subdir>]")
# If <port_subdir> is not specified, it defaults to the name of port.

port acorn26
port acorn32
port algor
port alpha
port amd64
port amiga
port amigappc
port arc
port atari
port bebox
port cats
port cesfic
port cobalt
port dreamcast
port evbarm
port evbmips
port evbppc
port evbsh3	sh3
port evbsh5	sh5
port ews4800mips
port hp300
port hp700
port hpcarm
port hpcmips
port hpcsh
port i386
port ibmnws
port iyonix
port luna68k
port mac68k
port macppc
port mipsco
port mmeye	sh3
port mvme68k
port mvmeppc
port netwinder
port news68k
port newsmips
port next68k
port ofppc
port pc532
port playstation2
port pmax
port pmppc
port prep
port sandpoint
port sbmips
port sgimips
port shark
port sparc
port sparc64
port sun2
port sun3
port vax
port x68k


# declare classes ("class <name> <member> ..."), which correspond to values
# of MACHINE_ARCH and have as members all of the MACHINEs of that MACHINE_ARCH.
# There can be multiple 'class' lines for the same class name, if necessary.
# Note that you can have classes with the same names as ports, but if you do
# the ports will not be used.  Therefore, any such classes must have exactly
# one member named the same as the class itself.
class alpha	alpha
class amd64	amd64
class arm	acorn26 acorn32 cats evbarm hpcarm iyonix netwinder shark
class hppa	hp700
class i386	i386
class m68k	amiga atari cesfic hp300 luna68k mac68k mvme68k news68k next68k sun3 x68k
class mipseb	ews4800mips mipsco newsmips sbmips sgimips
class mipsel	algor arc cobalt evbmips hpcmips playstation2 pmax
class ns32k	pc532
class powerpc	amigappc bebox evbppc ibmnws macppc mvmeppc ofppc pmppc prep sandpoint
class sh3eb	evbsh3 mmeye
class sh3el	dreamcast hpcsh
class sh5el	evbsh5
class sparc	sparc
class sparc64	sparc64
class sun2	sun2
class vax	vax


# declare features (columns)
# ("feature <name> <allways>\n<multiline-description>\nfeatureend <name>")
# always: 0 or 1, should feature always appear in table, even if all
# ports have the same value for the feature?

feature Latest-Release 1
	What is the latest
	<a href="../../Releases/formal.html">formal release</a>
	for which this port was built?
featureend Latest-Release
feature shlibs 0
	Does the port support shared libraries and dynamic linking?
featureend shlibs
feature ELF 0
	Can the port use ELF as its native object file format?
	"yes" if ELF is the default, or "no" if ELF is not supported
	as the native object file format. 
featureend ELF
feature gcc 0
	Which compiler does the port use (gcc 3.3.6, gcc 4.1.x or other)?
featureend gcc
feature	gcc4 0
	Does the port work with gcc-4.1.x?
featureend gcc4
feature binutils 0
	Which gas and ld does the port use?
	"2.16.1" means 2.16.1, and "other" means a version that's not in the CVS tree.
featureend binutils
feature gdb 0
	Is gdb built for the port?
featureend gdb
feature gdb6 0
	Does the port support gdb-6.x?
featureend gdb6
feature cross 0
	Can the port be cross-built via "build.sh"?  "Build" means that
	the system can be built to DESTDIR, but the release machinery
	in distrib is not yet cross-capable; "NBhost" means that the host
	must be NetBSD.
featureend cross
feature new-distrib 0
	Does the port use the "new" distrib layout for installation filesystems?
	"yes" means that the port uses the new common structure in
	src/distrib/common; "no" means that the port uses newfs and vnd
	to create a filesystem; "N/A" means that the port has no install media
	requiring a generated filesystem or bootblocks.  (Note that "yes"
	does not imply that distrib is cross-compilable with installboot, etc.;
	it only indicates how distrib generates filesystems.)
featureend new-distrib
feature sysinst 0
	Does the port use sysinst for installation?  "no" means that install
	or diagnostic boot media exists, but sysinst is not on the media or
	is not the default install method.
featureend sysinst
feature X-clients 0
	Version of X11 binaries shipped for a port. "XF4.4", or "N/A".
	"N/A" indicates that the port ships no X11 binaries at all.
featureend X-clients 
feature X-server 0
	Does the port provide an X11 server? "XF4.x", "no", or "N/A".
featureend X-server
feature wscons 0
	Does the port use the MI WSCONS console driver system,
	rather than a homegrown console interface? (Y, partial, or N)
featureend wscons 
feature bus-space 0
	Does the port provide the bus_space interfaces in machine/bus.h?
	Support is considered complete ("yes") even if some word size operations
	(e.g. the 8-byte operations) are not provided.  If some support is
	provided but some sets of operations (e.g. bus_space_read_region_N)
	have been omitted, support is considered "Partial".
featureend bus-space
feature bus-dma 0
	Does the port provide the bus_dma interfaces in machine/bus.h?
featureend bus-dma
feature cf_unit 0
	Does the port not abuse cf_unit (in other words,
	does it not define __BROKEN_CONFIG_UNIT_USAGE)?
featureend cf_unit
feature generic-softint 0
	Does the port provide the generic software interrupt
	mechanism (and therefore define __HAVE_GENERIC_SOFT_INTERRUPTS)?
featureend generic-softint
feature evcnt 0
	Does the port use the evcnt(9) generic event counter framework?
featureend evcnt
feature optimized-in_cksum 0
	Does the port provide an optimized in_cksum/in4_cksum/in6_cksum?
	First field is for in_cksum, second for in4_cksum, third for
	in6_cksum.
featureend optimized-in_cksum
feature SMP 0
	Does the port support multiple processors? "yes" means yes, "Y-dev" means
        yes, but not production stable, i.e. Yes for developers.  "spinup"
	means initial support (the additional processors are started up),
	"no" stands for not yet, "NFW" means that there exist MP-machines, but
	at this time there are no plans to support them, and "N/A" means that
	there are no MP-machines of that type.
featureend SMP
feature RAS 0
	Does the port provide kernel support for user-level restartable
	atomic sequences (RAS)?  See ras(9) for implementation details.
featureend RAS
#feature new-ctxsw 0
#	Does the port support the new context switch interface which
#	separates the scheduler semantics from the machine-dependent
#	context switch primitive?  Requires the factoring of cpu_switch()
#	into nextrunqueue(), cpu_idle() and simplified cpu_switch().
#	See nextrunqueue(9), cpu_idle(9) and cpu_switch(9) for
#	implementation details.
#featureend new-ctxsw
feature topdown-vm 0
	Does the port offer or use topdown mmap ordering?  "yes" means
	yes, "opt" means it is offered as an option (presumably to be
	upgraded to yes at some point), "no" means no.
featureend topdown-vm
feature rf-boot 0
	Can the port boot from a RAIDframe mirror?
featureend rf-boot
feature timectrs 0
	Does the port support timecounters?
featureend timectrs


# declare values ("value <name> <text>")
value yes <font color="green">Y</font>
value yesdev <font color="green">Y-dev</font>
value no <font color="red">N</font>
value N/A <font color="green">N/A</font>

value OK <font color="green">OK</font>
value BROKEN <font color="red">BROKEN</font>

value XF4.x <font color="green">XF86&nbsp;4.x</font>
value XF4.4 <font color="green">XF86&nbsp;4.4</font>

# special value used to mean missing data.
value UNSPECIFIED <blink><font color="red">???</font></blink>

# for 1.6 fields
value cross <font color="green">cross</font>

# for toolchain
value other <font color="#FFA500">other</font>
value gcc336 <font color="green">3.3.6</font>
value 2.16.1 <font color="green">2.16.1</font>
value build <font color="#FFA500">Build</font>
value nbhost <font color="green">NBhost</font>

value never <font color="red">NEVER</font>

value partial <font color="#FFA500">Partial</font>

# for in{4,6,}_cksum
value NNN <font color="red">N/N/N</font>
value YNN <font color="#FFA500">Y/N/N</font>
value YYN <font color="green">Y/Y/N</font>
value YYY <font color="green">Y/Y/Y</font>

# for SMP
value NFW NFW
value spinup <font color="#FFA500">spinup</font>

# for X-server
value none <font color="red">none</font>
value 4.x <font color="green">4.x</font>

# for timectrs
value tcx86 <font color="green">clockinterrupt,<br>i8254,<br>TSC,<br>geodecntr</font>
value tca64 <font color="green">clockinterrupt,<br>i8254,<br>TSC</font>
value timer-counter <font color="green">clockinterrupt,<br>timer-counter</font>
value tick-counter <font color="green">clockinterrupt,<br>tick-counter</font>
value iomd-timer <font color="green">clockinterrupt,<br>iomd_timer0</font>

# "<value> <feature> <port|class|*>" sets the corresponding row/col
# to that value. Port may be "*" to set it for all ports, or the name of
# a class to set the value for all ports in the class. Later rules
# override previous ones.

# Latest release: specify by port.
Latest-Release	never	*
Latest-Release	3.0	acorn26 acorn32 algor alpha amd64 amiga arc atari
Latest-Release	3.0	cats cesfic cobalt
Latest-Release	3.0	dreamcast evbarm evbmips evbppc evbsh3 evbsh5
Latest-Release	3.0	hp300 hp700 hpcarm hpcmips hpcsh i386 ibmnws iyonix
Latest-Release	3.0	luna68k mac68k macppc mipsco mmeye mvme68k mvmeppc 
Latest-Release	3.0	netwinder news68k newsmips next68k ofppc pmax pmppc
Latest-Release	3.0	prep sandpoint sbmips sgimips
Latest-Release	3.0	shark sparc sparc64 sun2 sun3 vax x68k
Latest-Release	1.5.3	pc532

# shared library support: spec by arch, NO POSITIVE WILDCARDS.
shlibs	no	*
shlibs	yes	alpha amd64 arm hppa i386 m68k mipseb mipsel
shlibs	yes	powerpc sh3eb sh3el sparc sparc64

# ELF use: spec by arch, NO POSITIVE WILDCARDS.
ELF	no	*
ELF	yes	alpha amd64 arm hppa i386 mipseb mipsel m68k
ELF	yes	powerpc sh3eb sh3el sh5el sparc sparc64 sun2 vax

# Compiler support: spec by arch.
gcc	gcc336	alpha amd64 arm armeb hppa i386 m68k mipseb mipsel
gcc	gcc336	ns32k powerpc sh3eb sh3el sh5el sparc sparc64 sun2 vax

#
gcc4	no	*
gcc4	builds	m68k sh3eb sh3el
gcc4	yes	alpha amd64 arm armeb i386 powerpc sparc64 sparc 

# binutils choice: spec by arch, NO POSITIVE WILDCARDS.
binutils	other	*
binutils	2.16.1	alpha amd64 arm armeb hppa i386 m68k mipseb mipsel
binutils	2.16.1	ns32k powerpc sh3eb sh3el sh5el sparc sparc64 sun2 vax

# GDB support: spec by arch, NO POSITIVE WILDCARDS.
gdb	no	*
gdb	yes	alpha amd64 arm armeb i386 m68k mipseb mipsel powerpc
gdb	yes	sh3eb sh3el sparc sparc64 sun2 vax

gdb6	no	*
gdb6	yes	alpha arm i386 mipseb powerpc sparc sparc64 x86_64  

# Cross-build support: spec by arch, default is Build.
cross	build	*
# spec by machine (exceptions to above; machines for which distrib works in cross)
cross	nbhost	acorn32 amiga hp300
cross	yes	acorn26 algor amd64 arc atari cats cobalt dreamcast ews4800mips
cross	yes	evbarm evbmips evbppc evbsh3 hp700 hpcarm hpcmips hpcsh i386
cross	yes	ibmnws luna68k mac68k macppc mipsco mmeye mvme68k mvmeppc
cross	yes	netwinder news68k newsmips next68k pc532 playstation2 pmax prep
cross	yes	sandpoint sbmips sgimips shark sparc sparc64 sun2 sun3
cross	yes	vax x68k

# new distrib support: spec by machine, NO POSITIVE WILDCARDS.
new-distrib	N/A	*
new-distrib	yes	acorn26 acorn32 alpha amd64 arc atari cats evbarm
new-distrib	yes	ews4800mips hp300 hp700 hpcmips ibmnws i386
new-distrib	yes	mac68k macppc mipsco mvme68k
new-distrib	yes	news68k newsmips playstation2 pmax pmppc prep
new-distrib	yes	sandpoint shark sparc sparc64 sun2 sun3 vax x68k
new-distrib	no	amiga bebox evbsh3 mvmeppc pc532

# sysinst support: spec by machine, NO POSITIVE WILDCARDS.
sysinst	N/A	*
sysinst	yes	acorn26 acorn32 alpha amd64 amiga bebox cats ews4800mips
sysinst	yes	hp300 hp700 hpcmips i386 mac68k
sysinst	yes	macppc mipsco mvme68k news68k newsmips
sysinst	yes	pc532 playstation2 pmax prep
sysinst	yes	sandpoint shark sparc sparc64 vax x68k
sysinst	no	atari sun2 sun3


# X clients: spec by machine.
X-clients	XF4.4	*
X-clients	N/A	acorn26 cesfic mvme68k mvmeppc pmppc sandpoint

# X server: spec by machine, NO POSITIVE WILDCARDS.
X-server	no	*
X-server	XF4.x	acorn32 alpha amiga cats dreamcast
X-server	XF4.x	ews4800mips hpcarm hpcmips hpcsh
X-server	XF4.x	i386 mac68k macppc newsmips sgimips sparc sparc64
X-server	N/A	acorn26 cesfic mvme68k mvmeppc pc532 pmppc sandpoint

# MI WSCONS use: spec by machine, NO POSITIVE WILDCARDS.
wscons	no	*
wscons	yes	acorn26 acorn32 algor alpha amd64 bebox
wscons	yes	cats dreamcast evbarm ews4800mips hpcarm hpcmips hpcsh
wscons	yes	i386 luna68k mac68k macppc
wscons	yes	netwinder newsmips next68k playstation2 prep sparc64 vax
wscons	partial	arc ibmnws shark
wscons	N/A	cesfic mvme68k mvmeppc pc532 pmppc sandpoint

# bus_space support: spec by machine, NO POSITIVE WILDCARDS.
bus-space	no	*
bus-space	yes	algor alpha arc atari evbmips
bus-space	yes	evbsh5 i386 ibmnws mipsco next68k
bus-space	yes	pmppc sun2 sparc64 vax amd64
bus-space	partial	acorn26 acorn32 amiga bebox cats cobalt
bus-space	partial	dreamcast evbarm evbppc evbsh3 ews4800mips
bus-space	partial	hp300 hp700 hpcarm hpcmips hpcsh iyonix
bus-space	partial	luna68k mac68k macppc mmeye mvme68k mvmeppc
bus-space	partial	netwinder news68k newsmips
bus-space	partial	playstation2 pmax prep
bus-space	partial sandpoint sgimips shark sparc x68k

# bus_dma support: spec by machine, NO POSITIVE WILDCARDS.
bus-dma	no	*
bus-dma	yes	acorn32 algor alpha amd64 atari bebox
bus-dma	yes	cats cobalt evbarm evbmips evbppc evbsh5 ews4800mips
bus-dma	yes	hp700 hpcarm hpcmips i386 ibmnws iyonix
bus-dma	yes	macppc mipsco mvme68k mvmeppc netwinder newsmips next68k
bus-dma	yes	playstation2 pmax pmppc prep
bus-dma	yes	sandpoint sgimips shark sparc sparc64 sun2
bus-dma	yes	vax x68k
bus-dma	partial	arc

# !__BROKEN_CONFIG_UNIT_USAGE: spec by machine, no POSITIVE WILDCARDS.
cf_unit	BROKEN	*
cf_unit	OK	acorn26 acorn32 algor alpha amd64 amiga amigappc arc atari
cf_unit	OK	bebox cats cesfic cobalt evbarm evbmips evbppc evbsh5
cf_unit	OK	ews4800mips hp300 hp700 hpcarm hpcmips i386 ibmnws iyonix
cf_unit	OK	luna68k mac68k macppc mipsco mvme68k mvmeppc
cf_unit	OK	netwinder news68k newsmips next68k
cf_unit	OK	ofppc pc532 playstation2 pmax pmppc prep sandpoint
cf_unit	OK	sbmips sgimips sh3eb sh3el shark sparc sparc64 sun2
cf_unit	OK	vax x68k

# __HAVE_GENERIC_SOFT_INTERRUPTS: spec by machine, no POSITIVE WILDCARDS.
generic-softint	no	*
generic-softint	yes	acorn26 algor alpha amd64 amiga amigappc arc cats
generic-softint	yes	cobalt dreamcast
generic-softint	yes	evbmips evbsh3 evbsh5 ews4800mips
generic-softint	yes	hp300 hp700 hpcarm hpcmips hpcsh
generic-softint	yes	i386 ibmnws iyonix macppc mipsco mmeye mvme68k
generic-softint	yes	newsmips netwinder playstation2 pmax prep
generic-softint	yes	sbmips sgimips sparc sparc64 sun2 vax

# evcnt: spec by machine, no POSITIVE WILDCARDS.
evcnt	no	*
evcnt	yes	acorn26 algor alpha amd64 arc
evcnt	yes	cats cobalt dreamcast evbarm evbmips evbsh3 ews4800mips
evcnt	yes	hp300 hpcsh hpcmips hp700 i386 ibmnws iyonix
evcnt	yes	macppc mipsco mmeye netwinder
evcnt	yes	ofppc pc532 playstation2 pmax prep
evcnt	yes	sbmips sgimips sparc64 vax

# optimized-in_cksum: spec by arch, no POSITIVE WILDCARDS.
optimized-in_cksum	NNN	*
optimized-in_cksum	YNN	alpha hppa m68k ns32k sh3eb sh3el sun2
optimized-in_cksum	YYN	arm mipseb mipsel powerpc sh5el
optimized-in_cksum	YYN	sparc sparc64 vax
optimized-in_cksum	YYY	i386

# SMP support: spec by machine.
SMP	N/A	*
SMP	yes	alpha amd64 i386 macppc sparc vax
SMP	spinup	acorn32 sparc64
SMP	no	arc bebox ews4800mips hp700 mvmeppc ofppc prep
SMP	no	sbmips sgimips
SMP	NFW	cesfic pmax

# RAS support: spec by arch.
RAS	no	*
RAS	yes	alpha amd64 arm i386 hp300 hppa mipsel mipseb
RAS	yes	sh3eb sh3el sh5el sparc64

# new-ctxsw: spec by arch.
#new-ctxsw	no	*
#new-ctxsw	yes	

# topdown vm support: spec by arch.
topdown-vm	no	*
topdown-vm	yes	i386 mipseb mipsel powerpc vax

# RAIDframe mirror boot support: spec by machine.
# NOTE: some machines are probably N/A
rf-boot	no	*
rf-boot	yes	alpha i386 pmax sparc sparc64 vax

# Timecounters
timectrs no	*
timectrs iomd-timer acorn32
timectrs tcx86 i386
timectrs tca64 amd64
timectrs timer-counter sparc
timectrs tick-counter sparc64
timectrs tick-counter prep
