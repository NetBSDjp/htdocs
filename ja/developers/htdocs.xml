<?xml version="1.0" encoding="ISO-2022-JP"?>
<!DOCTYPE webpage
  PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
    "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-developers-htdocs">
<config param="desc" value="htdocsを編集する"/>
<config param="cvstag" value="$NetBSD: htdocs.xml,v 1.36 2006/06/10 22:35:08 kano Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: htdocs.xml,v 1.36 2006/06/10 22:35:08 kano Exp   -->
<config param="rcsdate" value="$Date: 2006/06/10 22:35:08 $"/>
<head>
<title>htdocsを編集する</title>
</head>

<sect1 id="editing-htdocs" role="toc">

<sect2 id="general">
<title>htdocsに関する一般事項</title>

<sect3 id="who-can-edit">
<title>だれがhtdocsを編集できるのか</title>
<para>
    NetBSD CVSツリーに書き込み権限を持つ人であれば、
    だれでもチェックアウトや変更ができます。
    事実、そうして欲しいのです。
    特に開発者が機能やドライバーを追加する時には、
    該当するハードウェアやポートのホームページを更新すべきです。
    cvs.NetBSD.orgにはNetBSD.orgのログイン名を利用してログインし、
    htdocsをチェックアウトしてください。
</para>
<para>
    CVS commit 権限がないユーザーは、 anoncvs で htdocs
    をチェックアウトして、パッチを www@NetBSD.org までメールで送ってください。
    <ulink url="#dotlist-files">後述の説明</ulink>も参照してください。
</para>
</sect3>

<sect3 id="what-is-required">
<title>htdocsを編集するには何が必要か</title>
<para>
  <itemizedlist>
    <listitem><ulink url="cvs-repos/cvs_intro.html">CVS
      の導入</ulink>を読んでください。
    </listitem>
    <listitem><filename role="pkg">meta-pkgs/netbsd-www</filename>
	をインストールします。これにより、
	web サイトの構築に必要な道具がインストールされます。最低限、
	<filename role="pkg">textproc/docbook-xsl</filename>
	&gt;= 1.68.1 および
	<filename role="pkg">textproc/docbook-website</filename>
	&gt;= 2.6.0nb1 が必要です
	(<filename role="pkg">meta-pkgs/netbsd-www</filename> 1.4
	が依存していますが、これより前のバージョンではもっと古いバージョンの
	ツールも許容しており、問題がある場合があります)。
	なお、 LOCALBASE および PKG_SYSCONFBASE の値は
	htdocs の makefile でも使われているため、これらの変数値を
	<filename>/etc/mk.conf</filename> で変更する場合は、
	BSD_PKG_MK で保護され<emphasis>ない</emphasis>形で定義してください。
    </listitem>
    <listitem>CVSROOTを指定通りに設定し、
	<para><programlisting>cvs checkout htdocs</programlisting></para> を実行してください。
    </listitem>
    <listitem>目的のファイルを編集して、 (必要があれば)
      <code><emphasis role="bold">make</emphasis></code>
      とタイプして、出力されるファイルを再構築してください。
    </listitem>
    <listitem>編集結果を
      <code><emphasis role="bold">cvs diff</emphasis></code> を使って確認したうえ、
      問題がなければ <code><emphasis role="bold">cvs commit</emphasis></code>
      してください。
    </listitem>
  </itemizedlist>
</para>
</sect3>

<sect3 id="validate-html">
<title>HTMLを有効にする</title>
<para>
    変更した後には、
    <filename role="pkg">www/weblint</filename>
    や、それよりも良いのは
    <ulink url="http://validator.w3.org/">http://validator.w3.org/</ulink>
    のようなHTMLチェッカーで一通りチェックすべきです。
    index.htmlへのリンクをはるURLは、最後のindex.htmlを
    省くべきです。
    weblintをお使いでしたら、<code>~/.weblintrc</code>に以下の記述を
    追加するとよいでしょう。
</para>
<para>
    <programlisting>extension Netscape</programlisting>
</para>
</sect3>

<sect3 id="NetBSD-org">
<title>NetBSD.org の表記法</title>
<para>
    リンク、 mailto その他の参照においては必ず NetBSD.org と書くようにし、
    これ以外の書き方 (&#78;etbsd.org, &#110;etbsd.org, ……など) はしないようにしてください。
</para>
</sect3>

<sect3 id="dotlist-files">
<title>.listファイルとは何者か?</title>
<para>
    <emphasis role="bold"><code>.list</code>
    ファイルは過去の遺物です!</emphasis><html:br/>
    既存の <code>.list</code> ファイルはすべて XML に変換してください。
    詳細は<ulink url="#convert-to-xml">この節</ulink>をご覧ください。
</para>
</sect3>

<sect3 id="convert-to-xml">
<title>XML に変換する</title>
<para>
    全体的な変更が簡単にできるようにするため、現在、 NetBSD の web サイトは
    XML (docbook-website) に変換中です。 2004-11-15 以降、
    XML 以外のファイルを編集する必要があるときは、編集と同時に XML に変換することになっています。
    <code>htutils/scripts/list2xml</code> スクリプトは、通常の <code>.html</code>
    ファイルの変換のほか、旧来の <code>.list</code> の変換にも役立つでしょう。
    ただし、このスクリプトはタグの単純な置換をいくつかするだけであり、
    実行後に多くの手作業が必要ですので、どうぞご注意ください。
    特に、すべてのタグを適切な順序で閉じることが必要です。
</para>
<para>
    <code>.xml</code> ファイルを生成あるいは変換した際には、各
    <code>&lt;table&gt;</code> タグや <code>&lt;sect[1-4]&gt;</code> タグに
    <quote>id</quote> 属性をつけたことを確認してください。これは、
    <command>xsltproc</command> が独自に ID 属性を生成して、
    <code>.html</code> ファイルを再生成する度に
    ID 属性が更新されることがないようにするためです。
    また、 <quote>&amp;</quote> は <quote>&amp;amp;</quote> に、
    <filename>/sys</filename> は <filename>/usr/src/sys</filename> に、
    適宜置きかえてください。
</para>
<para>
    ある HTML タグを、等価な XML に変換する方法がわからない場合は、
    システムにインストールされている
    <filename role="pkg">textproc/docbook-website</filename>
    のなかに便利な例があるかもしれません。そしてもちろん、
    www@ メーリングリストに遠慮なく助けを求めていただいて結構です。
</para>
<para>
    目次を自動生成する場合は、以下のコードを含めておきます。
    <programlisting>&lt;sect1 role="toc"&gt;</programlisting>
    これを含めておくと、すべての <code>&lt;sect2&gt;</code> に、
    その配下の <code>&lt;sect3&gt;</code> がぶら下がった形の目次が生成されます。
</para>
<para>
    ファイルを XML に変換した後は、そのファイルを <code>htdocs/layout.xml</code>
    ファイルに書き加えて web サイトを再生成することを忘れないでください。
    詳細は<ulink url="#dotxml-files">この後の項目</ulink>をご覧ください。
</para>
<!--
XXX: put back when we do switch
<para>
    Finally, remember that as of 2005-02-05 file generated
    <emphasis>from</emphasis> XML need no longer be added to CVS, as these
    files are generated <ulink url="#webserver">on nbwww</ulink>.  In fact,
    these <quote>object files</quote> will likely be removed from CVS control
    altogether.
</para>
-->
</sect3>

<sect3 id="dotxml-files">
<title>.xml (docbook-website) ファイルの取扱手順</title>
<para>
    .xml ファイルから .html ファイルを構築するためには、少なくとも
    <filename role="pkg">textproc/libxslt</filename> と
    <filename role="pkg">textproc/docbook-website</filename>
    をインストールしておく必要があります。これらは <filename
    role="pkg">meta-pkgs/netbsd-www</filename>
    に含まれています。
    <filename role="pkg">meta-pkgs/netbsd-www</filename> のバージョンが 1.4
    であることを確認してください。
</para>
<para>
    .html ファイルを生成するには、対象のディレクトリーで
    <code><emphasis role="bold">make</emphasis></code> を実行するだけです。
    .html ファイルに正しい "Generated from" が含まれるようにするため、
    必ず、 .xml ファイルを commit した後に .html ファイルを生成してください。
</para>
<para>
    <filename>layout.xml</filename> にファイルを追加した場合は、
    htdocs の最上層で <command>make</command> を実行する必要があります。
</para>
</sect3>

<sect3 id="moving-files">
<title>ファイル名を変更またはファイルを移動する</title>
<para>
htdocs 以下でファイルの移動や名称変更をする場合は、以下の手順をとることを
推奨します:

<itemizedlist>
 <listitem>ファイルを元の場所から移動後の場所にコピーします</listitem>
 <listitem>元のファイルの html を書き換えます:
   <itemizedlist>
     <listitem>ヘッダー内に
         <code>&lt;META HTTP-EQUIV=Refresh CONTENT="5; URL=new-location"&gt;</code>
         というタグを含めます</listitem>
     <listitem>ヘッダーとフッター以外の内容をすべて消します</listitem>
     <listitem>ページが移動した旨の記述を加え、
         新しい場所へハイパーリンクさせておきます</listitem>
   </itemizedlist></listitem>
  <listitem>新しいファイルを cvs add します</listitem>
  <listitem>ファイルの移動について <filename>htdocs/errors/index.xml</filename> に記載し、
      新しい場所へリンクさせておきます
  </listitem>
  <listitem>移動の時期や理由を cvs で参照できるようにするために、
      新しいファイルと変更後の古いファイルを、同時に
      cvs commit します
  </listitem>
</itemizedlist>
</para>
</sect3>

<sect3 id="flaglinks">
<title>旗リンクの後に empty.gif がくっついているのは、何か理由があるのか?</title>
<para>
    各ページの最後にあるNetBSDの'旗' リンクには以下のものがあります:
    <itemizedlist>
    <listitem>altタグがないnetbsd-bannerを含むhref</listitem>
    <listitem>"NetBSD" と書いたaltタグと"ホームページ" という単語を付けたempty.gifを
        含むhref</listitem>
    </itemizedlist>
    このような効果があります:
    <itemizedlist>
    <listitem>lynxでは、たとえばNetBSDリンクとホームページリンクと二つに
        分けるのではなく、"NetBSD ホームページ" リンクという具合に
        一つのリンクにします。</listitem>
    <listitem>netscapeでは、追加のテキストをセンタリングし、"見栄えよく" 配置します。
        これがないと、少なくともnetscapeでは、縦方向にはセンタリングされず、
        下に表示され、画像が隣り合せになります (あるいは、スペースをいれれば、
        私にはおかしく見える醜い下線つきの空白が入ります) 。</listitem>
    </itemizedlist>
    ひどいやり方ではありますが、きちんと表示してくれます。
</para>
</sect3>

  <sect3 id="templates">
    <title>XML テンプレートファイル</title>

    <para>
      XML を書き始める人のために、<filename>htutils/templates</filename>
      以下にテンプレートファイルをいくつか用意してあります。
      内容を書き加える場合は、既存のページと見比べてみてください。
    </para>
  </sect3>

<sect3 id="webserver">
<title>ページが web サーバーに反映される方法や時間はどうなっているか?</title>
<para>
    NetBSD の web ページは CVS の "htdocs" リポジトリーに蓄積されます。
    セキュリティー上の理由から、この htdocs リポジトリーは、毎時間ごとに
    www.NetBSD.org に (rsync を使って) コピーされ、
    そのコピーからローカルにチェックアウトされています。
    <!-- As of 2005-02-05, nbwww builds the
    website from the CVS checkout in a staging directory, then copies any
    modified files into the live website under
    <quote><code>/NetBSD-www</code></quote>. -->
    これをおこなうスクリプトは <filename>htutils/scripts/update.http</filename>
    にあり、毎時 40 分ごろに実行されます。
    htdocs をコミットすると、
    それが公開されるまでに最大一時間かかることになります。
</para>
<para>
    ただし、 Gnats データベース (<ulink url="http://www.NetBSD.org/Gnats/"/>) 、
    Changes/changes*.html や Changes/pkg-changes*.html にある pkgsrc
    とソースの変更点、 Changes/rss-*.xml にある RSS ファイルなど、
    一部のファイルについては htdocs には含まれず、 web サーバー上の
    cron ジョブディレクトリーで各種スクリプトを使って生成されています。
    これらのスクリプトへアクセスするには、 "htutils/changes/*"
    をチェックアウトします。
</para>
</sect3>

</sect2>

<sect2 id="structure">
<title>web サイト全体の構造はどうなっているか?</title>

<sect3 id="structure-overview">
<title>概観</title>

	<para></para>

</sect3>

<sect3 id="structure-directories">
<title>各ディレクトリーの役割は?</title>

	<variablelist>

	<varlistentry><term><filename>share/mk</filename></term>
	<listitem><para>ソースファイルからの
	web ページの構築を自動化するための
	&man.make.1; の基盤があります。</para></listitem></varlistentry>

	<varlistentry><term><filename>share/xml</filename></term>
	<listitem><para>[TODO]</para></listitem></varlistentry>

	<varlistentry><term><filename>share/xsl</filename></term>
	<listitem><para>[TODO]</para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	</variablelist>

</sect3>

<sect3 id="structure-files">
<title>各ファイルの役割は?</title>

	<variablelist>

	<varlistentry><term><filename>Makefile</filename></term>
	<listitem><para>そのディレクトリーの内容の説明が書かれています。
	通常は、<varname>SUBDIR</varname> および <varname>XMLDOCS</varname>
	の各変数を定義してから、適切なパスを使って
	<filename>htdocs/share/mk/web.site.mk</filename> ファイルを
	<command>.include</command> しています。</para></listitem></varlistentry>

	<varlistentry><term><filename>*.xml</filename></term>
	<listitem><para>一つの HTML ページに対応するソースコードが、
	<quote>DocBook Website</quote> 形式で書かれている
	XML ファイルです。</para></listitem></varlistentry>

	<varlistentry><term><filename>layout.xml</filename></term>
	<listitem><para>[TODO]</para></listitem></varlistentry>

	<varlistentry><term><filename>autolayout.xml</filename></term>
	<listitem><para>[TODO]</para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	</variablelist>

</sect3>

<sect3 id="structure-maintainer">
<title>各ファイルの保守担当者は?</title>

	<para><filename>htdocs</filename> のファイルの一部は、
	他のプロジェクトと共有されており、 &os; プロジェクト外で活発に保守されています。
	ファイルの変更時に何を検討する必要があるかについては、
	以下の一覧が参考になるでしょう。</para>

	<variablelist>

	<varlistentry><term><filename>share/mk</filename></term>
	<listitem><para>[TODO]</para></listitem></varlistentry>

	<varlistentry><term><filename>share/xml</filename>, <filename>share/xsl</filename></term>
	<listitem><para>[TODO]</para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	<varlistentry><term><filename></filename></term>
	<listitem><para></para></listitem></varlistentry>

	</variablelist>

</sect3>

</sect2>

<sect2 id="specific">
<title>特定のエリアへ追加する</title>

<sect3 id="adding-gallery-entries">
<title><quote>NetBSDを稼働させているサイト</quote> のギャラリーを追加する</title>
<para>
<ulink url="../../gallery/addsite.html">htdocs/gallery/addsite.html</ulink>ページから送信された
<code>NETBSD GALLERY ADDITION</code> 電子メールを受け取った場合は、こうします:
<orderedlist>
  <listitem>当該サイトに www.NetBSD.org へ戻るリンクがあることを確認します。
    ない場合は、戻るリンクを追加するよう当該サイトに依頼し、
    戻るリンクが用意されてからそのサイトの情報を追加します。</listitem>
  <listitem>perlがインストールされているか確認します</listitem>
  <listitem>コピー/ペースト用のバッファーにメッセージを保存します</listitem>
  <listitem><code>cd htdocs/gallery</code>します</listitem>
  <listitem><code>./addsite.pl</code> を実行して、バッファーの内容をペーストしてから ^D でペーストを終え、
      それが正しく扱われていれば '<code>y</code>'と答えます</listitem>
  <listitem><code>cvs commit</code>します</listitem>
</orderedlist>
手で<code>htdocs/gallery/sites.data</code>を編集し、
<code>make</code>を実行する方法もあります。
</para>
</sect3>

<sect3 id="adding-gallery-screenshots">
<title><quote>NetBSD in action</quote> のギャラリーに追加する</title>
<para>
できれば、スクリーンショットにはそれが
&os; システムのものであることが簡単にわかるような内容を含めてください。
簡単な方法は、 X 端末で
<command>uname -a</command> コマンドの出力を表示しておくことです。
</para>
</sect3>

<sect3 id="adding-news-items">
<title>ニュースの項目を追加する</title>
<para>
ほとんどのニュース項目は<ulink url="../Changes/">htdocs/Changes/index.xml</ulink>にあります
(<ulink url="#dotxml-files">.xml ファイル</ulink>に関する記述をごらんください) 。
特定のポートに影響する変更はhtdocs/Port/*/にあるニュースの章からも
リンクをはってください。
</para>
<para>
重要なコードのニュース項目は
<currentsrc>src/doc/CHANGES</currentsrc>
ファイルにも記述すべきです。
</para>
<para>せっかちな人向けのお手軽 ``howto'' (ただし、詳細な説明も読んでください):
<itemizedlist>
  <listitem>cd htdocs/Changes</listitem>
  <listitem>make update</listitem>
  <listitem>${EDITOR} index.xml</listitem>
  <listitem>make</listitem>
  <listitem>make MSG="I added important NEWS!" commit</listitem>
</itemizedlist>
</para>

<sect4 id="before-anything">
<title>htdocsに変更を加える前に:</title>
<orderedlist>
  <listitem><filename
    role="pkg">meta-pkgs/netbsd-www</filename> がインストールされていることを確認します。
    <ulink url="#what-is-required">前の項目</ulink>もご覧ください。</listitem>
  <listitem>CVSリポジトリーから<code>htdocs</code>をチェックアウトします。</listitem>
  <listitem>htdocs ツリーのコピーがすでにある場合は、定期的に更新するように
    してください。特に、ニュース項目を追加する際には、 gallery/events.*
    も最新の状態になっていなければなりません。このファイルから今後のイベントを
    抜き出して利用しているからです。以下のようにすれば一番よいでしょう。
    <programlisting>
  $ cd htdocs
  $ make update</programlisting>
  </listitem>
</orderedlist>
</sect4>

<sect4 id="change-entry">
<title>変更項目を付け加えるには:</title>
<orderedlist>
  <listitem>htdocs/Changes/index.xml を編集します</listitem>
  <listitem>適切な節に、以下のような形式で項目の本体を追加します
    <programlisting>
  &lt;sect3 id="link-name&gt;
  &lt;title&gt;XX Mon XXX - 自由形式のタイトル&lt;/title&gt;
  &lt;para&gt;
    項目の本文をここに書きます。マニュアルページは <quote>&amp;man.command.X;</quote> として、
    email アドレスは &lt;email&gt;full@address&lt;/email&gt; として参照できます。
  &lt;para&gt;
  &lt;/sect3&gt;</programlisting>
  </listitem>
  <listitem>'<code>make</code>' を実行します。</listitem>
</orderedlist>
</sect4>

<sect4 id="adding-links">
<title>メインページからのリンクを追加するには:</title>
<para>
htdocs/Changes で <code>make</code> を実行すると、
<ulink url="../">htdocs/index.html</ulink> と翻訳されている各言語の index
ページが自動的に更新されます。それ以上なにかする必要はありません。
</para>
<para>
こうするかわりに、 htdocs 最上層のディレクトリーで <code>make index</code>
を実行するという方法も使えます。
</para>
</sect4>

<sect4 id="link-specific">
<title>特定のポートのページからリンクをはるには:</title>
<orderedlist>
  <listitem>htdocs/Ports/<emphasis>arch</emphasis>/index.html を編集して、
    '&lt;!-- news --&gt;' ブロックを探します。</listitem>
  <listitem>新しい項目を以下の形式でリストの後ろに追加します:
    <para>
    <programlisting>&lt;dt&gt;&lt;b&gt;<emphasis>日付</emphasis>:&lt;/b&gt; <emphasis>タイトル</emphasis>
    &lt;dd&gt;<emphasis>記事の本文</emphasis>
    &lt;p&gt;</programlisting>
    </para>
    それぞれの項目は以下のように書きます
    <itemizedlist>
    <listitem><emphasis>日付</emphasis> - 通常通り YEAR.MONTH.DATE</listitem>
    <listitem><emphasis>タイトル</emphasis> - 自由形式の (短い) テキストタイトル</listitem>
    <listitem><emphasis>記事の本文</emphasis> - 項目用の自由形式のテキスト。
        複数行あけたり、HTMLタグやリンクを使ったりすることもできます。</listitem>
    </itemizedlist>
</listitem>
</orderedlist>
</sect4>

<sect4 id="finally">
<title>最後に:</title>
<orderedlist>
  <listitem>変更したファイルの<ulink url="#validate-html">HTML
    をチェック</ulink>します。</listitem>
  <listitem>ファイルをチェックインします。 htdocs 最上層のディレクトリーで
    'make commit' コマンドを実行すると、メインの index ページ、
    Changes/index.* と翻訳されている各言語の index ページが、
    デフォルトメッセージ "NEWS; regen" でコミットされます。
    何かメッセージを追加したければ 'MSG="Added News regarding FooBar" make
    commit' のようにします。</listitem>
  <listitem>特に重要なニュースの場合、以下のようなニュースサイトに投稿するというのは、
    よい考えです:
    <ulink url="http://daily.daemonnews.org/add_story.php3">Daily Daemonnews</ulink>,
    <ulink url="http://www.osnews.com/submit.php">OSNews</ulink>,
    <ulink url="http://slashdot.org/submit.pl">Slashdot</ulink>,
    <ulink url="http://www.newsforge.com/submit.pl">Newsforge</ulink>,
    <ulink url="http://www.bsdforums.org/submitnews.php">BSDForums</ulink>.
   </listitem>
</orderedlist>
</sect4>

</sect3>

<sect3 id="adding-events">
<title>イベントを追加する</title>
<para>
メインの index ページには "Upcoming Events" (これからのイベント) というリンクもあります。
このリンクは <ulink url="#adding-news-items">News entries</ulink> 同様に自動的に更新されます:
</para>
<para>
  <programlisting>
cd .../htdocs/gallery
$EDITOR events.xml
make events</programlisting>
</para>

<para>
このイベントのリンクは翻訳された各言語の index ページにもありますので、
翻訳ページもすべて生成してコミットする必要があります。これは、
htdocs ディレクトリーで 'make index' コマンドを使って行なうことができます。
</para>
<para>
  <programlisting>
cd .../htdocs
make index
MSG="Added Event Foo" make commit</programlisting>
</para>
</sect3>

<sect3 id="adding-mailinglists">
<title>メーリングリストのページへの追加や編集をする</title>
<para>
<ulink url="../MailingLists/">メーリングリスト</ulink>
ページに載っていないメーリングリストがある場合の手順:
<orderedlist>
  <listitem>htdocs/MailingLists/index.xml と htdocs/MailingLists/list2group.xsl ファイルを編集します。</listitem>
  <listitem>htdocs/MailingLists にある makefile を実行します。これで
    index.html が作られます。</listitem>
  <listitem>html ファイルがうまく作られているか確認します。</listitem>
  <listitem>index.xml と list2group.xsl ファイルをコミットします。</listitem>
  <listitem>index.html に適切な "Generated from" を含めるために、このファイルを作り直します。</listitem>
  <listitem>作り直した index.html ファイルをコミットします。</listitem>
</orderedlist>
</para>
</sect3>

<sect3 id="consultants">
<title>雇用コンサルタント</title>
<para>
「雇用コンサルタント」ページ (<ulink
url="../../gallery/consultants.html">gallery/consultants.html</ulink>) に項目を追加する場合は、
あらかじめ、相手方の web サイトに私たちのホームページに戻るためのリンクを用意することや、
そのサイトで NetBSD に触れることを、関係者に頼んでおいてください。
もちろん、相手方の URL が生きていてアクセス可能であることも確認する必要があります。
</para>

</sect3>
</sect2>
</sect1>
</webpage>
