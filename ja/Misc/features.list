<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<!-- Copyright (c) 1994-2003
	The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED. -->
<link rev="made" href="mailto:www@NetBSD.org">
<title>NetBSD features</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">

<h1>NetBSD Features</h1>

The features listed below are all available in the base system,
which is compiled from a single source tree.

<LIST>

<SECTION>About NetBSD

<ENTRY>clean-design Clean design
    NetBSD focuses on clean design and well architected solutions.
    Because of this NetBSD may support certain 'exciting' features
    later than other systems, but as time progresses the NetBSD
    codebase is getting even stronger and easier to manage, while
    other systems that value features over code quality are finding
    increasing problems with code management and conflicts.
    <p>
    NetBSD supports a <a href="#multi-platform">massive range of
    hardware platforms </a> from a single source tree, including
    simultaneous release across all platforms, and continues to
    attract users and experienced developers despite lack of media
    exposure and commercial backing - all thanks to attention to
    code quality.

<ENTRY>multi-platform Wide platform support
    NetBSD is designed to take advantage of the latest high end
    hardware available in Alpha, PowerPC, and PC systems, while still
    retaining support for older architectures. This is all done
    from the same source tree and is only possible due to the
    emphasis on correct design and clean code. It also makes NetBSD
    an ideal codebase to port to new machines and embedded platforms, such as
    <a href="../Ports/hpcmips/">mips</a>,
    <a href="../Ports/hpcarm/">ARM</a> and
    <a href="../Ports/hpcsh/">Super-H</a>
    based handheld Windows CE devices. 

<ENTRY>bsd-licence BSD licence
    While it uses the EGCS compiler, and certain other GNU tools,
    the entire kernel and the core of the userland utilities are
    shipped under a BSD licence. This allows companies to develop
    products based on NetBSD without the requirement to make changes
    public (as with the GPL). While the NetBSD Project encourages
    companies and individuals to feed back changes to the tree, we
    respect their right to make that decision themselves.

<ENTRY>source-availability Full source availability
    NetBSD makes the full source available, both the source code
    and the full CVS repository. Since everything is in the
    <em>same</em> source tree, you can always access any version
    of all files.  We were not the first BSD to make a CVS repository
    available, but we were the only one to meticulously check every
    file and remove only those revisions that contained tainted
    USL code, rather than discarding every revision before an
    arbitrary date.

<ENTRY>security Security
    NetBSD has the least number of security bugs reported in any public
    forums (such as bugtraq). We believe in security without the hype.
    We do manual code audits and add extended checking capabilities
    to our toolchain. Retrieval of kernel data is geared towards a sysctl
    cased approach, as opposed to the traditional Unix based kmem access,
    which requires full access to the whole system, and is often exploited. 

<ENTRY>stability Mature and stable
    The BSD codebase can be traced back to the early 80s at UC
    Berkeley, and has been open to public scrutiny ever since.
    NetBSD continues this tradition and works ever harder to promote
    clean design and functionality over hype.  NetBSD is being used
    at NASA's Numerical Aerospace Simulation facility for a reason.
    Their main platforms are Alpha systems with lots of RAM and
    diskspace (terabyte and up), and they need a good, stable,
    codebase on which they can build custom projects.
    NetBSD was also the first free OS to make a y2k statement.
    See our <a href="../gallery/testimonial.html">testimonials</a> for
    more success stories!  

<ENTRY>hype-free Hype free
    Probably the only thing you won't get with NetBSD is the media
    hype. You'll need to get that somewhere else.


<SECTION>Networking

<ENTRY>ipf Packet filtering and Network Address Translation (NAT)
    NetBSD ships with an in-kernel packet filtering engine, allowing
    filtering of traffic based on interface, protocol, port tos,
    ttl, source destination and many other factors.  Keeping this
    inside the kernel permits higher performance.
    <p>
    Network Address Translation can permit a local network of
    machines to use one set of addresses internally, and a different
    set (or even single IP address) externally. This can be used
    for security or simple convenience reasons, and also includes
    a transparent FTP proxy.  Again this is all kept inside the
    kernel for higher performance.

<ENTRY>ipv6 IPv6
    NetBSD was the first free OS to provide a leading edge standards
    conforming IPv6 implementation, and we continue to work with the
    <a href="http://www.kame.net/">KAME</a> project to track changes
    to the specification.  NetBSD was also the first free operating
    system to ship with NFS via IPv6, for both client and server
    part. 

<ENTRY>nfs Network File System (NFS)
    NetBSD provides complete in-kernel NFS client and server support,
    interoperable with other systems, for both NFS2 and NFS3
    protocols.  This includes support for swapping over NFS, and
    no arbitrary limits on the size of swap partitions. Client side
    file creation is correctly implemented as an atomic operation
    - on systems without this dot locking is not reliable.

<ENTRY>network Comprehensive and robust networking
    NetBSD supports the following network types:
    <ul>
	<li>ARCnet
	<li>ATM
	<li>Ethernet
	<li>FDDI
	<li>HIPPI
	<li>PPP - pppd(8)
	<li>SLIP - slip(8)
	<li>Token Ring
    </ul>
    In the process of ARCnet support the ARP subsystem was reworked to
    remove Ethernet dependencies and to be more generally applicable.
    <p>
    NetBSD also supports the following network protocols:
    <ul>
	<li>Appletalk - atalk(4)
	<li>ISO - iso(4)
	<li>TCP/IP (IPv4) - ip(4)
	<li>TCP/IP (IPv6) - ip6(4)
    </ul>
    <p>
    NetBSD also ships with many standard networking daemons, with built
    in tcp wrappers support where appropriate, including
    bootparamd(8), bootpd(8), dhcpd(8),
    ftpd(8), identd(8), mopd(8), named(8), postfix(1), rarpd(8),
    rbootd(8), sendmail(8), sshd(8), tftpd(8), and xntpd(8).

<ENTRY>wireless Wireless networking
    NetBSD supports a long list of IEEE 802.11 based wireless
    networking devices, see an(4), wi(4), ray(4), awi(4) and cnw(4). 
    <p>

<SECTION>Storage

<ENTRY>raid Hardware and software RAID
    In addition to many standalone SCSI RAID devices, NetBSD
    supports a variety of RAID controllers and a complete software RAID 0,
    1, 4, 5, and 6 system in RAIDframe.  (<a
    href="http://www.cs.usask.ca/staff/oster/raid.html">More
    details</a>)

<ENTRY>pciide High performance PCI IDE
    Many recent PCI IDE controllers support high speed DMA transfers.
    NetBSD is one of the few systems to take advantage of these
    features 'out of the box'. Due to NetBSD's clean design the
    same drivers and features are available on <a
    href="../Ports/i386/">alpha</a>, <a href="../Ports/i386/">i386</a>,
    and <a href="../Ports/i386/">macppc</a>.

<ENTRY>scsipi SCSIPI subsystem - combined SCSI and ATAPI
    NetBSD implements a unified SCSIPI subsystem, avoiding code
    duplication and allowing a common userland SCSI and ATAPI
    interface for many devices.  As a direct result of this, when
    ATAPI CD-R units became available existing tools such as
    <PKGSRC>sysutils/cdrecord worked with them without any need
    for modification.

<ENTRY>large-filesystems 64-bit filesystems
    NetBSD has shipped with 64-bit filesystems since the 1.0 release
    in October 1994. Under NetBSD berkeley fast filesystems can be
    up to 4TB (4096GB) in size, on both 64 and 32 bit machines.
    Files and user file quotas can also reach terabytes.  Many
    other systems limit filesize to 4GB on 32bit machines.
    <p>
    An ffs can have up to 2^31 fragment blocks - the maximum
    filesystem size is dependent on the fragment size:
    <table>
    <tr><th>Frag size</th><th>fs size</th></tr>
    <tr><td>512 bytes</td><td>1 TB</tr>
    <tr><td>1kB      </td><td>2 TB</tr>
    <tr><td>2kB      </td><td>4 TB</tr>
    </table>

<ENTRY>large-ide Large IDE disks
    NetBSD fully supports IDE disks of over 34GB in size, including
    booting from partitions beyond 8GB (where the BIOS permits).
    Other systems can suffer from 8GB or 33.4GB limits.

<ENTRY>softupdates Soft Updates on FFS for high performance and reliability
    Soft Updates permit metadata writes to be ordered to achieve
    close to asynchronous disk performance without risk of metadata
    corruption. This significantly improves the performance of FFS
    filesystems.
    (<a href="http://www.ece.cmu.edu/~ganger/papers/CSE-TR-254-95/">More
    details</a>)

<ENTRY>filesystems Many filesystem types
    NetBSD can handle and manipulate many different filesystems,
    which is useful for both data exchange and <a
    href="#emulation">binary compatiblity</a>. Systems can also
    optionally mount filesystems writing with opposing byte ordering.
    Note that unlike some other systems NetBSD imposes metadata
    write ordering, allowing fsync(2) to be used to avoid important
    data loss in the event of power failure, even on ext2fs.
    <ul>
    <li><strong>ffs</strong> (Berkeley Fast File System) - both
	the latest 64 bit FFS, including <a href="#softupdates">soft
	updates</a>, and the older 32bit FFS used by some vendors
	(SunOS, Ultrix, etc).
    <li><strong>lfs</strong> (Log-structured File System) - lfs
	is designed to allow safe asynchronous file creation, fast
	file writes without intervening head seek and near-instantaneous
	crash recovery.  This is a more completely log structured
	form of 'Journaled' filesystems such as IRIX's XFS, Reiserfs,
	Microsoft's NTFS, IBM's JFS, and similar filesystems in
	Netware and Unixware.
	(<a href="http://www.hhhh.org/perseant/lfs.html">More details</a>).
    <li><strong>iso9660</strong> (Standard CD filesystem, supports
        Rockridge and Joliet extensions).
    <li><strong>msdosfs</strong> (Windows, MS-DOS, and Atari TOS) -
	including long filenames, FAT32 and VFAT.
    <li><strong>ntfs</strong> (Windows NT native filesystem)
    <li><strong>ext2fs</strong> (Linux extended filesystem).
    <li><strong>ados</strong> (AmigaDOS file system).
    <li><strong>filecorefs</strong> (Acorn RISC OS filesystem).
    </ul>
    <p>NetBSD also has a range of virtual filesystem types, including:
    <ul>
    <li><strong>kernfs</strong> - access kernel information
    <li><strong>nullfs</strong> - for loopback mounts
    <li><strong>portal</strong> - portal daemon filesystem
    <li><strong>procfs</strong> - access process information
    <li><strong>umapfs</strong> - automatically remap uids and gids
    <li><strong>unionfs</strong> - attaches a directory in such a
	way that the contents of both directory trees remain visible.
	This can be used to mount a writable filesystem over a CD-Rom.
    </ul>

<ENTRY>dvd DVD ROM and RAM
    NetBSD supports large capacity DVD drives for reading data in
    the common DVD filesystems available nowadays.

<SECTION>Other Features

<ENTRY>pkgsrc The package system (applications)
    The <a href="../Documentation/software/packages.html">package
    system</a> (pkgsrc) provides easy source or binary installation
    of a large number of third party applications.  It includes
    all the essentials such as <PKGSRC>x11/kde2, <PKGSRC>x11/gnome,
    Mozilla <PKGSRC>www/mozilla, 
    Netscape <PKGSRC>www/communicator and <PKGSRC>www/navigator,
    <PKGSRC>www/apache, <PKGSRC>lang/perl5, <PKGSRC>net/samba, 
    <PKGSRC>misc/staroffice, <PKGSRC>graphics/gimp,
    and more.  Features include:
    <ul>
    <li>Easy install from local or remote binary packages, including
	automated download of any required packages.
    <li>Handles fixed and wildcard dependencies both when building from
        source and installing binary packages.
    <li>Allows automated installation for tools than cannot be redistributed
	in binary or source form.
    <li>Provides an infrastructure designed to keep the information
	required to build each package both shorter and easier to
	maintain than in other package systems.
    <li>Follows the concept of "pristine source", allowing both
        easy incorporation of local or 3rd part patches as well as 
        submitting changes back to package authors.
    <li>Includes built-in support for the internal structure of many
	common source distributions like Imakefiles, GNU autoconf, ...,
        reducing the need for complicated package specific build rules.
    </ul>
    Pkgsrc was derived from FreeBSD's 'ports' system, but has been
    substantially enhanced.

<ENTRY>mi-drivers Machine independent driver framework
    A clean separation of chipset drivers from bus attach code, and
    implementation of a MI bus_space(9) and bus_dma(9) framework has the
    following advantages:
    <ul>
    <li>Simplifies porting to new hardware.
    <li>Reduces the size of a kernel - devices which use same
       	controller share the same driver, and only the necessary
	bus dependent parts (isa/eisa/pci/pcmcia/sbus/cardbus...)
	are included.
    <li>Device drivers (including 32bit pci devices) are ready
	for 64-bit physical memory. (Unlike many other systems).
    <li>Bounce buffer support is unnecessary on the machines which have
	appropriate hardware (eg. sparc, nearly all alpha), and where
	needed it is a function of the bus code, not each individual
	driver.
    </ul>

<ENTRY>mi-audio Machine independent audio framework
    In a similar fashion to the SCSI subsystem, NetBSD has a generic
    audio layer which attaches to the individual chipset drivers.
    This gives significantly more consistency and code sharing than
    other free OS projects.

<ENTRY>kernel-debugging Kernel debugging
    <ul>
    <li>NetBSD has fully featured in-kernel debugger (DDB), much more
        advanced than some other systems 'SysRQ' type features.
    <li>Supports kernel crash dumps to ease kernel debugging.
    <li>Strict consistency check - if a null pointer is accessed by the
	kernel it will either drop into DDB, or crashdump and reboot
	to avoid running with potentially corrupted data.
    </ul>

<ENTRY>emulation OS emulation
    NetBSD's unique binary compatibility protects users' investment
    in existing applications by in kernel support for non native
    binaries (for the same processor) to run transparently. Systems
    include:
    <ul>
    <li>BSD/OS (i386)
    <li>FreeBSD (i386)
    <li>HP/UX (m68k)
    <li>Linux (i386, m68k, alpha, powerpc)
    <li>OSF1/Digitial UNIX/Tru64 UNIX (alpha)
    <li>SCO/iBCS2 (i386)
    <li>Solaris and SVR4 (sparc, i386, m68k)
    <li>SunOS 4 (sparc, m68k)
    <li>ULTRIX (mips, vax)
    </ul>
    <p>
    Among the more popular binaries supported are:
    <ul>
    <li>Acrobat <PKGSRC>print/acroread reader (Linux)
    <li>Netscape <PKGSRC>www/communicator (Linux, BSD/OS, FreeBSD,
        SunOS, Tru64 UNIX) including Flash playback on i386 using the
        <PKGSRC>graphics/ns-flash package
    <li><PKGSRC>misc/staroffice (Linux)
    <li>Oracle sqlplus client (Solaris/x86)
    <li>Quake (I, II, and III) (Linux)
    </ul>
    Note that some of the install scripts make certain assumptions that may
    require manual intervention - this has all been handled for any programs
    for which <a href="../Documentation/software/packages.html">packages</a>
    are available.
    <p>
    The <a href="../Documentation/software/packages.html">package system</a>
    includes many <PKGSRC>emulators, including
    <ul>
    <li><PKGSRC>emulators/bochs - i386 machine emulator
    <li><PKGSRC>emulators/ia64sim - IA64 (Intel(R) Architecture 64)
    <li><PKGSRC>emulators/plex86 - i386 machine emulator
    <li><PKGSRC>emulators/spim - MIPS R2000 Simulator 
    <li><PKGSRC>emulators/uae - Amiga
    <li><PKGSRC>emulators/wine - Windows emulator
    <li><PKGSRC>emulators/xcopilot - PalmPilot
    <li><PKGSRC>emulators/xmame - Many old arcade and console machines
    </ul>
    See also <a href="#filesystems">supported filesystems</a>.

<ENTRY>usb USB (Universal serial bus)
    NetBSD was the first free OS to provide USB support, and was
    using USB on Apple Power Macintosh machines before Apple had
    MacOS X even booting. The USB support is available on all
    appropriate platforms, including <a href="../Ports/alpha/">alpha</a>,
    <a href="../Ports/i386/">i386</a>, and <a
    href="../Ports/macppc/">macppc</a>.  Supported devices include
    mice, keyboards, modems, and mass storage devices (ZIP), with
    more drivers becoming available as the USB standard develops.

<ENTRY>other-devices Other device support
    <ul>
    <li>Well designed and robust support for ISA PnP (Plug'n'play) devices.
    <li>Raw device access.
    </ul>

<ENTRY>uvm The UVM virtual memory system
    UVM is a new virtual memory system specifically designed to
    provide the I/O and IPC (Inter Process Communication) systems
    with a range of flexible data movement mechanisms.  UVM completely
    replaces the Mach based 4.4BSD VM system, improving virtual
    memory performance over other VM systems.  (<a
    href="../Documentation/kernel/uvm.html">More details</a>)

<ENTRY>cardbus Cardbus
    Support for the 'cardbus' PC-card and PCMCIA sockets found in
    modern laptops is available, including hot-swapping, power
    management  and detaching of devices. 

<ENTRY>wscons wscons machine independent console
     The wscons(4) driver provides support for machine independent
     access to the console. It is composed of a number of cooperating
     modules, in particular:
     <ul>
     <li>hardware support for display adapters, keyboards and mice, see
         wsdisplay(4), wskbd(4), and wsmouse(4).
     <li>terminal emulation modules, such as vt100 and sun.
     <li>compatibility options to support control operations and other
	 low-level behaviour of existing terminal drivers.
     </ul>

<ENTRY>64bit 64-bit clean
    NetBSD was the first free OS to support a 64-bit architecture
    such as the <a href="../Ports/alpha/">alpha</a>, and still
    supports more alpha models than any other. The entire source
    tree has been 64-bit clean for some time, and the <a
    href="../Documentation/software/packages.html">package system</a>
    includes patches to make many third party applications 64-bit
    clean.

</LIST>

<HOMELINK>

<hr>
<address>
  <small>
  <a href="http://www.netbsd.org/cgi-bin/feedback.cgi">(Contact us)</a>
  $NetBSD: features.list,v 1.2 2003/03/25 05:09:41 kawamoto Exp $<br>
  <a href="disclaimer.html">Copyright &copy; 1994-2003
  The NetBSD Foundation, Inc.  ALL RIGHTS RESERVED.</a>
  </small>
</address>

</body>
</html>
