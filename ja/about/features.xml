<?xml version="1.0" encoding="ISO-2022-JP"?>
<!DOCTYPE webpage
  PUBLIC "-//NetBSD//DTD Website-based NetBSD Extension//EN"
    "http://www.NetBSD.org/XML/htdocs/lang/share/xml/website-netbsd.dtd">

<webpage id="ja-about-features">
<config param="desc" value="NetBSD の特徴"/>
<config param="cvstag" value="$NetBSD: features.xml,v 1.8 2008/03/09 00:43:30 weinem Exp $"/>
<!-- Based on english version: -->
<!-- NetBSD: features.xml,v 1.8 2008/03/09 00:43:30 weinem Exp   -->
<config param="rcsdate" value="$Date: 2008/03/09 00:43:30 $"/>
<head>
<title>NetBSD の特徴</title>
</head>


<sect1 id="top">

<para>
以下に掲げる特徴は、いずれも、
単一のソースツリーから構築される基本システムで実現されているものです。
</para>
</sect1>

<sect1 role="toc">

<sect2 id="about">
<title>NetBSD について</title>

<sect3 id="clean-design">
<title>きれいな設計</title>
<para>
    NetBSD は、きれいな設計とうまく構成された解決に注力しています。
    これにより、NetBSD の「刺激的な」機能への対応は、
    確かに他のシステムより遅れるかもしれません。
    しかし、コードの品質よりも機能を重視する他のシステムでは、
    コード管理上の問題や矛盾が増えていきますが、
    NetBSD のコードベースは、時間がたつにつれ管理しやすくなり、
    より強靭なものにさえなるのです。
    </para>
    <para>
    NetBSD は、単一のソースツリーをもとに<ulink url="#multi-platform">
    幅広い範囲のハードウェアプラットフォームに対応</ulink>し、
    すべてのプラットフォームで同時にリリースをしており、
    また、メディアへの露出や商用の支援が不足しているにもかかわらず、
    多くのユーザーや経験を積んだ開発者を魅了し続けています
    -- これらはすべて、コードの品質への配慮のたまものです。
</para>
</sect3>

<sect3 id="bsd-licence">
<title>BSD ライセンス</title>
<para>
    NetBSD は、GNU の toolchain (コンパイラー、アセンブラーなど) や、
    その他にもいくらか GNU のツールを使ってはいますが、
    完全なカーネルと基本的なユーザーランドユーティリティーは
    BSD ライセンスのもとで配布されています。このため、企業が
    NetBSD をもとに製品を開発する際、(GPL のように)
    その成果を公共に供する必要はありません。NetBSD プロジェクトでは、
    企業や個人がおこなった変更点をソースツリーに還元していただきたいとは思いますが、
    彼らがしたいようにする権利を尊重します。
</para>
</sect3>

<sect3 id="source-availability">
<title>全ソースを公開</title>
<para>
    NetBSD ではすべてのソース (ソースコードと全 CVS リポジトリーの両方)
    を公開しています。すべてが<emphasis>単一の</emphasis>ソースツリーに含まれるため、
    常に全ファイルの各バージョンにアクセス可能です。NetBSD は
    CVS リポジトリーを公開した最初の BSD ではありません。しかし、
    USL との和解日以前のすべてのリビジョンを捨てたりせず、
    すべてのファイルを細心に検査して
    USL に汚染されたコードを含むリビジョンのみをすべて削除した、
    という点では唯一のものなのです。
</para>
</sect3>

<sect3 id="security">
<title>セキュリティー</title>
<para>
    NetBSD は、(bugtraq などの) 公開された討論の場で
    セキュリティーバグの報告がもっとも少ないものになっています。
    誇張抜きで、私たちはセキュリティーの価値を信じています。
    私たちは手動でのコード監査をおこなったり、
    toolchain を拡張して検査機能を追加したりしています。
    カーネルデータの取得は、伝統的な Unix の kmem アクセス
    (これはシステム全体への無制限のアクセスが必要であり、
    しばしば穴をつかれています) とは異なり、
    sysctl にもとづく手法に調整されています。
</para>
</sect3>

<sect3 id="stability">
<title>成熟と安定</title>
<para>
    BSD のコードベースは 80 年代の UC バークレーにまで遡ることができ、
    当時からずっと一般に公開され吟味されてきました。
    NetBSD はこの伝統を受け継ぎ、というかさらに熱心に、
    きれいな設計と見かけだおしではない機能の推進に取り組んでいます。
    NetBSD は NASA の Numerical Aerospace Simulation facility
    で使われていますが、これには理由があります。
    NASA の主なプラットフォームは大量の RAM とディスク容量 (テラバイト以上)
    を持つ Alpha システムであり、NASA では、
    各プロジェクトの構築基盤として使える、良質で安定したコードベースを必要としているからです。
    NetBSD は、 y2k 声明を出した最初のフリー OS でもあります。
    さらなる成功例については、
    私たちの<ulink url="../../gallery/testimonial.html">感謝状</ulink>をご覧ください。
</para>
</sect3>

<sect3 id="hype-free">
<title>誇張なし</title>
<para>
    おそらく、NetBSD で得られない唯一のものは、メディアの誇大広告です。
    そのようなものをお望みなら、別のものをあたってください。
</para>
</sect3>

</sect2>
<html:hr />

<sect2 id="networking">
<title>ネットワーキング</title>

<sect3 id="ipf">
<title>パケットフィルタリングとネットワークアドレス変換 (NAT)</title>
<para>
    NetBSD にはカーネル内パケットフィルタリングエンジンが附属しており、
    インターフェース、プロトコル、ポート、tos、ttl、送信元、宛先、
    その他多くの条件に基づいてトラフィックのフィルタリングができます。
    カーネルに内蔵することで、高い性能が得られます。
    </para>
    <para>
    ネットワークアドレス変換によって、ローカルネットワークのマシンが、
    内部向けにはあるアドレスの集合を使い、外部向けには別のアドレスの集合
    (単一の IP アドレスにもできます) を使うようにできます。
    これはセキュリティーや単に利便性の理由で使えますし、また、
    FTP の透過プロキシーを含んでいます。これもまた、高性能を得るために
    すべてカーネルに内蔵されています。
</para>
</sect3>

<sect3 id="ipv6">
<title>IPv6</title>
<para>
    NetBSD は、最先端の標準である IPv6 の実装を提供したフリー OS
    として最初のものであり、私たちは <ulink url="http://www.kame.net/">KAME</ulink>
    プロジェクトと共に、仕様の変更を追うための作業を続けています。
    NetBSD は、IPv6 上の NFS にクライアントとサーバー双方で対応したフリー OS
    として最初のものでもあります。
</para>
</sect3>

<sect3 id="nfs">
<title>ネットワークファイルシステム (NFS)</title>
<para>
    NetBSD では、NFS クライアントおよびサーバーにカーネル内蔵で完全対応しており、
    NFS2 および NFS3 プロトコルのいずれでも、
    他のシステムとの相互運用が可能です。これは NFS を介したスワッピングも含んだ話であり、
    また、スワップパーティションのサイズには一切制限がありません。
    クライアント側のファイル作成は不可分な操作として適切に処理されます
    ─これは、このロックのないシステムでは不確実になるものです。
</para>
</sect3>

<sect3 id="network">
<title>広範囲かつ強靭なネットワーキング</title>
<para>
    NetBSD は、以下のような種類のネットワークに対応しています。
    <itemizedlist>
	<listitem>ARCnet</listitem>
	<listitem>ATM</listitem>
	<listitem>Ethernet</listitem>
	<listitem>FDDI</listitem>
	<listitem>HIPPI</listitem>
	<listitem>PPP - &man.pppd.8;</listitem>
	<listitem>SLIP - &man.slip.8;</listitem>
	<listitem>Token Ring</listitem>
    </itemizedlist>
    ARCnet に対応する過程で ARP サブシステムは書き換えられ、
    イーサネット依存性をなくし、より一般的に適用可能になりました。
    </para>
    <para>
    NetBSD はまた、以下のネットワークプロトコルにも対応しています。
    <itemizedlist>
	<listitem>Appletalk - &man.atalk.4;</listitem>
	<listitem>ISO - &man.iso.4;</listitem>
	<listitem>TCP/IP (IPv4) - &man.ip.4;</listitem>
	<listitem>TCP/IP (IPv6) - &man.ip6.4;</listitem>
    </itemizedlist>
    </para>
    <para>
    NetBSD にはまた、
    &man.bootparamd.8;, &man.bootpd.8;, &man.dhcpd.8;,
    &man.ftpd.8;, &man.identd.8;, &man.mopd.8;, &man.named.8;, &man.postfix.1;, &man.rarpd.8;,
    &man.rbootd.8;, &man.sshd.8;, &man.tftpd.8;, &man.xntpd.8;
    をはじめとする、
    tcp wrappers 対応を適切に組み込んだ標準的なネットワーキングデーモンが多く附属しています。
</para>
</sect3>

<sect3 id="wireless">
<title>無線ネットワーク</title>
<para>
    NetBSD は、IEEE 802.11 にもとづく多くの無線ネットワークデバイスに対応しています。
    &man.an.4;, &man.ath.4;, &man.atu.4;, &man.atw.4;, &man.awi.4;, &man.cnw.4;, &man.ral.4;, &man.ray.4;, &man.rtw.4;, &man.rum.4;, &man.wi.4;, &man.wpi.4;, &man.zyd.4; をご覧ください。
</para>
</sect3>

</sect2>

<html:hr />

<sect2 id="portabilty">
  <title>移植性および対応プラットフォーム</title>
  
  <sect3 id="multi-platform">
    <title>複数プラットフォーム対応</title>
    <para>
      NetBSD は、古いアーキテクチャーに対応し続けていますが、Alpha、
      PowerPC、 PC システムの最新のハイエンドハードウェアの性能を引き出せるよう設計されています。
      これはすべて、単一のソースツリーをもとに実現されていますが、
      正しい設計ときれいなコードを重視しているからこそ可能なことです。
      また、これにより、 NetBSD は、
      <ulink url="../ports/hpcmips/">mips</ulink>,
      <ulink url="../ports/hpcarm/">ARM</ulink>,
      <ulink url="../ports/hpcsh/">Super-H</ulink>
      にもとづくハンドヘルド Windows CE
      デバイスといった新しいマシンや組み込みプラットフォームへ移植をするための、
      理想的なコードベースとなっています。
    </para>
  </sect3>
  
  <sect3 id="embedded-systems">
    <title>組み込みシステム上の NetBSD</title>
    <para>NetBSD オペレーティングシステムは高い移植性を持っていますが、
      対応ハードウェアプラットフォームの多くは組み込みアプリケーションに適したものです。
      詳細は<ulink url="embed.html">組み込みシステム上の NetBSD</ulink>
      の説明をご覧ください。
    </para>
  </sect3>
  
</sect2>

<html:hr />

<sect2 id="storage">
<title>ストレージ</title>

<sect3 id="raid">
<title>ハードウェアおよびソフトウェア RAID</title>
<para>
    多くの標準的な SCSI RAID デバイスのほか、 NetBSD は
    RAIDframe によって、各種 RAID コントローラーと
    完全なソフトウェア RAID 0, 1, 4, 5, 6 システムに対応しています。 (<ulink
    url="http://www.cs.usask.ca/staff/oster/raid.html">より
    詳しく</ulink>)
</para>
</sect3>

<sect3 id="pciide">
<title>高性能 PCI IDE</title>
<para>
    最近の PCI IDE コントローラーの多くは、高速な DMA 転送に対応しています。
    NetBSD は、「そのままの状態で」この性能を引き出すことができる
    数少ないシステムのひとつです。 NetBSD のきれいな設計のおかげで、<ulink
    url="../ports/alpha/">alpha</ulink>, <ulink url="../ports/i386/">i386</ulink>,
    <ulink url="../ports/macppc/">macppc</ulink>,
    <ulink url="../ports/sparc64/">sparc64</ulink> で、
    同じドライバーと機能が使えるようになっています。
</para>
</sect3>

<sect3 id="scsipi">
<title>SCSIPI サブシステム - SCSI と ATAPI の結合</title>
<para>
    NetBSD は、統合された SCSIPI サブシステムを実装しています。
    統合することでコードの重複をなくし、また、多くのデバイスについて、
    ユーザーランドの SCSI と ATAPI のインターフェースを共通化することができます。
    この直接の成果として、ATAPI CD-R ユニットが使えるようになった時には、
    <filename role="pkg">sysutils/cdrtools</filename> のような既存のツールは、
    何も修正しなくても、 ATAPI CD-R で使うことができたのです。
</para>
</sect3>

<sect3 id="large-filesystems">
<title>64 ビットファイルシステム</title>
<para>
    NetBSD は 1994 年 10 月の 1.0 リリース以降、
    64 ビットのファイルシステムを含んでいます。
    NetBSD の berkeley fast filesystem では、 64 ビットと
    32 ビットのマシンのいずれも、容量の上限が 4TB (4096GB) となっています。
    ファイルやユーザーのファイル quota もまた、テラバイト単位まで到達できます。
    多くの他のシステムでは、
    32 ビットマシンでのファイルの大きさの上限は 4GB です。
    </para>
    <para>
    ffs は、2^31 までのフラグメントブロックを持つことができます
    ─このため、ファイルシステムの容量の上限は、
    フラグメントの容量によって変わります。
    <table id="table-64bit">
    <tr><th>フラグメントの容量</th><th>ファイルシステムの容量の上限</th></tr>
    <tr><td>512 bytes</td><td>1 TB</td></tr>
    <tr><td>1kB      </td><td>2 TB</td></tr>
    <tr><td>2kB      </td><td>4 TB</td></tr>
    </table>
</para>
</sect3>

<sect3 id="large-ide">
<title>大容量 IDE ディスク</title>
<para>
    NetBSD は、34GB を超えるサイズの IDE ディスクに完全に対応しており、
    8GB を超える部分からのブートも (BIOS が対応していれば) 可能です。
    NetBSD 1.6 からは、137GB を超える容量を持つディスクにアクセスするために
    48 ビットの論理ブロックアドレス (ATA-6 拡張アドレッシング)
    を使うこともできます。
</para>
</sect3>

<sect3 id="softupdates">
<title>高性能と信頼性をもたらす、FFS 上の Soft Updates</title>
<para>
    Soft Updates は、非同期書き込みに近いディスク性能を得るために、
    メタデータ喪失の危険を冒すことなく、
    メタデータの書き込み順序を変えることができます。
    これは、 FFS ファイルシステムの性能を大幅に改善します。
    (<ulink url="http://www.ece.cmu.edu/~ganger/papers/CSE-TR-254-95/">より
    詳しく</ulink>)
</para>
</sect3>

<sect3 id="filesystems">
<title>多くの種類のファイルシステム</title>
<para>
    NetBSD は多くの異なるファイルシステムを利用・処理することができ、
    データ交換と<ulink
    url="#emulation">バイナリー互換</ulink>いずれの面でも便利です。
    また、オプションで、システムは、
    逆のバイトオーダーで書き込まれているファイルシステムをマウントすることもできます。
    他のいくつかのシステムとは異なり、NetBSD はメタデータに書き込み順序をもうけます。
    これにより、&man.fsync.2; は、電源が切れても
    (たとえ ext2fs であっても) 重要なデータを消失しないですみます。
    <itemizedlist>
    <listitem><emphasis role="bold">ffs</emphasis> (Berkeley Fast File System, バークレー高速ファイルシステム) - 
	<ulink url="#softupdates">soft
	updates</ulink> を含んだ最新の 64 ビット FFS
        と、一部のベンダー (SunOS, Ultrix など) で使われている古い
        32 ビット FFS の両方。</listitem>
    <listitem><emphasis role="bold">lfs</emphasis> (Log-structured File System, ログ構造化ファイルシステム) - LFS
	は、間にヘッドの走査が入って速度を落とされることがなく、
	非同期のファイル作成と高速なファイル書き込みを安全におこなうことや、
	クラッシュ後の復旧をほぼ瞬時におこなうことができるよう設計されています。
	これは、IRIX の XFS, Reiserfs,
	Microsoft の NTFS, IBM の JFS, や Netware および Unixware の類似のファイルシステムと同様の、
	より完全なログ構造化の形態である、「ジャーナル」ファイルシステムです
	(<ulink url="http://www.hhhh.org/perseant/lfs.html">より詳しく</ulink>)。</listitem>
    <listitem><emphasis role="bold">tmpfs</emphasis> (効率的な
	メモリーファイルシステム)</listitem>
    <listitem><emphasis role="bold">iso9660</emphasis> (標準的な CD のファイルシステム、
        Rockridge および Joliet 拡張に対応).</listitem>
    <listitem><emphasis role="bold">msdosfs</emphasis> (Windows, MS-DOS, Atari TOS) -
	長いファイル名、FAT32 および VFAT を含む。</listitem>
    <listitem><emphasis role="bold">ntfs</emphasis> (Windows NT のネイティブのファイルシステム)</listitem>
    <listitem><emphasis role="bold">ext2fs</emphasis> (Linux の拡張ファイルシステム).</listitem>
    <listitem><emphasis role="bold">ados</emphasis> (AmigaDOS のファイルシステム).</listitem>
    <listitem><emphasis role="bold">filecorefs</emphasis> (Acorn RISC OS のファイルシステム).</listitem>
    </itemizedlist>
    </para>
    <para>NetBSD は、以下のような多様な仮想ファイルシステムにも対応しています。
    <itemizedlist>
    <listitem><emphasis role="bold">kernfs</emphasis> - カーネル情報へのアクセス</listitem>
    <listitem><emphasis role="bold">nullfs</emphasis> - ループバックマウント用</listitem>
    <listitem><emphasis role="bold">portal</emphasis> - portal デーモンファイルシステム</listitem>
    <listitem><emphasis role="bold">procfs</emphasis> - プロセス情報へのアクセス</listitem>
    <listitem><emphasis role="bold">umapfs</emphasis> - uid と gid の自動変換</listitem>
    <listitem><emphasis role="bold">unionfs</emphasis> - あるディレクトリーを、
	その内容と重複しない部分はマウント前のディレクトリーが見える形でマウントする。
	CD-ROM の上に書き込み可能なファイルシステムをマウントするために使うことができる。</listitem>
    </itemizedlist>
</para>
</sect3>

<sect3 id="puffs">
    <title>ユーザー空間ファイルシステムへの対応</title>

    <para>
	NetBSD は、バージョン 4.0 から、
	ユーザー空間のサーバーとしてファイルシステムを作成するための
	&man.puffs.3; の枠組を提供しています。これは、
	テストが楽になるよう新しいファイルシステムの開発をユーザー空間でおこなったり、
	ユーザー空間の機能を (SSH ファイルシステムのような)
	ファイルシステムという形にするなど、無数の可能性を持っています。
	NetBSD 5.0 には
	<ulink url="http://fuse.sourceforge.net/">FUSE</ulink>
	的なインターフェースを提供する
	<emphasis>refuse</emphasis> ライブラリーが含まれます。
	<emphasis>refuse</emphasis> を使うと、
	多くの FUSE ファイルシステムを &man.puffs.3; の上で動かすことができます。
    </para>

    <para>
	puffs と refuse についてのさらなる情報は、
	<quote><ulink url="../../docs/puffs/">
	ユーザー空間内ファイルシステム</ulink></quote>のページにあります。
    </para>
</sect3>

<sect3 id="dvd">
<title>DVD ROM と RAM</title>
<para>
    NetBSD は、現在のところ、大容量 DVD ドライブに対して、
    DVD 共通のファイルシステムからのデータの読み込みに対応しています。
</para>
</sect3>

<sect3 id="cgd">
<title>ディスクの暗号化</title>
<para>
    NetBSD では、&man.cgd.4; ドライバーを介することで、
    透過的にディスクを暗号化することができます。&man.cgd.4;
    は、他のブロックデバイスの上層で、
    物理的なディスクパーティションや &man.vnd.4; 疑似デバイスのような、
    論理的なデバイスとして働きます。
    &man.cgd.4; は現在、AES, 3DES, Blowfish 暗号に
    CBC モードで対応しています。
</para>

<para>
    広範にわたって書かれた &man.cgd.4; の導入は、
    <ulink url="../../docs/guide/en/">NetBSD Guide</ulink> 内に
    <ulink url="../../docs/guide/en/chap-cgd.html">あります</ulink>。
</para>
</sect3>

</sect2>
<html:hr />

<sect2 id="other">
<title>その他の特徴</title>

<sect3 id="pkg">
<title>パッケージシステム (アプリケーション)</title>
<para>
    NetBSD パッケージコレクション (<ulink
    url="../docs/software/packages.html">pkgsrc</ulink>)
    を使って、多くのサードパーティー製アプリケーションの
    ソースやバイナリーを、簡単にインストールできます。
    これには、<filename
    role="pkg">meta-pkgs/kde3</filename>, 
    <filename role="pkg">meta-pkgs/gnome</filename>,
    <filename role="pkg">www/firefox</filename>, 
    <filename role="pkg">www/apache2</filename>, 
    <filename role="pkg">lang/perl5</filename>,
    <filename role="pkg">net/samba</filename>, 
    <filename role="pkg">misc/openoffice</filename>, 
    <filename role="pkg">graphics/gimp</filename>
    などなど、あらゆるものが含まれています。
    以下のような機能があります:
    <itemizedlist>
    <listitem>ローカルおよびリモートのバイナリーパッケージの容易なインストール。
	他のパッケージが必要な場合、それらもすべて自動的にダウンロードできます。</listitem>
    <listitem>ソースからの構築とバイナリーパッケージのインストールのいずれでも、
        固定された依存とワイルドカード依存を扱えます。</listitem>
    <listitem>バイナリーやソースの再配布ができないツールについても、
	インストールの自動化が可能です。</listitem>
    <listitem>パッケージシステムの基盤は、
	個々のパッケージを構築するために必要な情報を、
	他のパッケージシステムより短時間で簡単に保守できるよう設計されています。</listitem>
    <listitem>"pristine source" の思想に従い、
        変更点をパッケージの作者に還元することと同様に、
        ローカルのパッチや第三者製のパッチを組み入れることも容易におこなうことができます。</listitem>
    <listitem>Imakefile, GNU autoconf ……など、
	多くのソース配布に共通な内部構造への対応が組み込まれています。
        これにより、パッケージごとに特有の複雑な構築ルールの必要性を減らしています。</listitem>
    </itemizedlist>
    pkgsrc は FreeBSD の 'ports' システムをもとにしていますが、
    大幅に拡張されています。
</para>
</sect3>

<sect3 id="mi-drivers">
<title>機種独立のドライバーの枠組み</title>
<para>
    チップセットドライバーとバスに付随するコードとのきれいな分離と、
    MI &man.bus.space.9; と &man.bus.dma.9; の枠組みの実装には、
    以下のような利点があります。
    <itemizedlist>
    <listitem>新たなハードウェアへの移植の単純化。</listitem>
    <listitem>カーネルのサイズの節約。
        同じコントローラーを使うデバイスは同じドライバーを共有し、
        このほかにはバス依存の必要な部分
	(isa/eisa/pci/pcmcia/sbus/cardbus...) のみを含む。</listitem>
    <listitem>デバイスドライバー (32 ビット pci デバイスを含む) が
	64 ビットの物理メモリーに対応済 (他の多くのシステムは未対応)。</listitem>
    <listitem>バウンスバッファーへの対応は、適切なハードウェアを持つマシン (例:
	sparc 、ほぼすべての alpha) では不要なものであり、必要となるのは
	個々のドライバーではなくバスコードの機能としてである。</listitem>
    </itemizedlist>
</para>
</sect3>

<sect3 id="mi-audio">
<title>機種独立のオーディオの枠組み</title>
<para>
    NetBSD では、SCSI サブシステムと同様の手法により、
    個々のチップセットドライバーの下に汎用のオーディオ層があります。
    これにより、他のフリー OS プロジェクトに比べ、
    高い一貫性とコード共有が実現できます。
</para>
</sect3>

<sect3 id="kernel-debugging">
<title>カーネルデバッグ</title>
<para>
    <itemizedlist>
    <listitem>NetBSD は、完全な機能を持つカーネルデバッガー (DDB) を持っており、
        これは、他のいくつかのシステムの 'SysRQ' 型の機能より高機能です。</listitem>
    <listitem>カーネルのクラッシュダンプに対応しており、カーネルデバッグが容易です。</listitem>
    <listitem>厳密な一貫性チェック - null ポインターにカーネルがアクセスすると、
	汚染の可能性のあるデータによる実行を防ぐため、
	DDB に落ちるか、クラッシュダンプを吐いてリブートします。</listitem>
    </itemizedlist>
</para>
</sect3>

<sect3 id="emulation">
<title>OS エミュレーション</title>
<para>
    NetBSD には特有のバイナリー互換機能があり、カーネル内で非ネイティブの
    (同じプロセッサー向けの) バイナリーが透過的に実行できるので、
    ユーザーの投資を軽減することができます。
    以下のシステムとの互換機能があります。
    <itemizedlist>
    <listitem>BSD/OS (i386)</listitem>
    <listitem>Darwin (macppc)</listitem>
    <listitem>FreeBSD (i386)</listitem>
    <listitem>HP-UX (m68k)</listitem>
    <listitem>IRIX (sgimips)</listitem>
    <listitem>Linux (i386, m68k, alpha, powerpc, mips, arm)</listitem>
    <listitem>OSF1/Digitial UNIX/Tru64 (alpha)</listitem>
    <listitem>SCO/iBCS2 (i386)</listitem>
    <listitem>Solaris および SVR4 (sparc, sparc64, i386, m68k)</listitem>
    <listitem>SunOS 4 (sparc, sparc64, m68k)</listitem>
    <listitem>ULTRIX (mips, vax)</listitem>
    </itemizedlist>
    </para>
    <para>
    <ulink url="../docs/software/packages.html">パッケージシステム</ulink>
    の <filename role="pkg">emulators</filename> カテゴリーには、以下のような多くのエミュレーターがあります。
    <itemizedlist>
    <listitem><filename role="pkg">emulators/bochs</filename> - i386 機エミュレーター</listitem>
    <listitem><filename role="pkg">emulators/ia64sim</filename> - IA64 (Intel(R) Architecture 64)</listitem>
    <listitem><filename role="pkg">emulators/qemu</filename> - 動的翻訳を使った、汎用プロッセーサーエミュレーター</listitem>
    <listitem><filename role="pkg">emulators/spim</filename> - MIPS R2000 シミュレーター</listitem>
    <listitem><filename role="pkg">emulators/uae</filename> - Amiga</listitem>
    <listitem><filename role="pkg">emulators/wine</filename> - Windows エミュレーター</listitem>
    <listitem><filename role="pkg">emulators/xcopilot</filename> - PalmPilot</listitem>
    <listitem><filename role="pkg">emulators/xmame</filename> - 多くの古いアーケード機やゲーム機</listitem>
    </itemizedlist>
    <ulink url="#filesystems">対応ファイルシステム</ulink>もご覧ください。
</para>
</sect3>

<sect3 id="usb">
<title>USB (Universal serial bus)</title>
<para>
    NetBSD は USB に対応した最初のフリー OS であり、Apple が
    MacOS X をはじめるより前から Apple Power Macintosh マシンで
    USB を使っていました。<ulink url="../ports/alpha/">alpha</ulink>,
    <ulink url="../ports/i386/">i386</ulink>, <ulink
    url="../ports/macppc/">macppc</ulink> をはじめとする、
    適切なプラットフォームすべてで USB を利用することができます。
    対応デバイスには、マウス、キーボード、モデム、
    大容量ストレージデバイス (ZIP) などがあり、
    USB 標準の開発とともに、より多くのドライバーが開発されています。
</para>
</sect3>

<sect3 id="other-devices">
<title>その他のデバイス対応</title>
<para>
    <itemizedlist>
    <listitem>ISA PnP (Plug'n'play) デバイスに対する、うまく設計された堅固な対応。</listitem>
    <listitem>生 (raw) デバイスへのアクセス。</listitem>
    </itemizedlist>
</para>
</sect3>

<sect3 id="uvm">
<title>UVM 仮想メモリーシステム</title>
<para>
    UVM は、広範なデータ移動を柔軟におこなう機構を持つ、
    I/O と IPC (Inter Process Communication, プロセス間通信)
    システムを提供するために設計された、新しい仮想メモリーシステムです。
    UVM は Mach にもとづく 4.4BSD VM システムを完全に置き換えるもので、
    他の VM システムにくらべ仮想メモリーの性能が改善されています。 (<ulink
    url="../docs/kernel/uvm.html">より詳しく</ulink>)
</para>
</sect3>

<sect3 id="cardbus">
<title>cardbus</title>
<para>
    最近のラップトップで使われている 'cardbus' PC カードおよび PCMCIA
    ソケットに対応しています。
    これには、ホットスワップ、電源管理、デバイスの取り外しなどを含みます。
</para>
</sect3>

<sect3 id="wscons">
<title>wscons 機種独立コンソール</title>
<para>
    &man.wscons.4; ドライバーは、
    コンソールへの機種独立なアクセスを可能とします。
    これは多くの協調モジュール、特に次のようなものから構成されます。
    <itemizedlist>
    <listitem>ディスプレイアダプター、キーボード、マウスへのハードウェア対応、
        &man.wsdisplay.4;, &man.wskbd.4;, &man.wsmouse.4; 参照。</listitem>
    <listitem>vt100 や sun のような端末エミュレーションモジュール。</listitem>
    <listitem>既存の端末ドライバーの、
	制御操作や低レベルの振舞に対応するための互換オプション。</listitem>
    </itemizedlist>
</para>
</sect3>

<sect3 id="64bit">
<title>64 ビットクリーン</title>
<para>
    NetBSD は、<ulink url="../ports/alpha/">alpha</ulink> のような
    64 ビットアーキテクチャーに最初に対応したフリーの OS であり、他のどのフリー OS
    よりも多くの alpha の機種に対応し続けています。
    完全なソースツリーはながらく 64 ビットクリーンであり、また<ulink
    url="../docs/software/packages.html">パッケージシステム</ulink>には、
    多くのサードパーティー製アプリケーションを
    64 ビットクリーン化するパッチが含まれます。
</para>
</sect3>

<sect3 id="non-exec">
<title>実行不可スタックおよびヒープ </title>
<para>
    バージョン 2.0 から、NetBSD は多くのプラットフォームで実行不可マップに対応しています。
    実行不可マップが有効となっている場合、スタックとヒープは、
    書き込み可能とマークされた部分は実行できないようになります。
    これにより、バッファーオーバーランの攻撃が難しくなります。
    この題目については、
    <ulink url="../../docs/kernel/non-exec.html">詳しい情報</ulink>
    を別ページに用意しています。
</para>
</sect3>

<sect3 id="kauth">
<title>カーネル認証の枠組み (kauth)</title>
<para>
    NetBSD 4.0 から、NetBSD カーネルは、広範な認証の枠組み
    &man.kauth.9; を使っています。
    これより前の NetBSD バージョンでは、伝統的な Unix や BSD の意味論に従い、
    アクセス制御ポリシーがカーネル内でほとんどハードコードされていました。
    これに対して、新しい枠組みでは、
    認証関連の判断はすべて &man.kauth.9; の枠組みに渡されるようになっています。
    こうすることで、基本システムの一部としても LKM としても、
    新しいセキュリティーモデルを実装することや、
    伝統的な 4.4BSD/NetBSD のセキュリティーモデルを改めることができます。
</para>
</sect3>

</sect2>
</sect1>
</webpage>
